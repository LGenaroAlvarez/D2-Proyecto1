

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Sep 24 11:02:18 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.40
    45                           ; Generated 17/11/2021 GMT
    46                           ; 
    47                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F887 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  0105                     	;# 
   143  0107                     	;# 
   144  0108                     	;# 
   145  0109                     	;# 
   146  010C                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0185                     	;# 
   152  0187                     	;# 
   153  0188                     	;# 
   154  0189                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0008                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0088                     	;# 
   197  0089                     	;# 
   198  008C                     	;# 
   199  008D                     	;# 
   200  008E                     	;# 
   201  008F                     	;# 
   202  0090                     	;# 
   203  0091                     	;# 
   204  0092                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0095                     	;# 
   210  0096                     	;# 
   211  0097                     	;# 
   212  0098                     	;# 
   213  0099                     	;# 
   214  009A                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  0105                     	;# 
   221  0107                     	;# 
   222  0108                     	;# 
   223  0109                     	;# 
   224  010C                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  0185                     	;# 
   230  0187                     	;# 
   231  0188                     	;# 
   232  0189                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235  0000                     	;# 
   236  0001                     	;# 
   237  0002                     	;# 
   238  0003                     	;# 
   239  0004                     	;# 
   240  0005                     	;# 
   241  0006                     	;# 
   242  0007                     	;# 
   243  0008                     	;# 
   244  0009                     	;# 
   245  000A                     	;# 
   246  000B                     	;# 
   247  000C                     	;# 
   248  000D                     	;# 
   249  000E                     	;# 
   250  000E                     	;# 
   251  000F                     	;# 
   252  0010                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0014                     	;# 
   257  0015                     	;# 
   258  0015                     	;# 
   259  0016                     	;# 
   260  0017                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001B                     	;# 
   265  001B                     	;# 
   266  001C                     	;# 
   267  001D                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  0081                     	;# 
   271  0085                     	;# 
   272  0086                     	;# 
   273  0087                     	;# 
   274  0088                     	;# 
   275  0089                     	;# 
   276  008C                     	;# 
   277  008D                     	;# 
   278  008E                     	;# 
   279  008F                     	;# 
   280  0090                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0095                     	;# 
   288  0096                     	;# 
   289  0097                     	;# 
   290  0098                     	;# 
   291  0099                     	;# 
   292  009A                     	;# 
   293  009B                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  009F                     	;# 
   298  0105                     	;# 
   299  0107                     	;# 
   300  0108                     	;# 
   301  0109                     	;# 
   302  010C                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  0185                     	;# 
   308  0187                     	;# 
   309  0188                     	;# 
   310  0189                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313  0000                     	;# 
   314  0001                     	;# 
   315  0002                     	;# 
   316  0003                     	;# 
   317  0004                     	;# 
   318  0005                     	;# 
   319  0006                     	;# 
   320  0007                     	;# 
   321  0008                     	;# 
   322  0009                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000D                     	;# 
   327  000E                     	;# 
   328  000E                     	;# 
   329  000F                     	;# 
   330  0010                     	;# 
   331  0011                     	;# 
   332  0012                     	;# 
   333  0013                     	;# 
   334  0014                     	;# 
   335  0015                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0017                     	;# 
   339  0018                     	;# 
   340  0019                     	;# 
   341  001A                     	;# 
   342  001B                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  001D                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  0081                     	;# 
   349  0085                     	;# 
   350  0086                     	;# 
   351  0087                     	;# 
   352  0088                     	;# 
   353  0089                     	;# 
   354  008C                     	;# 
   355  008D                     	;# 
   356  008E                     	;# 
   357  008F                     	;# 
   358  0090                     	;# 
   359  0091                     	;# 
   360  0092                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0093                     	;# 
   364  0094                     	;# 
   365  0095                     	;# 
   366  0096                     	;# 
   367  0097                     	;# 
   368  0098                     	;# 
   369  0099                     	;# 
   370  009A                     	;# 
   371  009B                     	;# 
   372  009C                     	;# 
   373  009D                     	;# 
   374  009E                     	;# 
   375  009F                     	;# 
   376  0105                     	;# 
   377  0107                     	;# 
   378  0108                     	;# 
   379  0109                     	;# 
   380  010C                     	;# 
   381  010C                     	;# 
   382  010D                     	;# 
   383  010E                     	;# 
   384  010F                     	;# 
   385  0185                     	;# 
   386  0187                     	;# 
   387  0188                     	;# 
   388  0189                     	;# 
   389  018C                     	;# 
   390  018D                     	;# 
   391  0000                     	;# 
   392  0001                     	;# 
   393  0002                     	;# 
   394  0003                     	;# 
   395  0004                     	;# 
   396  0005                     	;# 
   397  0006                     	;# 
   398  0007                     	;# 
   399  0008                     	;# 
   400  0009                     	;# 
   401  000A                     	;# 
   402  000B                     	;# 
   403  000C                     	;# 
   404  000D                     	;# 
   405  000E                     	;# 
   406  000E                     	;# 
   407  000F                     	;# 
   408  0010                     	;# 
   409  0011                     	;# 
   410  0012                     	;# 
   411  0013                     	;# 
   412  0014                     	;# 
   413  0015                     	;# 
   414  0015                     	;# 
   415  0016                     	;# 
   416  0017                     	;# 
   417  0018                     	;# 
   418  0019                     	;# 
   419  001A                     	;# 
   420  001B                     	;# 
   421  001B                     	;# 
   422  001C                     	;# 
   423  001D                     	;# 
   424  001E                     	;# 
   425  001F                     	;# 
   426  0081                     	;# 
   427  0085                     	;# 
   428  0086                     	;# 
   429  0087                     	;# 
   430  0088                     	;# 
   431  0089                     	;# 
   432  008C                     	;# 
   433  008D                     	;# 
   434  008E                     	;# 
   435  008F                     	;# 
   436  0090                     	;# 
   437  0091                     	;# 
   438  0092                     	;# 
   439  0093                     	;# 
   440  0093                     	;# 
   441  0093                     	;# 
   442  0094                     	;# 
   443  0095                     	;# 
   444  0096                     	;# 
   445  0097                     	;# 
   446  0098                     	;# 
   447  0099                     	;# 
   448  009A                     	;# 
   449  009B                     	;# 
   450  009C                     	;# 
   451  009D                     	;# 
   452  009E                     	;# 
   453  009F                     	;# 
   454  0105                     	;# 
   455  0107                     	;# 
   456  0108                     	;# 
   457  0109                     	;# 
   458  010C                     	;# 
   459  010C                     	;# 
   460  010D                     	;# 
   461  010E                     	;# 
   462  010F                     	;# 
   463  0185                     	;# 
   464  0187                     	;# 
   465  0188                     	;# 
   466  0189                     	;# 
   467  018C                     	;# 
   468  018D                     	;# 
   469  0000                     	;# 
   470  0001                     	;# 
   471  0002                     	;# 
   472  0003                     	;# 
   473  0004                     	;# 
   474  0005                     	;# 
   475  0006                     	;# 
   476  0007                     	;# 
   477  0008                     	;# 
   478  0009                     	;# 
   479  000A                     	;# 
   480  000B                     	;# 
   481  000C                     	;# 
   482  000D                     	;# 
   483  000E                     	;# 
   484  000E                     	;# 
   485  000F                     	;# 
   486  0010                     	;# 
   487  0011                     	;# 
   488  0012                     	;# 
   489  0013                     	;# 
   490  0014                     	;# 
   491  0015                     	;# 
   492  0015                     	;# 
   493  0016                     	;# 
   494  0017                     	;# 
   495  0018                     	;# 
   496  0019                     	;# 
   497  001A                     	;# 
   498  001B                     	;# 
   499  001B                     	;# 
   500  001C                     	;# 
   501  001D                     	;# 
   502  001E                     	;# 
   503  001F                     	;# 
   504  0081                     	;# 
   505  0085                     	;# 
   506  0086                     	;# 
   507  0087                     	;# 
   508  0088                     	;# 
   509  0089                     	;# 
   510  008C                     	;# 
   511  008D                     	;# 
   512  008E                     	;# 
   513  008F                     	;# 
   514  0090                     	;# 
   515  0091                     	;# 
   516  0092                     	;# 
   517  0093                     	;# 
   518  0093                     	;# 
   519  0093                     	;# 
   520  0094                     	;# 
   521  0095                     	;# 
   522  0096                     	;# 
   523  0097                     	;# 
   524  0098                     	;# 
   525  0099                     	;# 
   526  009A                     	;# 
   527  009B                     	;# 
   528  009C                     	;# 
   529  009D                     	;# 
   530  009E                     	;# 
   531  009F                     	;# 
   532  0105                     	;# 
   533  0107                     	;# 
   534  0108                     	;# 
   535  0109                     	;# 
   536  010C                     	;# 
   537  010C                     	;# 
   538  010D                     	;# 
   539  010E                     	;# 
   540  010F                     	;# 
   541  0185                     	;# 
   542  0187                     	;# 
   543  0188                     	;# 
   544  0189                     	;# 
   545  018C                     	;# 
   546  018D                     	;# 
   547  0000                     	;# 
   548  0001                     	;# 
   549  0002                     	;# 
   550  0003                     	;# 
   551  0004                     	;# 
   552  0005                     	;# 
   553  0006                     	;# 
   554  0007                     	;# 
   555  0008                     	;# 
   556  0009                     	;# 
   557  000A                     	;# 
   558  000B                     	;# 
   559  000C                     	;# 
   560  000D                     	;# 
   561  000E                     	;# 
   562  000E                     	;# 
   563  000F                     	;# 
   564  0010                     	;# 
   565  0011                     	;# 
   566  0012                     	;# 
   567  0013                     	;# 
   568  0014                     	;# 
   569  0015                     	;# 
   570  0015                     	;# 
   571  0016                     	;# 
   572  0017                     	;# 
   573  0018                     	;# 
   574  0019                     	;# 
   575  001A                     	;# 
   576  001B                     	;# 
   577  001B                     	;# 
   578  001C                     	;# 
   579  001D                     	;# 
   580  001E                     	;# 
   581  001F                     	;# 
   582  0081                     	;# 
   583  0085                     	;# 
   584  0086                     	;# 
   585  0087                     	;# 
   586  0088                     	;# 
   587  0089                     	;# 
   588  008C                     	;# 
   589  008D                     	;# 
   590  008E                     	;# 
   591  008F                     	;# 
   592  0090                     	;# 
   593  0091                     	;# 
   594  0092                     	;# 
   595  0093                     	;# 
   596  0093                     	;# 
   597  0093                     	;# 
   598  0094                     	;# 
   599  0095                     	;# 
   600  0096                     	;# 
   601  0097                     	;# 
   602  0098                     	;# 
   603  0099                     	;# 
   604  009A                     	;# 
   605  009B                     	;# 
   606  009C                     	;# 
   607  009D                     	;# 
   608  009E                     	;# 
   609  009F                     	;# 
   610  0105                     	;# 
   611  0107                     	;# 
   612  0108                     	;# 
   613  0109                     	;# 
   614  010C                     	;# 
   615  010C                     	;# 
   616  010D                     	;# 
   617  010E                     	;# 
   618  010F                     	;# 
   619  0185                     	;# 
   620  0187                     	;# 
   621  0188                     	;# 
   622  0189                     	;# 
   623  018C                     	;# 
   624  018D                     	;# 
   625                           
   626                           	psect	idataBANK0
   627  07FC                     __pidataBANK0:
   628                           
   629                           ;initializer for _PS_val
   630  07FC  3410               	retlw	16
   631  07FD  3400               	retlw	0
   632                           
   633                           ;initializer for _Fosc
   634  07FE  3401               	retlw	1
   635                           
   636                           	psect	strings
   637  07A0                     __pstrings:
   638  07A0                     stringtab:
   639  07A0                     __stringtab:
   640                           
   641                           ;	String table - string pointers are 1 byte each
   642  07A0  1BFF               	btfsc	btemp+1,7
   643  07A1  2FAA               	ljmp	stringcode
   644  07A2  1383               	bcf	3,7
   645  07A3  187F               	btfsc	btemp+1,0
   646  07A4  1783               	bsf	3,7
   647  07A5  0800               	movf	0,w
   648  07A6  0A84               	incf	4,f
   649  07A7  1903               	skipnz
   650  07A8  0AFF               	incf	btemp+1,f
   651  07A9  0008               	return
   652  07AA                     stringcode:
   653  07AA                     stringdir:
   654  07AA  3007               	movlw	high stringdir
   655  07AB  008A               	movwf	10
   656  07AC  0804               	movf	4,w
   657  07AD  0A84               	incf	4,f
   658  07AE  0782               	addwf	2,f
   659  07AF                     __stringbase:
   660  07AF  3400               	retlw	0
   661  07B0                     __end_of__stringtab:
   662  07B0                     _dpowers:
   663  07B0  3401               	retlw	1
   664  07B1  3400               	retlw	0
   665  07B2  340A               	retlw	10
   666  07B3  3400               	retlw	0
   667  07B4  3464               	retlw	100
   668  07B5  3400               	retlw	0
   669  07B6  34E8               	retlw	232
   670  07B7  3403               	retlw	3
   671  07B8  3410               	retlw	16
   672  07B9  3427               	retlw	39
   673  07BA                     __end_of_dpowers:
   674  001E                     _ADRESH	set	30
   675  0001                     _TMR0	set	1
   676  0019                     _TXREG	set	25
   677  0018                     _RCSTAbits	set	24
   678  0007                     _PORTCbits	set	7
   679  0008                     _PORTD	set	8
   680  0006                     _PORTB	set	6
   681  0005                     _PORTA	set	5
   682  000B                     _INTCONbits	set	11
   683  0006                     _PORTBbits	set	6
   684  000C                     _PIR1bits	set	12
   685  001F                     _ADCON0bits	set	31
   686  0008                     _PORTDbits	set	8
   687  0033                     _RB3	set	51
   688  0037                     _RB7	set	55
   689  0036                     _RB6	set	54
   690  0035                     _RB5	set	53
   691  0034                     _RB4	set	52
   692  0064                     _TXIF	set	100
   693  0058                     _RBIF	set	88
   694  0066                     _ADIF	set	102
   695  005A                     _T0IF	set	90
   696  009E                     _ADRESL	set	158
   697  009F                     _ADCON1bits	set	159
   698  008F                     _OSCCONbits	set	143
   699  008C                     _PIE1bits	set	140
   700  009A                     _SPBRGH	set	154
   701  0099                     _SPBRG	set	153
   702  0098                     _TXSTAbits	set	152
   703  0088                     _TRISD	set	136
   704  0096                     _IOCBbits	set	150
   705  0095                     _WPUB	set	149
   706  0081                     _OPTION_REGbits	set	129
   707  0086                     _TRISB	set	134
   708  0085                     _TRISA	set	133
   709  0187                     _BAUDCTLbits	set	391
   710  0189                     _ANSELH	set	393
   711  0188                     _ANSEL	set	392
   712  07BA                     STR_5:
   713  07BA  3448               	retlw	72	;'H'
   714  07BB  3475               	retlw	117	;'u'
   715  07BC  346D               	retlw	109	;'m'
   716  07BD  3465               	retlw	101	;'e'
   717  07BE  3464               	retlw	100	;'d'
   718  07BF  3461               	retlw	97	;'a'
   719  07C0  3464               	retlw	100	;'d'
   720  07C1  3400               	retlw	0
   721  07C2                     STR_9:
   722  07C2  3431               	retlw	49	;'1'
   723  07C3  3430               	retlw	48	;'0'
   724  07C4  3430               	retlw	48	;'0'
   725  07C5  3400               	retlw	0
   726  07C6                     STR_1:
   727  07C6  3425               	retlw	37	;'%'
   728  07C7  3464               	retlw	100	;'d'
   729  07C8  3400               	retlw	0
   730  07C9                     STR_6:
   731  07C9  3420               	retlw	32	;' '
   732  07CA  3400               	retlw	0
   733  07CB                     STR_10:
   734  07CB  3425               	retlw	37	;'%'
   735  07CC  3400               	retlw	0
   736  07CD                     STR_11:
   737  07CD  3441               	retlw	65	;'A'
   738  07CE  3400               	retlw	0
   739  07CF                     STR_12:
   740  07CF  3442               	retlw	66	;'B'
   741  07D0  3400               	retlw	0
   742  07C9                     
   743                           	psect	cinit
   744  0015                     start_initialization:	
   745                           ; #config settings
   746                           
   747  0015                     __initialization:
   748                           
   749                           ; Initialize objects allocated to BANK0
   750  0015  120A  118A  27FC  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   751  001A  00D3               	movwf	__pdataBANK0& (0+127)
   752  001B  120A  118A  27FD  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   753  0020  00D4               	movwf	(__pdataBANK0+1)& (0+127)
   754  0021  120A  118A  27FE  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   755  0026  00D5               	movwf	(__pdataBANK0+2)& (0+127)
   756                           
   757                           ; Clear objects allocated to BANK1
   758  0027  1383               	bcf	3,7	;select IRP bank0
   759  0028  30BB               	movlw	low __pbssBANK1
   760  0029  0084               	movwf	4
   761  002A  30CF               	movlw	low (__pbssBANK1+20)
   762  002B  120A  158A  271C  120A  118A  	fcall	clear_ram0
   763                           
   764                           ; Clear objects allocated to BANK0
   765  0030  303C               	movlw	low __pbssBANK0
   766  0031  0084               	movwf	4
   767  0032  3053               	movlw	low (__pbssBANK0+23)
   768  0033  120A  158A  271C  120A  118A  	fcall	clear_ram0
   769  0038                     end_of_initialization:	
   770                           ;End of C runtime variable initialization code
   771                           
   772  0038                     __end_of__initialization:
   773  0038  0183               	clrf	3
   774  0039  120A  118A  283C   	ljmp	_main	;jump to C main() function
   775                           
   776                           	psect	bssBANK0
   777  003C                     __pbssBANK0:
   778  003C                     _HS_val:
   779  003C                     	ds	2
   780  003E                     _i:
   781  003E                     	ds	2
   782  0040                     _spst_flag:
   783  0040                     	ds	1
   784  0041                     _spst:
   785  0041                     	ds	1
   786  0042                     _HS_flag:
   787  0042                     	ds	1
   788  0043                     _HS_percent:
   789  0043                     	ds	1
   790  0044                     _msg_flag:
   791  0044                     	ds	1
   792  0045                     _send_cont:
   793  0045                     	ds	1
   794  0046                     _pulse:
   795  0046                     	ds	1
   796  0047                     _milis:
   797  0047                     	ds	1
   798  0048                     _cont:
   799  0048                     	ds	1
   800  0049                     _HS_flag_str:
   801  0049                     	ds	10
   802                           
   803                           	psect	dataBANK0
   804  0053                     __pdataBANK0:
   805  0053                     _PS_val:
   806  0053                     	ds	2
   807  0055                     _Fosc:
   808  0055                     	ds	1
   809                           
   810                           	psect	bssBANK1
   811  00BB                     __pbssBANK1:
   812  00BB                     _spst_str:
   813  00BB                     	ds	10
   814  00C5                     _HS_str:
   815  00C5                     	ds	10
   816                           
   817                           	psect	clrtext
   818  0F1C                     clear_ram0:	
   819                           ;	Called with FSR containing the base address, and
   820                           ;	W with the last address+1
   821                           
   822  0F1C  0064               	clrwdt	;clear the watchdog before getting into this loop
   823  0F1D                     clrloop0:
   824  0F1D  0180               	clrf	0	;clear RAM location pointed to by FSR
   825  0F1E  0A84               	incf	4,f	;increment pointer
   826  0F1F  0604               	xorwf	4,w	;XOR with final address
   827  0F20  1903               	btfsc	3,2	;have we reached the end yet?
   828  0F21  3400               	retlw	0	;all done for this memory range, return
   829  0F22  0604               	xorwf	4,w	;XOR again to restore value
   830  0F23  2F1D               	goto	clrloop0	;do the next byte
   831                           
   832                           	psect	cstackBANK1
   833  00A0                     __pcstackBANK1:
   834  00A0                     ??_initAdc:
   835  00A0                     ?___lwdiv:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  00A0                     initOscFreq@freq:	
   839                           ; 2 bytes @ 0x0
   840                           
   841  00A0                     Lcd_Cmd@a:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  00A0                     Lcd_Write_Char@temp:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  00A0                     ___lwdiv@divisor:	
   848                           ; 1 bytes @ 0x0
   849                           
   850                           
   851                           ; 2 bytes @ 0x0
   852  00A0                     	ds	1
   853  00A1                     ??_Lcd_Init:
   854  00A1                     ?_Lcd_Set_Cursor:	
   855                           ; 1 bytes @ 0x1
   856                           
   857  00A1                     Lcd_Set_Cursor@b:	
   858                           ; 1 bytes @ 0x1
   859                           
   860  00A1                     Lcd_Write_Char@y:	
   861                           ; 1 bytes @ 0x1
   862                           
   863                           
   864                           ; 1 bytes @ 0x1
   865  00A1                     	ds	1
   866  00A2                     ??_Lcd_Set_Cursor:
   867  00A2                     initAdc@adc_s:	
   868                           ; 1 bytes @ 0x2
   869                           
   870  00A2                     Lcd_Write_Char@a:	
   871                           ; 1 bytes @ 0x2
   872                           
   873  00A2                     ___lwdiv@dividend:	
   874                           ; 1 bytes @ 0x2
   875                           
   876                           
   877                           ; 2 bytes @ 0x2
   878  00A2                     	ds	1
   879  00A3                     ?_Lcd_Write_String:
   880  00A3                     Lcd_Write_String@a:	
   881                           ; 1 bytes @ 0x3
   882                           
   883                           
   884                           ; 2 bytes @ 0x3
   885  00A3                     	ds	1
   886  00A4                     Lcd_Set_Cursor@a:
   887  00A4                     ___lwdiv@counter:	
   888                           ; 1 bytes @ 0x4
   889                           
   890                           
   891                           ; 1 bytes @ 0x4
   892  00A4                     	ds	1
   893  00A5                     ??_Lcd_Write_String:
   894  00A5                     Lcd_Set_Cursor@z:	
   895                           ; 1 bytes @ 0x5
   896                           
   897  00A5                     ___lwdiv@quotient:	
   898                           ; 1 bytes @ 0x5
   899                           
   900                           
   901                           ; 2 bytes @ 0x5
   902  00A5                     	ds	1
   903  00A6                     Lcd_Set_Cursor@y:
   904                           
   905                           ; 1 bytes @ 0x6
   906  00A6                     	ds	1
   907  00A7                     ?___lwmod:
   908  00A7                     Lcd_Set_Cursor@temp:	
   909                           ; 2 bytes @ 0x7
   910                           
   911  00A7                     ___lwmod@divisor:	
   912                           ; 1 bytes @ 0x7
   913                           
   914                           
   915                           ; 2 bytes @ 0x7
   916  00A7                     	ds	1
   917  00A8                     Lcd_Write_String@i:
   918                           
   919                           ; 2 bytes @ 0x8
   920  00A8                     	ds	1
   921  00A9                     ___lwmod@dividend:
   922                           
   923                           ; 2 bytes @ 0x9
   924  00A9                     	ds	2
   925  00AB                     ___lwmod@counter:
   926                           
   927                           ; 1 bytes @ 0xB
   928  00AB                     	ds	1
   929  00AC                     ?_sprintf:
   930  00AC                     sprintf@f:	
   931                           ; 2 bytes @ 0xC
   932                           
   933                           
   934                           ; 1 bytes @ 0xC
   935  00AC                     	ds	3
   936  00AF                     ??_sprintf:
   937                           
   938                           ; 1 bytes @ 0xF
   939  00AF                     	ds	3
   940  00B2                     sprintf@ap:
   941                           
   942                           ; 1 bytes @ 0x12
   943  00B2                     	ds	1
   944  00B3                     sprintf@flag:
   945                           
   946                           ; 1 bytes @ 0x13
   947  00B3                     	ds	1
   948  00B4                     sprintf@prec:
   949                           
   950                           ; 1 bytes @ 0x14
   951  00B4                     	ds	1
   952  00B5                     sprintf@val:
   953                           
   954                           ; 2 bytes @ 0x15
   955  00B5                     	ds	2
   956  00B7                     sprintf@sp:
   957                           
   958                           ; 1 bytes @ 0x17
   959  00B7                     	ds	1
   960  00B8                     sprintf@c:
   961                           
   962                           ; 1 bytes @ 0x18
   963  00B8                     	ds	1
   964  00B9                     ??_main:
   965                           
   966                           ; 1 bytes @ 0x19
   967  00B9                     	ds	2
   968                           
   969                           	psect	cstackCOMMON
   970  0070                     __pcstackCOMMON:
   971  0070                     ?_tmr0Reset:
   972  0070                     ??_tmr0Reset:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0070                     ?_setup:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     ?_initOscFreq:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0070                     ?_usartInitTransmit:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0070                     ?_Lcd_Init:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0070                     ?_adcGo:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0070                     ?_isr:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0070                     ?_main:	
   994                           ; 1 bytes @ 0x0
   995                           
   996  0070                     ?_Lcd_Port:	
   997                           ; 1 bytes @ 0x0
   998                           
   999  0070                     ?_Lcd_Cmd:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002  0070                     ?_Lcd_Write_Char:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0070                     ?_adcRead:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0070                     ?___wmul:	
  1009                           ; 2 bytes @ 0x0
  1010                           
  1011  0070                     ___wmul@multiplier:	
  1012                           ; 2 bytes @ 0x0
  1013                           
  1014                           
  1015                           ; 2 bytes @ 0x0
  1016  0070                     	ds	2
  1017  0072                     ??_adcRead:
  1018  0072                     ___wmul@multiplicand:	
  1019                           ; 1 bytes @ 0x2
  1020                           
  1021                           
  1022                           ; 2 bytes @ 0x2
  1023  0072                     	ds	2
  1024  0074                     ??___wmul:
  1025  0074                     ___wmul@product:	
  1026                           ; 1 bytes @ 0x4
  1027                           
  1028                           
  1029                           ; 2 bytes @ 0x4
  1030  0074                     	ds	2
  1031  0076                     ?i1___lwdiv:
  1032  0076                     i1___lwdiv@divisor:	
  1033                           ; 2 bytes @ 0x6
  1034                           
  1035                           
  1036                           ; 2 bytes @ 0x6
  1037  0076                     	ds	2
  1038  0078                     i1___lwdiv@dividend:
  1039                           
  1040                           ; 2 bytes @ 0x8
  1041  0078                     	ds	2
  1042  007A                     ??i1___lwdiv:
  1043                           
  1044                           ; 1 bytes @ 0xA
  1045  007A                     	ds	1
  1046  007B                     i1___lwdiv@quotient:
  1047                           
  1048                           ; 2 bytes @ 0xB
  1049  007B                     	ds	2
  1050  007D                     i1___lwdiv@counter:
  1051                           
  1052                           ; 1 bytes @ 0xD
  1053  007D                     	ds	1
  1054  007E                     ??_percent:
  1055                           
  1056                           	psect	cstackBANK0
  1057  0020                     __pcstackBANK0:	
  1058                           ; 1 bytes @ 0xE
  1059                           
  1060  0020                     ?_percent:
  1061  0020                     ?i1___lwmod:	
  1062                           ; 2 bytes @ 0x0
  1063                           
  1064  0020                     percent@val:	
  1065                           ; 2 bytes @ 0x0
  1066                           
  1067  0020                     i1___lwmod@divisor:	
  1068                           ; 2 bytes @ 0x0
  1069                           
  1070                           
  1071                           ; 2 bytes @ 0x0
  1072  0020                     	ds	2
  1073  0022                     percent@water_val:
  1074  0022                     i1___lwmod@dividend:	
  1075                           ; 2 bytes @ 0x2
  1076                           
  1077                           
  1078                           ; 2 bytes @ 0x2
  1079  0022                     	ds	2
  1080  0024                     ??i1___lwmod:
  1081  0024                     percent@air_val:	
  1082                           ; 1 bytes @ 0x4
  1083                           
  1084                           
  1085                           ; 2 bytes @ 0x4
  1086  0024                     	ds	1
  1087  0025                     i1___lwmod@counter:
  1088                           
  1089                           ; 1 bytes @ 0x5
  1090  0025                     	ds	1
  1091  0026                     ?i1_sprintf:
  1092  0026                     i1sprintf@f:	
  1093                           ; 2 bytes @ 0x6
  1094                           
  1095                           
  1096                           ; 1 bytes @ 0x6
  1097  0026                     	ds	3
  1098  0029                     ??i1_sprintf:
  1099                           
  1100                           ; 1 bytes @ 0x9
  1101  0029                     	ds	3
  1102  002C                     i1sprintf@ap:
  1103                           
  1104                           ; 1 bytes @ 0xC
  1105  002C                     	ds	1
  1106  002D                     i1sprintf@flag:
  1107                           
  1108                           ; 1 bytes @ 0xD
  1109  002D                     	ds	1
  1110  002E                     i1sprintf@prec:
  1111                           
  1112                           ; 1 bytes @ 0xE
  1113  002E                     	ds	1
  1114  002F                     i1sprintf@val:
  1115                           
  1116                           ; 2 bytes @ 0xF
  1117  002F                     	ds	2
  1118  0031                     i1sprintf@sp:
  1119                           
  1120                           ; 1 bytes @ 0x11
  1121  0031                     	ds	1
  1122  0032                     i1sprintf@c:
  1123                           
  1124                           ; 1 bytes @ 0x12
  1125  0032                     	ds	1
  1126  0033                     ??_isr:
  1127                           
  1128                           ; 1 bytes @ 0x13
  1129  0033                     	ds	7
  1130  003A                     ??_setup:
  1131  003A                     ??_initOscFreq:	
  1132                           ; 1 bytes @ 0x1A
  1133                           
  1134  003A                     ?_initTmr0:	
  1135                           ; 1 bytes @ 0x1A
  1136                           
  1137  003A                     ??_usartInitTransmit:	
  1138                           ; 1 bytes @ 0x1A
  1139                           
  1140  003A                     ?_initAdc:	
  1141                           ; 1 bytes @ 0x1A
  1142                           
  1143  003A                     ??_adcGo:	
  1144                           ; 1 bytes @ 0x1A
  1145                           
  1146  003A                     ?_uPrint:	
  1147                           ; 1 bytes @ 0x1A
  1148                           
  1149  003A                     ??_Lcd_Port:	
  1150                           ; 1 bytes @ 0x1A
  1151                           
  1152  003A                     ??___lwdiv:	
  1153                           ; 1 bytes @ 0x1A
  1154                           
  1155  003A                     initAdc@vref_pos:	
  1156                           ; 1 bytes @ 0x1A
  1157                           
  1158  003A                     Lcd_Port@a:	
  1159                           ; 1 bytes @ 0x1A
  1160                           
  1161  003A                     uPrint@string:	
  1162                           ; 1 bytes @ 0x1A
  1163                           
  1164  003A                     initTmr0@prescaler:	
  1165                           ; 2 bytes @ 0x1A
  1166                           
  1167                           
  1168                           ; 2 bytes @ 0x1A
  1169  003A                     	ds	1
  1170  003B                     ??_Lcd_Cmd:
  1171  003B                     ??_Lcd_Write_Char:	
  1172                           ; 1 bytes @ 0x1B
  1173                           
  1174  003B                     ??___lwmod:	
  1175                           ; 1 bytes @ 0x1B
  1176                           
  1177  003B                     initAdc@vref_neg:	
  1178                           ; 1 bytes @ 0x1B
  1179                           
  1180  003B                     adcGo@channel:	
  1181                           ; 1 bytes @ 0x1B
  1182                           
  1183                           
  1184                           ; 1 bytes @ 0x1B
  1185  003B                     	ds	1
  1186  003C                     ??_initTmr0:
  1187  003C                     ??_uPrint:	
  1188                           ; 1 bytes @ 0x1C
  1189                           
  1190                           
  1191                           	psect	maintext
  1192  003C                     __pmaintext:	
  1193                           ; 1 bytes @ 0x1C
  1194 ;;
  1195 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1196 ;;
  1197 ;; *************** function _main *****************
  1198 ;; Defined at:
  1199 ;;		line 132 in file "sensor_ctrl_main.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : B00/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1213 ;;      Params:         0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0
  1215 ;;      Temps:          0       0       2       0       0
  1216 ;;      Totals:         0       0       2       0       0
  1217 ;;Total ram usage:        2 bytes
  1218 ;; Hardware stack levels required when called: 6
  1219 ;; This function calls:
  1220 ;;		_Lcd_Init
  1221 ;;		_Lcd_Set_Cursor
  1222 ;;		_Lcd_Write_String
  1223 ;;		_adcGo
  1224 ;;		_initAdc
  1225 ;;		_initOscFreq
  1226 ;;		_initTmr0
  1227 ;;		_setup
  1228 ;;		_sprintf
  1229 ;;		_uPrint
  1230 ;;		_usartInitTransmit
  1231 ;; This function is called by:
  1232 ;;		Startup code after reset
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236  003C                     _main:	
  1237                           ;psect for function _main
  1238                           
  1239  003C                     l2678:	
  1240                           ;incstack = 0
  1241                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1242                           
  1243                           
  1244                           ;sensor_ctrl_main.c: 133:     setup();
  1245  003C  120A  158A  2744  120A  118A  	fcall	_setup
  1246  0041                     l2680:
  1247                           
  1248                           ;sensor_ctrl_main.c: 134:     initOscFreq(Fosc);
  1249  0041  3001               	movlw	1
  1250  0042  120A  118A  2725  120A  118A  	fcall	_initOscFreq
  1251  0047                     l2682:
  1252                           
  1253                           ;sensor_ctrl_main.c: 135:     initTmr0(PS_val);
  1254  0047  3010               	movlw	16
  1255  0048  1283               	bcf	3,5	;RP0=0, select bank0
  1256  0049  1303               	bcf	3,6	;RP1=0, select bank0
  1257  004A  00BA               	movwf	initTmr0@prescaler
  1258  004B  3000               	movlw	0
  1259  004C  00BB               	movwf	initTmr0@prescaler+1
  1260  004D  120A  118A  2447  120A  118A  	fcall	_initTmr0
  1261                           
  1262                           ;sensor_ctrl_main.c: 136:     usartInitTransmit();
  1263  0052  120A  158A  275E  120A  118A  	fcall	_usartInitTransmit
  1264  0057                     l2684:
  1265                           
  1266                           ;sensor_ctrl_main.c: 137:     initAdc(64,0,0);
  1267  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1268  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1269  0059  01BA               	clrf	initAdc@vref_pos
  1270  005A  01BB               	clrf	initAdc@vref_neg
  1271  005B  3040               	movlw	64
  1272  005C  120A  118A  24B0  120A  118A  	fcall	_initAdc
  1273  0061                     l2686:
  1274                           
  1275                           ;sensor_ctrl_main.c: 138:     Lcd_Init();
  1276  0061  120A  118A  255F  120A  118A  	fcall	_Lcd_Init
  1277  0066                     l2688:
  1278                           
  1279                           ;sensor_ctrl_main.c: 143:         adcGo(0);
  1280  0066  3000               	movlw	0
  1281  0067  120A  158A  2731  120A  118A  	fcall	_adcGo
  1282  006C                     l2690:
  1283                           
  1284                           ;sensor_ctrl_main.c: 147:         if (HS_val >= 384){
  1285  006C  3001               	movlw	1
  1286  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1287  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1288  006F  023D               	subwf	_HS_val+1,w
  1289  0070  3080               	movlw	128
  1290  0071  1903               	skipnz
  1291  0072  023C               	subwf	_HS_val,w
  1292  0073  1C03               	skipc
  1293  0074  2876               	goto	u1971
  1294  0075  2877               	goto	u1970
  1295  0076                     u1971:
  1296  0076  288A               	goto	l2696
  1297  0077                     u1970:
  1298  0077                     l2692:
  1299                           
  1300                           ;sensor_ctrl_main.c: 148:             HS_flag = 1;
  1301  0077  01C2               	clrf	_HS_flag
  1302  0078  0AC2               	incf	_HS_flag,f
  1303  0079                     l2694:
  1304                           
  1305                           ;sensor_ctrl_main.c: 149:             sprintf(HS_flag_str, "%d", HS_flag);
  1306  0079  3017               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1307  007A  1683               	bsf	3,5	;RP0=1, select bank1
  1308  007B  1303               	bcf	3,6	;RP1=0, select bank1
  1309  007C  00B9               	movwf	??_main^(0+128)
  1310  007D  0839               	movf	??_main^(0+128),w
  1311  007E  00AC               	movwf	sprintf@f^(0+128)
  1312  007F  3001               	movlw	1
  1313  0080  00AD               	movwf	(?_sprintf^(0+128)+1)
  1314  0081  3000               	movlw	0
  1315  0082  00AE               	movwf	(?_sprintf^(0+128)+2)
  1316  0083  3049               	movlw	(low (_HS_flag_str| 0))& (0+255)
  1317  0084  120A  118A  21C8  120A  118A  	fcall	_sprintf
  1318                           
  1319                           ;sensor_ctrl_main.c: 150:         }
  1320  0089  28A3               	goto	l2702
  1321  008A                     l2696:
  1322  008A  3001               	movlw	1
  1323  008B  023D               	subwf	_HS_val+1,w
  1324  008C  3067               	movlw	103
  1325  008D  1903               	skipnz
  1326  008E  023C               	subwf	_HS_val,w
  1327  008F  1803               	skipnc
  1328  0090  2892               	goto	u1981
  1329  0091  2893               	goto	u1980
  1330  0092                     u1981:
  1331  0092  28A3               	goto	l2702
  1332  0093                     u1980:
  1333  0093                     l2698:
  1334                           
  1335                           ;sensor_ctrl_main.c: 152:             HS_flag = 0;
  1336  0093  01C2               	clrf	_HS_flag
  1337  0094                     l2700:
  1338                           
  1339                           ;sensor_ctrl_main.c: 153:             sprintf(HS_flag_str, "%d", HS_flag);
  1340  0094  3017               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1341  0095  1683               	bsf	3,5	;RP0=1, select bank1
  1342  0096  1303               	bcf	3,6	;RP1=0, select bank1
  1343  0097  00B9               	movwf	??_main^(0+128)
  1344  0098  0839               	movf	??_main^(0+128),w
  1345  0099  00AC               	movwf	sprintf@f^(0+128)
  1346  009A  3000               	movlw	0
  1347  009B  00AD               	movwf	(?_sprintf^(0+128)+1)
  1348  009C  00AE               	movwf	((?_sprintf+1)^(0+128)+1)
  1349  009D  3049               	movlw	(low (_HS_flag_str| 0))& (0+255)
  1350  009E  120A  118A  21C8  120A  118A  	fcall	_sprintf
  1351  00A3                     l2702:
  1352                           
  1353                           ;sensor_ctrl_main.c: 160:         Lcd_Set_Cursor(0,2);
  1354  00A3  3002               	movlw	2
  1355  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  1356  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  1357  00A6  00B9               	movwf	??_main^(0+128)
  1358  00A7  0839               	movf	??_main^(0+128),w
  1359  00A8  00A1               	movwf	Lcd_Set_Cursor@b^(0+128)
  1360  00A9  3000               	movlw	0
  1361  00AA  120A  118A  2508  120A  118A  	fcall	_Lcd_Set_Cursor
  1362  00AF                     l2704:
  1363                           
  1364                           ;sensor_ctrl_main.c: 161:         Lcd_Write_String("Humedad");
  1365  00AF  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1366  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  1367  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  1368  00B2  00A3               	movwf	Lcd_Write_String@a^(0+128)
  1369  00B3  3080               	movlw	128
  1370  00B4  00A4               	movwf	(Lcd_Write_String@a+1)^(0+128)
  1371  00B5  120A  118A  25B6  120A  118A  	fcall	_Lcd_Write_String
  1372  00BA                     l2706:
  1373                           
  1374                           ;sensor_ctrl_main.c: 162:         if (HS_val < 466 & HS_val > 221){
  1375  00BA  3001               	movlw	1
  1376  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1377  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1378  00BD  023D               	subwf	_HS_val+1,w
  1379  00BE  30D2               	movlw	210
  1380  00BF  1903               	skipnz
  1381  00C0  023C               	subwf	_HS_val,w
  1382  00C1  1803               	skipnc
  1383  00C2  28C4               	goto	u1991
  1384  00C3  28C5               	goto	u1990
  1385  00C4                     u1991:
  1386  00C4  28FD               	goto	l2716
  1387  00C5                     u1990:
  1388  00C5                     l2708:
  1389  00C5  3000               	movlw	0
  1390  00C6  023D               	subwf	_HS_val+1,w
  1391  00C7  30DE               	movlw	222
  1392  00C8  1903               	skipnz
  1393  00C9  023C               	subwf	_HS_val,w
  1394  00CA  1C03               	skipc
  1395  00CB  28CD               	goto	u2001
  1396  00CC  28CE               	goto	u2000
  1397  00CD                     u2001:
  1398  00CD  28FD               	goto	l2716
  1399  00CE                     u2000:
  1400  00CE                     l2710:
  1401                           
  1402                           ;sensor_ctrl_main.c: 163:             Lcd_Set_Cursor(1,2);
  1403  00CE  3002               	movlw	2
  1404  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  1405  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  1406  00D1  00B9               	movwf	??_main^(0+128)
  1407  00D2  0839               	movf	??_main^(0+128),w
  1408  00D3  00A1               	movwf	Lcd_Set_Cursor@b^(0+128)
  1409  00D4  3001               	movlw	1
  1410  00D5  120A  118A  2508  120A  118A  	fcall	_Lcd_Set_Cursor
  1411  00DA                     l2712:
  1412                           
  1413                           ;sensor_ctrl_main.c: 164:             Lcd_Write_String(" ");
  1414  00DA  301A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1415  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  1416  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  1417  00DD  00A3               	movwf	Lcd_Write_String@a^(0+128)
  1418  00DE  3080               	movlw	128
  1419  00DF  00A4               	movwf	(Lcd_Write_String@a+1)^(0+128)
  1420  00E0  120A  118A  25B6  120A  118A  	fcall	_Lcd_Write_String
  1421  00E5                     l2714:
  1422                           
  1423                           ;sensor_ctrl_main.c: 165:             Lcd_Set_Cursor(1,3);
  1424  00E5  3003               	movlw	3
  1425  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  1426  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  1427  00E8  00B9               	movwf	??_main^(0+128)
  1428  00E9  0839               	movf	??_main^(0+128),w
  1429  00EA  00A1               	movwf	Lcd_Set_Cursor@b^(0+128)
  1430  00EB  3001               	movlw	1
  1431  00EC  120A  118A  2508  120A  118A  	fcall	_Lcd_Set_Cursor
  1432                           
  1433                           ;sensor_ctrl_main.c: 166:             Lcd_Write_String(HS_str);
  1434  00F1  30C5               	movlw	(low (_HS_str| 0))& (0+255)
  1435  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  1436  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  1437  00F4  00A3               	movwf	Lcd_Write_String@a^(0+128)
  1438  00F5  3000               	movlw	0
  1439  00F6  00A4               	movwf	(Lcd_Write_String@a+1)^(0+128)
  1440  00F7  120A  118A  25B6  120A  118A  	fcall	_Lcd_Write_String
  1441                           
  1442                           ;sensor_ctrl_main.c: 167:         }
  1443  00FC  2955               	goto	l2730
  1444  00FD                     l2716:
  1445  00FD  3001               	movlw	1
  1446  00FE  023D               	subwf	_HS_val+1,w
  1447  00FF  30CD               	movlw	205
  1448  0100  1903               	skipnz
  1449  0101  023C               	subwf	_HS_val,w
  1450  0102  1C03               	skipc
  1451  0103  2905               	goto	u2011
  1452  0104  2906               	goto	u2010
  1453  0105                     u2011:
  1454  0105  2935               	goto	l2724
  1455  0106                     u2010:
  1456  0106                     l2718:
  1457                           
  1458                           ;sensor_ctrl_main.c: 169:             Lcd_Set_Cursor(1,2);
  1459  0106  3002               	movlw	2
  1460  0107  1683               	bsf	3,5	;RP0=1, select bank1
  1461  0108  1303               	bcf	3,6	;RP1=0, select bank1
  1462  0109  00B9               	movwf	??_main^(0+128)
  1463  010A  0839               	movf	??_main^(0+128),w
  1464  010B  00A1               	movwf	Lcd_Set_Cursor@b^(0+128)
  1465  010C  3001               	movlw	1
  1466  010D  120A  118A  2508  120A  118A  	fcall	_Lcd_Set_Cursor
  1467  0112                     l2720:
  1468                           
  1469                           ;sensor_ctrl_main.c: 170:             Lcd_Write_String(" ");
  1470  0112  301A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1471  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1472  0114  1303               	bcf	3,6	;RP1=0, select bank1
  1473  0115  00A3               	movwf	Lcd_Write_String@a^(0+128)
  1474  0116  3080               	movlw	128
  1475  0117  00A4               	movwf	(Lcd_Write_String@a+1)^(0+128)
  1476  0118  120A  118A  25B6  120A  118A  	fcall	_Lcd_Write_String
  1477  011D                     l2722:
  1478                           
  1479                           ;sensor_ctrl_main.c: 171:             Lcd_Set_Cursor(1,3);
  1480  011D  3003               	movlw	3
  1481  011E  1683               	bsf	3,5	;RP0=1, select bank1
  1482  011F  1303               	bcf	3,6	;RP1=0, select bank1
  1483  0120  00B9               	movwf	??_main^(0+128)
  1484  0121  0839               	movf	??_main^(0+128),w
  1485  0122  00A1               	movwf	Lcd_Set_Cursor@b^(0+128)
  1486  0123  3001               	movlw	1
  1487  0124  120A  118A  2508  120A  118A  	fcall	_Lcd_Set_Cursor
  1488                           
  1489                           ;sensor_ctrl_main.c: 172:             Lcd_Write_String("00");
  1490  0129  3014               	movlw	(low (((STR_9+1)-__stringbase)| (0+32768)))& (0+255)
  1491  012A  1683               	bsf	3,5	;RP0=1, select bank1
  1492  012B  1303               	bcf	3,6	;RP1=0, select bank1
  1493  012C  00A3               	movwf	Lcd_Write_String@a^(0+128)
  1494  012D  3080               	movlw	128
  1495  012E  00A4               	movwf	(Lcd_Write_String@a+1)^(0+128)
  1496  012F  120A  118A  25B6  120A  118A  	fcall	_Lcd_Write_String
  1497                           
  1498                           ;sensor_ctrl_main.c: 173:         }
  1499  0134  2955               	goto	l2730
  1500  0135                     l2724:
  1501  0135  3000               	movlw	0
  1502  0136  023D               	subwf	_HS_val+1,w
  1503  0137  30DC               	movlw	220
  1504  0138  1903               	skipnz
  1505  0139  023C               	subwf	_HS_val,w
  1506  013A  1803               	skipnc
  1507  013B  293D               	goto	u2021
  1508  013C  293E               	goto	u2020
  1509  013D                     u2021:
  1510  013D  2955               	goto	l2730
  1511  013E                     u2020:
  1512  013E                     l2726:
  1513                           
  1514                           ;sensor_ctrl_main.c: 175:             Lcd_Set_Cursor(1,2);
  1515  013E  3002               	movlw	2
  1516  013F  1683               	bsf	3,5	;RP0=1, select bank1
  1517  0140  1303               	bcf	3,6	;RP1=0, select bank1
  1518  0141  00B9               	movwf	??_main^(0+128)
  1519  0142  0839               	movf	??_main^(0+128),w
  1520  0143  00A1               	movwf	Lcd_Set_Cursor@b^(0+128)
  1521  0144  3001               	movlw	1
  1522  0145  120A  118A  2508  120A  118A  	fcall	_Lcd_Set_Cursor
  1523  014A                     l2728:
  1524                           
  1525                           ;sensor_ctrl_main.c: 176:             Lcd_Write_String("100");
  1526  014A  3013               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1527  014B  1683               	bsf	3,5	;RP0=1, select bank1
  1528  014C  1303               	bcf	3,6	;RP1=0, select bank1
  1529  014D  00A3               	movwf	Lcd_Write_String@a^(0+128)
  1530  014E  3080               	movlw	128
  1531  014F  00A4               	movwf	(Lcd_Write_String@a+1)^(0+128)
  1532  0150  120A  118A  25B6  120A  118A  	fcall	_Lcd_Write_String
  1533  0155                     l2730:
  1534                           
  1535                           ;sensor_ctrl_main.c: 178:         Lcd_Set_Cursor(1,5);
  1536  0155  3005               	movlw	5
  1537  0156  1683               	bsf	3,5	;RP0=1, select bank1
  1538  0157  1303               	bcf	3,6	;RP1=0, select bank1
  1539  0158  00B9               	movwf	??_main^(0+128)
  1540  0159  0839               	movf	??_main^(0+128),w
  1541  015A  00A1               	movwf	Lcd_Set_Cursor@b^(0+128)
  1542  015B  3001               	movlw	1
  1543  015C  120A  118A  2508  120A  118A  	fcall	_Lcd_Set_Cursor
  1544                           
  1545                           ;sensor_ctrl_main.c: 179:         Lcd_Write_String("%");
  1546  0161  301C               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1547  0162  1683               	bsf	3,5	;RP0=1, select bank1
  1548  0163  1303               	bcf	3,6	;RP1=0, select bank1
  1549  0164  00A3               	movwf	Lcd_Write_String@a^(0+128)
  1550  0165  3080               	movlw	128
  1551  0166  00A4               	movwf	(Lcd_Write_String@a+1)^(0+128)
  1552  0167  120A  118A  25B6  120A  118A  	fcall	_Lcd_Write_String
  1553                           
  1554                           ;sensor_ctrl_main.c: 183:         uPrint("A");
  1555  016C  301E               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1556  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1557  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1558  016F  00BA               	movwf	uPrint@string
  1559  0170  3080               	movlw	128
  1560  0171  00BB               	movwf	uPrint@string+1
  1561  0172  120A  158A  27DA  120A  118A  	fcall	_uPrint
  1562  0177                     l2732:
  1563                           
  1564                           ;sensor_ctrl_main.c: 184:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1565  0177  30A3               	movlw	163
  1566  0178  1683               	bsf	3,5	;RP0=1, select bank1
  1567  0179  1303               	bcf	3,6	;RP1=0, select bank1
  1568  017A  00BA               	movwf	(??_main^(0+128)+1)
  1569  017B  3054               	movlw	84
  1570  017C  00B9               	movwf	??_main^(0+128)
  1571  017D                     u2037:
  1572  017D  0BB9               	decfsz	??_main^(0+128),f
  1573  017E  297D               	goto	u2037
  1574  017F  0BBA               	decfsz	(??_main^(0+128)+1),f
  1575  0180  297D               	goto	u2037
  1576  0181  0000               	nop
  1577  0182                     l2734:
  1578                           
  1579                           ;sensor_ctrl_main.c: 185:         uPrint(HS_flag_str);
  1580  0182  3049               	movlw	(low (_HS_flag_str| 0))& (0+255)
  1581  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0185  00BA               	movwf	uPrint@string
  1584  0186  3000               	movlw	0
  1585  0187  00BB               	movwf	uPrint@string+1
  1586  0188  120A  158A  27DA  120A  118A  	fcall	_uPrint
  1587                           
  1588                           ;sensor_ctrl_main.c: 186:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1589  018D  30A3               	movlw	163
  1590  018E  1683               	bsf	3,5	;RP0=1, select bank1
  1591  018F  1303               	bcf	3,6	;RP1=0, select bank1
  1592  0190  00BA               	movwf	(??_main^(0+128)+1)
  1593  0191  3054               	movlw	84
  1594  0192  00B9               	movwf	??_main^(0+128)
  1595  0193                     u2047:
  1596  0193  0BB9               	decfsz	??_main^(0+128),f
  1597  0194  2993               	goto	u2047
  1598  0195  0BBA               	decfsz	(??_main^(0+128)+1),f
  1599  0196  2993               	goto	u2047
  1600  0197  0000               	nop
  1601  0198                     l2736:
  1602                           
  1603                           ;sensor_ctrl_main.c: 187:         uPrint("B");
  1604  0198  3020               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1605  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1606  019A  1303               	bcf	3,6	;RP1=0, select bank0
  1607  019B  00BA               	movwf	uPrint@string
  1608  019C  3080               	movlw	128
  1609  019D  00BB               	movwf	uPrint@string+1
  1610  019E  120A  158A  27DA  120A  118A  	fcall	_uPrint
  1611  01A3                     l2738:
  1612                           
  1613                           ;sensor_ctrl_main.c: 188:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1614  01A3  30A3               	movlw	163
  1615  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  1616  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  1617  01A6  00BA               	movwf	(??_main^(0+128)+1)
  1618  01A7  3054               	movlw	84
  1619  01A8  00B9               	movwf	??_main^(0+128)
  1620  01A9                     u2057:
  1621  01A9  0BB9               	decfsz	??_main^(0+128),f
  1622  01AA  29A9               	goto	u2057
  1623  01AB  0BBA               	decfsz	(??_main^(0+128)+1),f
  1624  01AC  29A9               	goto	u2057
  1625  01AD  0000               	nop
  1626                           
  1627                           ;sensor_ctrl_main.c: 189:         uPrint(spst_str);
  1628  01AE  30BB               	movlw	(low (_spst_str| 0))& (0+255)
  1629  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1630  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1631  01B1  00BA               	movwf	uPrint@string
  1632  01B2  3000               	movlw	0
  1633  01B3  00BB               	movwf	uPrint@string+1
  1634  01B4  120A  158A  27DA  120A  118A  	fcall	_uPrint
  1635  01B9                     l2740:
  1636                           
  1637                           ;sensor_ctrl_main.c: 190:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1638  01B9  30A3               	movlw	163
  1639  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  1640  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  1641  01BC  00BA               	movwf	(??_main^(0+128)+1)
  1642  01BD  3054               	movlw	84
  1643  01BE  00B9               	movwf	??_main^(0+128)
  1644  01BF                     u2067:
  1645  01BF  0BB9               	decfsz	??_main^(0+128),f
  1646  01C0  29BF               	goto	u2067
  1647  01C1  0BBA               	decfsz	(??_main^(0+128)+1),f
  1648  01C2  29BF               	goto	u2067
  1649  01C3  0000               	nop
  1650  01C4  2866               	goto	l2688
  1651  01C5  120A  118A  2812   	ljmp	start
  1652  01C8                     __end_of_main:
  1653                           
  1654                           	psect	text1
  1655  0F5E                     __ptext1:	
  1656 ;; *************** function _usartInitTransmit *****************
  1657 ;; Defined at:
  1658 ;;		line 18 in file "USART.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;		None
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      void 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1672 ;;      Params:         0       0       0       0       0
  1673 ;;      Locals:         0       0       0       0       0
  1674 ;;      Temps:          0       0       0       0       0
  1675 ;;      Totals:         0       0       0       0       0
  1676 ;;Total ram usage:        0 bytes
  1677 ;; Hardware stack levels used: 1
  1678 ;; Hardware stack levels required when called: 3
  1679 ;; This function calls:
  1680 ;;		Nothing
  1681 ;; This function is called by:
  1682 ;;		_main
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686  0F5E                     _usartInitTransmit:	
  1687                           ;psect for function _usartInitTransmit
  1688                           
  1689  0F5E                     l2022:	
  1690                           ;incstack = 0
  1691                           ; Regs used in _usartInitTransmit: [wreg+status,2]
  1692                           
  1693                           
  1694                           ;USART.c: 19:     TXSTAbits.TXEN = 1;
  1695  0F5E  1683               	bsf	3,5	;RP0=1, select bank1
  1696  0F5F  1303               	bcf	3,6	;RP1=0, select bank1
  1697  0F60  1698               	bsf	24,5	;volatile
  1698                           
  1699                           ;USART.c: 20:     TXSTAbits.SYNC = 0;
  1700  0F61  1218               	bcf	24,4	;volatile
  1701                           
  1702                           ;USART.c: 21:     RCSTAbits.SPEN = 1;
  1703  0F62  1283               	bcf	3,5	;RP0=0, select bank0
  1704  0F63  1303               	bcf	3,6	;RP1=0, select bank0
  1705  0F64  1798               	bsf	24,7	;volatile
  1706                           
  1707                           ;USART.c: 22:     TXSTAbits.TX9 = 0;
  1708  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  1709  0F66  1303               	bcf	3,6	;RP1=0, select bank1
  1710  0F67  1318               	bcf	24,6	;volatile
  1711                           
  1712                           ;USART.c: 25:     TXSTAbits.BRGH = 1;
  1713  0F68  1518               	bsf	24,2	;volatile
  1714                           
  1715                           ;USART.c: 26:     BAUDCTLbits.BRG16 = 1;
  1716  0F69  1683               	bsf	3,5	;RP0=1, select bank3
  1717  0F6A  1703               	bsf	3,6	;RP1=1, select bank3
  1718  0F6B  1587               	bsf	7,3	;volatile
  1719  0F6C                     l2024:
  1720                           
  1721                           ;USART.c: 27:     SPBRG = 25;
  1722  0F6C  3019               	movlw	25
  1723  0F6D  1683               	bsf	3,5	;RP0=1, select bank1
  1724  0F6E  1303               	bcf	3,6	;RP1=0, select bank1
  1725  0F6F  0099               	movwf	25	;volatile
  1726  0F70                     l2026:
  1727                           
  1728                           ;USART.c: 28:     SPBRGH = 0;
  1729  0F70  019A               	clrf	26	;volatile
  1730  0F71                     l2028:
  1731                           
  1732                           ;USART.c: 31:     RCSTAbits.CREN = 1;
  1733  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  1734  0F72  1303               	bcf	3,6	;RP1=0, select bank0
  1735  0F73  1618               	bsf	24,4	;volatile
  1736  0F74                     l2030:
  1737                           
  1738                           ;USART.c: 32:     PIE1bits.RCIE = 1;
  1739  0F74  1683               	bsf	3,5	;RP0=1, select bank1
  1740  0F75  1303               	bcf	3,6	;RP1=0, select bank1
  1741  0F76  168C               	bsf	12,5	;volatile
  1742  0F77                     l166:
  1743  0F77  0008               	return
  1744  0F78                     __end_of_usartInitTransmit:
  1745                           
  1746                           	psect	text2
  1747  0FDA                     __ptext2:	
  1748 ;; *************** function _uPrint *****************
  1749 ;; Defined at:
  1750 ;;		line 44 in file "USART.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;  string          2   26[BANK0 ] PTR unsigned char 
  1753 ;;		 -> STR_12(2), STR_11(2), HS_flag_str(10), spst_str(10), 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;		None
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg, fsr0l, fsr0h, btemp+1, pclath
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1765 ;;      Params:         0       2       0       0       0
  1766 ;;      Locals:         0       0       0       0       0
  1767 ;;      Temps:          0       0       0       0       0
  1768 ;;      Totals:         0       2       0       0       0
  1769 ;;Total ram usage:        2 bytes
  1770 ;; Hardware stack levels used: 1
  1771 ;; Hardware stack levels required when called: 3
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		_main
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779  0FDA                     _uPrint:	
  1780                           ;psect for function _uPrint
  1781                           
  1782  0FDA                     l2118:	
  1783                           ;incstack = 0
  1784                           ; Regs used in _uPrint: [wreg-fsr0h+btemp+1+pclath]
  1785                           
  1786                           
  1787                           ;USART.c: 45:     while(*string != '\0'){
  1788  0FDA  2FEF               	goto	l2124
  1789  0FDB                     l175:
  1790  0FDB  1E0C               	btfss	12,4	;volatile
  1791  0FDC  2FDE               	goto	u1391
  1792  0FDD  2FDF               	goto	u1390
  1793  0FDE                     u1391:
  1794  0FDE  2FDB               	goto	l175
  1795  0FDF                     u1390:
  1796  0FDF                     l2120:
  1797                           
  1798                           ;USART.c: 47:         TXREG = *string;
  1799  0FDF  083B               	movf	uPrint@string+1,w
  1800  0FE0  00FF               	movwf	btemp+1
  1801  0FE1  083A               	movf	uPrint@string,w
  1802  0FE2  0084               	movwf	4
  1803  0FE3  120A  118A  27A0  120A  158A  	fcall	stringtab
  1804  0FE8  0099               	movwf	25	;volatile
  1805  0FE9                     l2122:
  1806                           
  1807                           ;USART.c: 48:         *string++;
  1808  0FE9  3001               	movlw	1
  1809  0FEA  07BA               	addwf	uPrint@string,f
  1810  0FEB  1803               	skipnc
  1811  0FEC  0ABB               	incf	uPrint@string+1,f
  1812  0FED  3000               	movlw	0
  1813  0FEE  07BB               	addwf	uPrint@string+1,f
  1814  0FEF                     l2124:
  1815                           
  1816                           ;USART.c: 45:     while(*string != '\0'){
  1817  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  1818  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  1819  0FF1  083B               	movf	uPrint@string+1,w
  1820  0FF2  00FF               	movwf	btemp+1
  1821  0FF3  083A               	movf	uPrint@string,w
  1822  0FF4  0084               	movwf	4
  1823  0FF5  120A  118A  27A0  120A  158A  	fcall	stringtab
  1824  0FFA  3A00               	xorlw	0
  1825  0FFB  1D03               	skipz
  1826  0FFC  2FFE               	goto	u1401
  1827  0FFD  2FFF               	goto	u1400
  1828  0FFE                     u1401:
  1829  0FFE  2FDB               	goto	l175
  1830  0FFF                     u1400:
  1831  0FFF                     l179:
  1832  0FFF  0008               	return
  1833  1000                     __end_of_uPrint:
  1834                           
  1835                           	psect	text3
  1836  01C8                     __ptext3:	
  1837 ;; *************** function _sprintf *****************
  1838 ;; Defined at:
  1839 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  sp              1    wreg     PTR unsigned char 
  1842 ;;		 -> HS_flag_str(10), spst_str(10), HS_str(10), 
  1843 ;;  f               1   12[BANK1 ] PTR const unsigned char 
  1844 ;;		 -> STR_4(3), STR_3(3), STR_2(3), STR_1(3), 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  sp              1   23[BANK1 ] PTR unsigned char 
  1847 ;;		 -> HS_flag_str(10), spst_str(10), HS_str(10), 
  1848 ;;  tmpval          4    0        struct .
  1849 ;;  val             2   21[BANK1 ] unsigned int 
  1850 ;;  cp              2    0        PTR const unsigned char 
  1851 ;;  len             2    0        unsigned int 
  1852 ;;  c               1   24[BANK1 ] unsigned char 
  1853 ;;  prec            1   20[BANK1 ] char 
  1854 ;;  flag            1   19[BANK1 ] unsigned char 
  1855 ;;  ap              1   18[BANK1 ] PTR void [1]
  1856 ;;		 -> ?_sprintf(2), 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  2   12[BANK1 ] int 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1866 ;;      Params:         0       0       3       0       0
  1867 ;;      Locals:         0       0       7       0       0
  1868 ;;      Temps:          0       0       3       0       0
  1869 ;;      Totals:         0       0      13       0       0
  1870 ;;Total ram usage:       13 bytes
  1871 ;; Hardware stack levels used: 1
  1872 ;; Hardware stack levels required when called: 4
  1873 ;; This function calls:
  1874 ;;		___lwdiv
  1875 ;;		___lwmod
  1876 ;; This function is called by:
  1877 ;;		_main
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881  01C8                     _sprintf:	
  1882                           ;psect for function _sprintf
  1883                           
  1884                           
  1885                           ;incstack = 0
  1886                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1887                           ;sprintf@sp stored from wreg
  1888  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  1889  01C9  1303               	bcf	3,6	;RP1=0, select bank1
  1890  01CA  00B7               	movwf	sprintf@sp^(0+128)
  1891  01CB                     l2514:
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1894  01CB  30AD               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1895  01CC  00AF               	movwf	??_sprintf^(0+128)
  1896  01CD  082F               	movf	??_sprintf^(0+128),w
  1897  01CE  00B2               	movwf	sprintf@ap^(0+128)
  1898                           
  1899                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1900  01CF  2A9B               	goto	l2566
  1901  01D0                     l2516:
  1902                           
  1903                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1904  01D0  3025               	movlw	37
  1905  01D1  0638               	xorwf	sprintf@c^(0+128),w
  1906  01D2  1903               	btfsc	3,2
  1907  01D3  29D5               	goto	u1831
  1908  01D4  29D6               	goto	u1830
  1909  01D5                     u1831:
  1910  01D5  29E2               	goto	l2522
  1911  01D6                     u1830:
  1912  01D6                     l2518:
  1913                           
  1914                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1915  01D6  0838               	movf	sprintf@c^(0+128),w
  1916  01D7  00AF               	movwf	??_sprintf^(0+128)
  1917  01D8  0837               	movf	sprintf@sp^(0+128),w
  1918  01D9  0084               	movwf	4
  1919  01DA  082F               	movf	??_sprintf^(0+128),w
  1920  01DB  1383               	bcf	3,7	;select IRP bank0
  1921  01DC  0080               	movwf	0
  1922  01DD                     l2520:
  1923  01DD  3001               	movlw	1
  1924  01DE  00AF               	movwf	??_sprintf^(0+128)
  1925  01DF  082F               	movf	??_sprintf^(0+128),w
  1926  01E0  07B7               	addwf	sprintf@sp^(0+128),f
  1927                           
  1928                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 559:    continue;
  1929  01E1  2A9B               	goto	l2566
  1930  01E2                     l2522:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1933  01E2  01B3               	clrf	sprintf@flag^(0+128)
  1934  01E3                     l2526:	
  1935                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1936                           
  1937  01E3  3001               	movlw	1
  1938  01E4  07AC               	addwf	sprintf@f^(0+128),f
  1939  01E5  30FF               	movlw	-1
  1940  01E6  072C               	addwf	sprintf@f^(0+128),w
  1941  01E7  0084               	movwf	4
  1942  01E8  120A  118A  27AA  120A  118A  	fcall	stringdir
  1943  01ED  00B8               	movwf	sprintf@c^(0+128)
  1944  01EE  00AF               	movwf	??_sprintf^(0+128)
  1945  01EF  01B0               	clrf	(??_sprintf^(0+128)+1)
  1946                           
  1947                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1948                           ; Switch size 1, requested type "simple"
  1949                           ; Number of cases is 1, Range of values is 0 to 0
  1950                           ; switch strategies available:
  1951                           ; Name         Instructions Cycles
  1952                           ; simple_byte            4     3 (average)
  1953                           ; direct_byte           11     8 (fixed)
  1954                           ; jumptable            260     6 (fixed)
  1955                           ;	Chosen strategy is simple_byte
  1956  01F0  0830               	movf	(??_sprintf+1)^(0+128),w
  1957  01F1  3A00               	xorlw	0	; case 0
  1958  01F2  1903               	skipnz
  1959  01F3  29F5               	goto	l2878
  1960  01F4  2A9B               	goto	l2566
  1961  01F5                     l2878:
  1962                           
  1963                           ; Switch size 1, requested type "simple"
  1964                           ; Number of cases is 3, Range of values is 0 to 105
  1965                           ; switch strategies available:
  1966                           ; Name         Instructions Cycles
  1967                           ; simple_byte           10     6 (average)
  1968                           ; jumptable            260     6 (fixed)
  1969                           ;	Chosen strategy is simple_byte
  1970  01F5  082F               	movf	??_sprintf^(0+128),w
  1971  01F6  3A00               	xorlw	0	; case 0
  1972  01F7  1903               	skipnz
  1973  01F8  2AAD               	goto	l2568
  1974  01F9  3A64               	xorlw	100	; case 100
  1975  01FA  1903               	skipnz
  1976  01FB  2A00               	goto	l2528
  1977  01FC  3A0D               	xorlw	13	; case 105
  1978  01FD  1903               	skipnz
  1979  01FE  2A00               	goto	l2528
  1980  01FF  2A9B               	goto	l2566
  1981  0200                     l2528:
  1982                           
  1983                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1984  0200  0832               	movf	sprintf@ap^(0+128),w
  1985  0201  0084               	movwf	4
  1986  0202  1383               	bcf	3,7	;select IRP bank0
  1987  0203  0800               	movf	0,w
  1988  0204  00B5               	movwf	sprintf@val^(0+128)
  1989  0205  0A84               	incf	4,f
  1990  0206  0800               	movf	0,w
  1991  0207  00B6               	movwf	(sprintf@val+1)^(0+128)
  1992  0208                     l2530:
  1993  0208  3002               	movlw	2
  1994  0209  00AF               	movwf	??_sprintf^(0+128)
  1995  020A  082F               	movf	??_sprintf^(0+128),w
  1996  020B  07B2               	addwf	sprintf@ap^(0+128),f
  1997  020C                     l2532:
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2000  020C  1FB6               	btfss	(sprintf@val+1)^(0+128),7
  2001  020D  2A0F               	goto	u1841
  2002  020E  2A10               	goto	u1840
  2003  020F                     u1841:
  2004  020F  2A19               	goto	l2538
  2005  0210                     u1840:
  2006  0210                     l2534:
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2009  0210  3003               	movlw	3
  2010  0211  00AF               	movwf	??_sprintf^(0+128)
  2011  0212  082F               	movf	??_sprintf^(0+128),w
  2012  0213  04B3               	iorwf	sprintf@flag^(0+128),f
  2013  0214                     l2536:
  2014                           
  2015                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2016  0214  09B5               	comf	sprintf@val^(0+128),f
  2017  0215  09B6               	comf	(sprintf@val+1)^(0+128),f
  2018  0216  0AB5               	incf	sprintf@val^(0+128),f
  2019  0217  1903               	skipnz
  2020  0218  0AB6               	incf	(sprintf@val+1)^(0+128),f
  2021  0219                     l2538:
  2022                           
  2023                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2024  0219  01B8               	clrf	sprintf@c^(0+128)
  2025  021A  0AB8               	incf	sprintf@c^(0+128),f
  2026  021B                     l2544:
  2027                           
  2028                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2029  021B  0838               	movf	sprintf@c^(0+128),w
  2030  021C  00AF               	movwf	??_sprintf^(0+128)
  2031  021D  072F               	addwf	??_sprintf^(0+128),w
  2032  021E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2033  021F  0084               	movwf	4
  2034  0220  120A  118A  27AA  120A  118A  	fcall	stringdir
  2035  0225  00B0               	movwf	(??_sprintf+1)^(0+128)
  2036  0226  120A  118A  27AA  120A  118A  	fcall	stringdir
  2037  022B  00B1               	movwf	((??_sprintf+1)^(0+128)+1)
  2038  022C  0831               	movf	(??_sprintf+2)^(0+128),w
  2039  022D  0236               	subwf	(sprintf@val+1)^(0+128),w
  2040  022E  1D03               	skipz
  2041  022F  2A32               	goto	u1855
  2042  0230  0830               	movf	(??_sprintf+1)^(0+128),w
  2043  0231  0235               	subwf	sprintf@val^(0+128),w
  2044  0232                     u1855:
  2045  0232  1803               	skipnc
  2046  0233  2A35               	goto	u1851
  2047  0234  2A36               	goto	u1850
  2048  0235                     u1851:
  2049  0235  2A37               	goto	l2548
  2050  0236                     u1850:
  2051  0236  2A41               	goto	l2550
  2052  0237                     l2548:
  2053  0237  3001               	movlw	1
  2054  0238  00AF               	movwf	??_sprintf^(0+128)
  2055  0239  082F               	movf	??_sprintf^(0+128),w
  2056  023A  07B8               	addwf	sprintf@c^(0+128),f
  2057  023B  3005               	movlw	5
  2058  023C  0638               	xorwf	sprintf@c^(0+128),w
  2059  023D  1D03               	btfss	3,2
  2060  023E  2A40               	goto	u1861
  2061  023F  2A41               	goto	u1860
  2062  0240                     u1861:
  2063  0240  2A1B               	goto	l2544
  2064  0241                     u1860:
  2065  0241                     l2550:
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2068  0241  0833               	movf	sprintf@flag^(0+128),w
  2069  0242  3903               	andlw	3
  2070  0243  1903               	btfsc	3,2
  2071  0244  2A46               	goto	u1871
  2072  0245  2A47               	goto	u1870
  2073  0246                     u1871:
  2074  0246  2A52               	goto	l2556
  2075  0247                     u1870:
  2076  0247                     l2552:
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2079  0247  302D               	movlw	45
  2080  0248  00AF               	movwf	??_sprintf^(0+128)
  2081  0249  0837               	movf	sprintf@sp^(0+128),w
  2082  024A  0084               	movwf	4
  2083  024B  082F               	movf	??_sprintf^(0+128),w
  2084  024C  1383               	bcf	3,7	;select IRP bank0
  2085  024D  0080               	movwf	0
  2086  024E                     l2554:
  2087  024E  3001               	movlw	1
  2088  024F  00AF               	movwf	??_sprintf^(0+128)
  2089  0250  082F               	movf	??_sprintf^(0+128),w
  2090  0251  07B7               	addwf	sprintf@sp^(0+128),f
  2091  0252                     l2556:
  2092                           
  2093                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2094  0252  0838               	movf	sprintf@c^(0+128),w
  2095  0253  00AF               	movwf	??_sprintf^(0+128)
  2096  0254  082F               	movf	??_sprintf^(0+128),w
  2097  0255  00B4               	movwf	sprintf@prec^(0+128)
  2098                           
  2099                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2100  0256  2A92               	goto	l2564
  2101  0257                     l2558:
  2102                           
  2103                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2104  0257  300A               	movlw	10
  2105  0258  00A7               	movwf	___lwmod@divisor^(0+128)
  2106  0259  3000               	movlw	0
  2107  025A  00A8               	movwf	(___lwmod@divisor^(0+128)+1)
  2108  025B  0834               	movf	sprintf@prec^(0+128),w
  2109  025C  00AF               	movwf	??_sprintf^(0+128)
  2110  025D  072F               	addwf	??_sprintf^(0+128),w
  2111  025E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2112  025F  0084               	movwf	4
  2113  0260  120A  118A  27AA  120A  118A  	fcall	stringdir
  2114  0265  00A0               	movwf	___lwdiv@divisor^(0+128)
  2115  0266  120A  118A  27AA  120A  118A  	fcall	stringdir
  2116  026B  00A1               	movwf	(___lwdiv@divisor+1)^(0+128)
  2117  026C  0836               	movf	(sprintf@val+1)^(0+128),w
  2118  026D  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  2119  026E  0835               	movf	sprintf@val^(0+128),w
  2120  026F  00A2               	movwf	___lwdiv@dividend^(0+128)
  2121  0270  120A  118A  2657  120A  118A  	fcall	___lwdiv
  2122  0275  1683               	bsf	3,5	;RP0=1, select bank1
  2123  0276  1303               	bcf	3,6	;RP1=0, select bank1
  2124  0277  0821               	movf	(?___lwdiv+1)^(0+128),w
  2125  0278  00AA               	movwf	(___lwmod@dividend+1)^(0+128)
  2126  0279  0820               	movf	?___lwdiv^(0+128),w
  2127  027A  00A9               	movwf	___lwmod@dividend^(0+128)
  2128  027B  120A  118A  26E5  120A  118A  	fcall	___lwmod
  2129  0280  1683               	bsf	3,5	;RP0=1, select bank1
  2130  0281  1303               	bcf	3,6	;RP1=0, select bank1
  2131  0282  0827               	movf	?___lwmod^(0+128),w
  2132  0283  3E30               	addlw	48
  2133  0284  00B0               	movwf	(??_sprintf+1)^(0+128)
  2134  0285  0830               	movf	(??_sprintf+1)^(0+128),w
  2135  0286  00B8               	movwf	sprintf@c^(0+128)
  2136  0287                     l2560:
  2137                           
  2138                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2139  0287  0838               	movf	sprintf@c^(0+128),w
  2140  0288  00AF               	movwf	??_sprintf^(0+128)
  2141  0289  0837               	movf	sprintf@sp^(0+128),w
  2142  028A  0084               	movwf	4
  2143  028B  082F               	movf	??_sprintf^(0+128),w
  2144  028C  1383               	bcf	3,7	;select IRP bank0
  2145  028D  0080               	movwf	0
  2146  028E                     l2562:
  2147  028E  3001               	movlw	1
  2148  028F  00AF               	movwf	??_sprintf^(0+128)
  2149  0290  082F               	movf	??_sprintf^(0+128),w
  2150  0291  07B7               	addwf	sprintf@sp^(0+128),f
  2151  0292                     l2564:
  2152                           
  2153                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2154  0292  30FF               	movlw	255
  2155  0293  00AF               	movwf	??_sprintf^(0+128)
  2156  0294  082F               	movf	??_sprintf^(0+128),w
  2157  0295  07B4               	addwf	sprintf@prec^(0+128),f
  2158  0296  0A34               	incf	sprintf@prec^(0+128),w
  2159  0297  1D03               	btfss	3,2
  2160  0298  2A9A               	goto	u1881
  2161  0299  2A9B               	goto	u1880
  2162  029A                     u1881:
  2163  029A  2A57               	goto	l2558
  2164  029B                     u1880:
  2165  029B                     l2566:
  2166                           
  2167                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2168  029B  3001               	movlw	1
  2169  029C  07AC               	addwf	sprintf@f^(0+128),f
  2170  029D  30FF               	movlw	-1
  2171  029E  072C               	addwf	sprintf@f^(0+128),w
  2172  029F  0084               	movwf	4
  2173  02A0  120A  118A  27AA  120A  118A  	fcall	stringdir
  2174  02A5  00AF               	movwf	??_sprintf^(0+128)
  2175  02A6  082F               	movf	??_sprintf^(0+128),w
  2176  02A7  00B8               	movwf	sprintf@c^(0+128)
  2177  02A8  0838               	movf	sprintf@c^(0+128),w
  2178  02A9  1D03               	btfss	3,2
  2179  02AA  2AAC               	goto	u1891
  2180  02AB  2AAD               	goto	u1890
  2181  02AC                     u1891:
  2182  02AC  29D0               	goto	l2516
  2183  02AD                     u1890:
  2184  02AD                     l2568:
  2185                           
  2186                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2187  02AD  0837               	movf	sprintf@sp^(0+128),w
  2188  02AE  0084               	movwf	4
  2189  02AF  1383               	bcf	3,7	;select IRP bank0
  2190  02B0  0180               	clrf	0
  2191  02B1                     l436:
  2192  02B1  0008               	return
  2193  02B2                     __end_of_sprintf:
  2194                           
  2195                           	psect	text4
  2196  06E5                     __ptext4:	
  2197 ;; *************** function ___lwmod *****************
  2198 ;; Defined at:
  2199 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwmod.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  divisor         2    7[BANK1 ] unsigned int 
  2202 ;;  dividend        2    9[BANK1 ] unsigned int 
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  counter         1   11[BANK1 ] unsigned char 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  2    7[BANK1 ] unsigned int 
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2214 ;;      Params:         0       0       4       0       0
  2215 ;;      Locals:         0       0       1       0       0
  2216 ;;      Temps:          0       1       0       0       0
  2217 ;;      Totals:         0       1       5       0       0
  2218 ;;Total ram usage:        6 bytes
  2219 ;; Hardware stack levels used: 1
  2220 ;; Hardware stack levels required when called: 3
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_sprintf
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228  06E5                     ___lwmod:	
  2229                           ;psect for function ___lwmod
  2230                           
  2231  06E5                     l2492:	
  2232                           ;incstack = 0
  2233                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2234                           
  2235  06E5  1683               	bsf	3,5	;RP0=1, select bank1
  2236  06E6  1303               	bcf	3,6	;RP1=0, select bank1
  2237  06E7  0827               	movf	___lwmod@divisor^(0+128),w
  2238  06E8  0428               	iorwf	(___lwmod@divisor+1)^(0+128),w
  2239  06E9  1903               	btfsc	3,2
  2240  06EA  2EEC               	goto	u1771
  2241  06EB  2EED               	goto	u1770
  2242  06EC                     u1771:
  2243  06EC  2F20               	goto	l2510
  2244  06ED                     u1770:
  2245  06ED                     l2494:
  2246  06ED  01AB               	clrf	___lwmod@counter^(0+128)
  2247  06EE  0AAB               	incf	___lwmod@counter^(0+128),f
  2248  06EF  2EFF               	goto	l2500
  2249  06F0                     l2496:
  2250  06F0  3001               	movlw	1
  2251  06F1                     u1785:
  2252  06F1  1003               	clrc
  2253  06F2  0DA7               	rlf	___lwmod@divisor^(0+128),f
  2254  06F3  0DA8               	rlf	(___lwmod@divisor+1)^(0+128),f
  2255  06F4  3EFF               	addlw	-1
  2256  06F5  1D03               	skipz
  2257  06F6  2EF1               	goto	u1785
  2258  06F7                     l2498:
  2259  06F7  3001               	movlw	1
  2260  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  2261  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  2262  06FA  00BB               	movwf	??___lwmod
  2263  06FB  083B               	movf	??___lwmod,w
  2264  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  2265  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  2266  06FE  07AB               	addwf	___lwmod@counter^(0+128),f
  2267  06FF                     l2500:
  2268  06FF  1FA8               	btfss	(___lwmod@divisor+1)^(0+128),7
  2269  0700  2F02               	goto	u1791
  2270  0701  2F03               	goto	u1790
  2271  0702                     u1791:
  2272  0702  2EF0               	goto	l2496
  2273  0703                     u1790:
  2274  0703                     l2502:
  2275  0703  0828               	movf	(___lwmod@divisor+1)^(0+128),w
  2276  0704  022A               	subwf	(___lwmod@dividend+1)^(0+128),w
  2277  0705  1D03               	skipz
  2278  0706  2F09               	goto	u1805
  2279  0707  0827               	movf	___lwmod@divisor^(0+128),w
  2280  0708  0229               	subwf	___lwmod@dividend^(0+128),w
  2281  0709                     u1805:
  2282  0709  1C03               	skipc
  2283  070A  2F0C               	goto	u1801
  2284  070B  2F0D               	goto	u1800
  2285  070C                     u1801:
  2286  070C  2F13               	goto	l2506
  2287  070D                     u1800:
  2288  070D                     l2504:
  2289  070D  0827               	movf	___lwmod@divisor^(0+128),w
  2290  070E  02A9               	subwf	___lwmod@dividend^(0+128),f
  2291  070F  0828               	movf	(___lwmod@divisor+1)^(0+128),w
  2292  0710  1C03               	skipc
  2293  0711  03AA               	decf	(___lwmod@dividend+1)^(0+128),f
  2294  0712  02AA               	subwf	(___lwmod@dividend+1)^(0+128),f
  2295  0713                     l2506:
  2296  0713  3001               	movlw	1
  2297  0714                     u1815:
  2298  0714  1003               	clrc
  2299  0715  0CA8               	rrf	(___lwmod@divisor+1)^(0+128),f
  2300  0716  0CA7               	rrf	___lwmod@divisor^(0+128),f
  2301  0717  3EFF               	addlw	-1
  2302  0718  1D03               	skipz
  2303  0719  2F14               	goto	u1815
  2304  071A                     l2508:
  2305  071A  3001               	movlw	1
  2306  071B  02AB               	subwf	___lwmod@counter^(0+128),f
  2307  071C  1D03               	btfss	3,2
  2308  071D  2F1F               	goto	u1821
  2309  071E  2F20               	goto	u1820
  2310  071F                     u1821:
  2311  071F  2F03               	goto	l2502
  2312  0720                     u1820:
  2313  0720                     l2510:
  2314  0720  082A               	movf	(___lwmod@dividend+1)^(0+128),w
  2315  0721  00A8               	movwf	(?___lwmod+1)^(0+128)
  2316  0722  0829               	movf	___lwmod@dividend^(0+128),w
  2317  0723  00A7               	movwf	?___lwmod^(0+128)
  2318  0724                     l722:
  2319  0724  0008               	return
  2320  0725                     __end_of___lwmod:
  2321                           
  2322                           	psect	text5
  2323  0657                     __ptext5:	
  2324 ;; *************** function ___lwdiv *****************
  2325 ;; Defined at:
  2326 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  divisor         2    0[BANK1 ] unsigned int 
  2329 ;;  dividend        2    2[BANK1 ] unsigned int 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  quotient        2    5[BANK1 ] unsigned int 
  2332 ;;  counter         1    4[BANK1 ] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  2    0[BANK1 ] unsigned int 
  2335 ;; Registers used:
  2336 ;;		wreg, status,2, status,0
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2342 ;;      Params:         0       0       4       0       0
  2343 ;;      Locals:         0       0       3       0       0
  2344 ;;      Temps:          0       1       0       0       0
  2345 ;;      Totals:         0       1       7       0       0
  2346 ;;Total ram usage:        8 bytes
  2347 ;; Hardware stack levels used: 1
  2348 ;; Hardware stack levels required when called: 3
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_sprintf
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356  0657                     ___lwdiv:	
  2357                           ;psect for function ___lwdiv
  2358                           
  2359  0657                     l2466:	
  2360                           ;incstack = 0
  2361                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2362                           
  2363  0657  1683               	bsf	3,5	;RP0=1, select bank1
  2364  0658  1303               	bcf	3,6	;RP1=0, select bank1
  2365  0659  01A5               	clrf	___lwdiv@quotient^(0+128)
  2366  065A  01A6               	clrf	(___lwdiv@quotient+1)^(0+128)
  2367  065B                     l2468:
  2368  065B  0820               	movf	___lwdiv@divisor^(0+128),w
  2369  065C  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  2370  065D  1903               	btfsc	3,2
  2371  065E  2E60               	goto	u1701
  2372  065F  2E61               	goto	u1700
  2373  0660                     u1701:
  2374  0660  2E9C               	goto	l2488
  2375  0661                     u1700:
  2376  0661                     l2470:
  2377  0661  01A4               	clrf	___lwdiv@counter^(0+128)
  2378  0662  0AA4               	incf	___lwdiv@counter^(0+128),f
  2379  0663  2E73               	goto	l2476
  2380  0664                     l2472:
  2381  0664  3001               	movlw	1
  2382  0665                     u1715:
  2383  0665  1003               	clrc
  2384  0666  0DA0               	rlf	___lwdiv@divisor^(0+128),f
  2385  0667  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  2386  0668  3EFF               	addlw	-1
  2387  0669  1D03               	skipz
  2388  066A  2E65               	goto	u1715
  2389  066B                     l2474:
  2390  066B  3001               	movlw	1
  2391  066C  1283               	bcf	3,5	;RP0=0, select bank0
  2392  066D  1303               	bcf	3,6	;RP1=0, select bank0
  2393  066E  00BA               	movwf	??___lwdiv
  2394  066F  083A               	movf	??___lwdiv,w
  2395  0670  1683               	bsf	3,5	;RP0=1, select bank1
  2396  0671  1303               	bcf	3,6	;RP1=0, select bank1
  2397  0672  07A4               	addwf	___lwdiv@counter^(0+128),f
  2398  0673                     l2476:
  2399  0673  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
  2400  0674  2E76               	goto	u1721
  2401  0675  2E77               	goto	u1720
  2402  0676                     u1721:
  2403  0676  2E64               	goto	l2472
  2404  0677                     u1720:
  2405  0677                     l2478:
  2406  0677  3001               	movlw	1
  2407  0678                     u1735:
  2408  0678  1003               	clrc
  2409  0679  0DA5               	rlf	___lwdiv@quotient^(0+128),f
  2410  067A  0DA6               	rlf	(___lwdiv@quotient+1)^(0+128),f
  2411  067B  3EFF               	addlw	-1
  2412  067C  1D03               	skipz
  2413  067D  2E78               	goto	u1735
  2414  067E  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  2415  067F  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  2416  0680  1D03               	skipz
  2417  0681  2E84               	goto	u1745
  2418  0682  0820               	movf	___lwdiv@divisor^(0+128),w
  2419  0683  0222               	subwf	___lwdiv@dividend^(0+128),w
  2420  0684                     u1745:
  2421  0684  1C03               	skipc
  2422  0685  2E87               	goto	u1741
  2423  0686  2E88               	goto	u1740
  2424  0687                     u1741:
  2425  0687  2E8F               	goto	l2484
  2426  0688                     u1740:
  2427  0688                     l2480:
  2428  0688  0820               	movf	___lwdiv@divisor^(0+128),w
  2429  0689  02A2               	subwf	___lwdiv@dividend^(0+128),f
  2430  068A  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  2431  068B  1C03               	skipc
  2432  068C  03A3               	decf	(___lwdiv@dividend+1)^(0+128),f
  2433  068D  02A3               	subwf	(___lwdiv@dividend+1)^(0+128),f
  2434  068E                     l2482:
  2435  068E  1425               	bsf	___lwdiv@quotient^(0+128),0
  2436  068F                     l2484:
  2437  068F  3001               	movlw	1
  2438  0690                     u1755:
  2439  0690  1003               	clrc
  2440  0691  0CA1               	rrf	(___lwdiv@divisor+1)^(0+128),f
  2441  0692  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  2442  0693  3EFF               	addlw	-1
  2443  0694  1D03               	skipz
  2444  0695  2E90               	goto	u1755
  2445  0696                     l2486:
  2446  0696  3001               	movlw	1
  2447  0697  02A4               	subwf	___lwdiv@counter^(0+128),f
  2448  0698  1D03               	btfss	3,2
  2449  0699  2E9B               	goto	u1761
  2450  069A  2E9C               	goto	u1760
  2451  069B                     u1761:
  2452  069B  2E77               	goto	l2478
  2453  069C                     u1760:
  2454  069C                     l2488:
  2455  069C  0826               	movf	(___lwdiv@quotient+1)^(0+128),w
  2456  069D  00A1               	movwf	(?___lwdiv+1)^(0+128)
  2457  069E  0825               	movf	___lwdiv@quotient^(0+128),w
  2458  069F  00A0               	movwf	?___lwdiv^(0+128)
  2459  06A0                     l712:
  2460  06A0  0008               	return
  2461  06A1                     __end_of___lwdiv:
  2462                           
  2463                           	psect	text6
  2464  0F44                     __ptext6:	
  2465 ;; *************** function _setup *****************
  2466 ;; Defined at:
  2467 ;;		line 202 in file "sensor_ctrl_main.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;		None
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;		None
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      void 
  2474 ;; Registers used:
  2475 ;;		wreg, status,2
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2481 ;;      Params:         0       0       0       0       0
  2482 ;;      Locals:         0       0       0       0       0
  2483 ;;      Temps:          0       0       0       0       0
  2484 ;;      Totals:         0       0       0       0       0
  2485 ;;Total ram usage:        0 bytes
  2486 ;; Hardware stack levels used: 1
  2487 ;; Hardware stack levels required when called: 3
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495  0F44                     _setup:	
  2496                           ;psect for function _setup
  2497                           
  2498  0F44                     l1946:	
  2499                           ;incstack = 0
  2500                           ; Regs used in _setup: [wreg+status,2]
  2501                           
  2502                           
  2503                           ;sensor_ctrl_main.c: 204:     ANSEL = 0b00000001;
  2504  0F44  3001               	movlw	1
  2505  0F45  1683               	bsf	3,5	;RP0=1, select bank3
  2506  0F46  1703               	bsf	3,6	;RP1=1, select bank3
  2507  0F47  0088               	movwf	8	;volatile
  2508  0F48                     l1948:
  2509                           
  2510                           ;sensor_ctrl_main.c: 205:     ANSELH = 0;
  2511  0F48  0189               	clrf	9	;volatile
  2512  0F49                     l1950:
  2513                           
  2514                           ;sensor_ctrl_main.c: 208:     TRISA = 0b00000001;
  2515  0F49  3001               	movlw	1
  2516  0F4A  1683               	bsf	3,5	;RP0=1, select bank1
  2517  0F4B  1303               	bcf	3,6	;RP1=0, select bank1
  2518  0F4C  0085               	movwf	5	;volatile
  2519  0F4D                     l1952:
  2520                           
  2521                           ;sensor_ctrl_main.c: 211:     TRISB = 0b00000001;
  2522  0F4D  3001               	movlw	1
  2523  0F4E  0086               	movwf	6	;volatile
  2524  0F4F                     l1954:
  2525                           
  2526                           ;sensor_ctrl_main.c: 212:     OPTION_REGbits.nRBPU = 0;
  2527  0F4F  1381               	bcf	1,7	;volatile
  2528  0F50                     l1956:
  2529                           
  2530                           ;sensor_ctrl_main.c: 213:     WPUB = 0b00000001;
  2531  0F50  3001               	movlw	1
  2532  0F51  0095               	movwf	21	;volatile
  2533  0F52                     l1958:
  2534                           
  2535                           ;sensor_ctrl_main.c: 214:     IOCBbits.IOCB0 = 1;
  2536  0F52  1416               	bsf	22,0	;volatile
  2537                           
  2538                           ;sensor_ctrl_main.c: 216:     TRISD = 0;
  2539  0F53  0188               	clrf	8	;volatile
  2540                           
  2541                           ;sensor_ctrl_main.c: 217:     PORTA = 0;
  2542  0F54  1283               	bcf	3,5	;RP0=0, select bank0
  2543  0F55  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0F56  0185               	clrf	5	;volatile
  2545                           
  2546                           ;sensor_ctrl_main.c: 218:     PORTB = 0;
  2547  0F57  0186               	clrf	6	;volatile
  2548                           
  2549                           ;sensor_ctrl_main.c: 219:     PORTD = 0;
  2550  0F58  0188               	clrf	8	;volatile
  2551  0F59                     l1960:
  2552                           
  2553                           ;sensor_ctrl_main.c: 222:     INTCONbits.GIE = 1;
  2554  0F59  178B               	bsf	11,7	;volatile
  2555  0F5A                     l1962:
  2556                           
  2557                           ;sensor_ctrl_main.c: 223:     INTCONbits.PEIE = 1;
  2558  0F5A  170B               	bsf	11,6	;volatile
  2559  0F5B                     l1964:
  2560                           
  2561                           ;sensor_ctrl_main.c: 224:     INTCONbits.RBIE = 1;
  2562  0F5B  158B               	bsf	11,3	;volatile
  2563  0F5C                     l1966:
  2564                           
  2565                           ;sensor_ctrl_main.c: 225:     INTCONbits.RBIF = 0;
  2566  0F5C  100B               	bcf	11,0	;volatile
  2567  0F5D                     l135:
  2568  0F5D  0008               	return
  2569  0F5E                     __end_of_setup:
  2570                           
  2571                           	psect	text7
  2572  0447                     __ptext7:	
  2573 ;; *************** function _initTmr0 *****************
  2574 ;; Defined at:
  2575 ;;		line 14 in file "tmr0_config.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  prescaler       2   26[BANK0 ] int 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2589 ;;      Params:         0       2       0       0       0
  2590 ;;      Locals:         0       0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0
  2592 ;;      Totals:         0       2       0       0       0
  2593 ;;Total ram usage:        2 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; Hardware stack levels required when called: 3
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_main
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603  0447                     _initTmr0:	
  2604                           ;psect for function _initTmr0
  2605                           
  2606  0447                     l1990:	
  2607                           ;incstack = 0
  2608                           ; Regs used in _initTmr0: [wreg-fsr0h+status,2+status,0]
  2609                           
  2610                           
  2611                           ;tmr0_config.c: 15:     switch(prescaler){
  2612  0447  2C7C               	goto	l2010
  2613  0448                     l1992:
  2614                           
  2615                           ;tmr0_config.c: 19:             OPTION_REGbits.PS = 0b000;
  2616  0448  30F8               	movlw	-8
  2617  0449  1683               	bsf	3,5	;RP0=1, select bank1
  2618  044A  1303               	bcf	3,6	;RP1=0, select bank1
  2619  044B  0581               	andwf	1,f	;volatile
  2620                           
  2621                           ;tmr0_config.c: 20:             break;
  2622  044C  2CA5               	goto	l202
  2623  044D                     l1994:
  2624                           
  2625                           ;tmr0_config.c: 22:             OPTION_REGbits.PS = 0b001;
  2626  044D  1683               	bsf	3,5	;RP0=1, select bank1
  2627  044E  1303               	bcf	3,6	;RP1=0, select bank1
  2628  044F  0801               	movf	1,w	;volatile
  2629  0450  39F8               	andlw	-8
  2630  0451  3801               	iorlw	1
  2631  0452  0081               	movwf	1	;volatile
  2632                           
  2633                           ;tmr0_config.c: 23:             break;
  2634  0453  2CA5               	goto	l202
  2635  0454                     l1996:
  2636                           
  2637                           ;tmr0_config.c: 25:             OPTION_REGbits.PS = 0b010;
  2638  0454  1683               	bsf	3,5	;RP0=1, select bank1
  2639  0455  1303               	bcf	3,6	;RP1=0, select bank1
  2640  0456  0801               	movf	1,w	;volatile
  2641  0457  39F8               	andlw	-8
  2642  0458  3802               	iorlw	2
  2643  0459  0081               	movwf	1	;volatile
  2644                           
  2645                           ;tmr0_config.c: 26:             break;
  2646  045A  2CA5               	goto	l202
  2647  045B                     l1998:
  2648                           
  2649                           ;tmr0_config.c: 28:             OPTION_REGbits.PS = 0b011;
  2650  045B  1683               	bsf	3,5	;RP0=1, select bank1
  2651  045C  1303               	bcf	3,6	;RP1=0, select bank1
  2652  045D  0801               	movf	1,w	;volatile
  2653  045E  39F8               	andlw	-8
  2654  045F  3803               	iorlw	3
  2655  0460  0081               	movwf	1	;volatile
  2656                           
  2657                           ;tmr0_config.c: 29:             break;
  2658  0461  2CA5               	goto	l202
  2659  0462                     l2000:
  2660                           
  2661                           ;tmr0_config.c: 31:             OPTION_REGbits.PS = 0b100;
  2662  0462  1683               	bsf	3,5	;RP0=1, select bank1
  2663  0463  1303               	bcf	3,6	;RP1=0, select bank1
  2664  0464  0801               	movf	1,w	;volatile
  2665  0465  39F8               	andlw	-8
  2666  0466  3804               	iorlw	4
  2667  0467  0081               	movwf	1	;volatile
  2668                           
  2669                           ;tmr0_config.c: 32:             break;
  2670  0468  2CA5               	goto	l202
  2671  0469                     l2002:
  2672                           
  2673                           ;tmr0_config.c: 34:             OPTION_REGbits.PS = 0b101;
  2674  0469  1683               	bsf	3,5	;RP0=1, select bank1
  2675  046A  1303               	bcf	3,6	;RP1=0, select bank1
  2676  046B  0801               	movf	1,w	;volatile
  2677  046C  39F8               	andlw	-8
  2678  046D  3805               	iorlw	5
  2679  046E  0081               	movwf	1	;volatile
  2680                           
  2681                           ;tmr0_config.c: 35:             break;
  2682  046F  2CA5               	goto	l202
  2683  0470                     l2004:
  2684                           
  2685                           ;tmr0_config.c: 37:             OPTION_REGbits.PS = 0b110;
  2686  0470  1683               	bsf	3,5	;RP0=1, select bank1
  2687  0471  1303               	bcf	3,6	;RP1=0, select bank1
  2688  0472  0801               	movf	1,w	;volatile
  2689  0473  39F8               	andlw	-8
  2690  0474  3806               	iorlw	6
  2691  0475  0081               	movwf	1	;volatile
  2692                           
  2693                           ;tmr0_config.c: 38:             break;
  2694  0476  2CA5               	goto	l202
  2695  0477                     l2006:
  2696                           
  2697                           ;tmr0_config.c: 40:             OPTION_REGbits.PS = 0b111;
  2698  0477  3007               	movlw	7
  2699  0478  1683               	bsf	3,5	;RP0=1, select bank1
  2700  0479  1303               	bcf	3,6	;RP1=0, select bank1
  2701  047A  0481               	iorwf	1,f	;volatile
  2702                           
  2703                           ;tmr0_config.c: 41:             break;
  2704  047B  2CA5               	goto	l202
  2705  047C                     l2010:
  2706                           
  2707                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  2708                           ; Switch size 1, requested type "simple"
  2709                           ; Number of cases is 2, Range of values is 0 to 1
  2710                           ; switch strategies available:
  2711                           ; Name         Instructions Cycles
  2712                           ; simple_byte            7     4 (average)
  2713                           ; direct_byte           14     8 (fixed)
  2714                           ; jumptable            260     6 (fixed)
  2715                           ;	Chosen strategy is simple_byte
  2716  047C  1283               	bcf	3,5	;RP0=0, select bank0
  2717  047D  1303               	bcf	3,6	;RP1=0, select bank0
  2718  047E  083B               	movf	initTmr0@prescaler+1,w
  2719  047F  3A00               	xorlw	0	; case 0
  2720  0480  1903               	skipnz
  2721  0481  2C86               	goto	l2880
  2722  0482  3A01               	xorlw	1	; case 1
  2723  0483  1903               	skipnz
  2724  0484  2CA0               	goto	l2882
  2725  0485  2CA5               	goto	l202
  2726  0486                     l2880:
  2727                           
  2728                           ; Switch size 1, requested type "simple"
  2729                           ; Number of cases is 8, Range of values is 0 to 128
  2730                           ; switch strategies available:
  2731                           ; Name         Instructions Cycles
  2732                           ; simple_byte           25    13 (average)
  2733                           ; jumptable            260     6 (fixed)
  2734                           ;	Chosen strategy is simple_byte
  2735  0486  083A               	movf	initTmr0@prescaler,w
  2736  0487  3A00               	xorlw	0	; case 0
  2737  0488  1903               	skipnz
  2738  0489  2CA5               	goto	l202
  2739  048A  3A02               	xorlw	2	; case 2
  2740  048B  1903               	skipnz
  2741  048C  2C48               	goto	l1992
  2742  048D  3A06               	xorlw	6	; case 4
  2743  048E  1903               	skipnz
  2744  048F  2C4D               	goto	l1994
  2745  0490  3A0C               	xorlw	12	; case 8
  2746  0491  1903               	skipnz
  2747  0492  2C54               	goto	l1996
  2748  0493  3A18               	xorlw	24	; case 16
  2749  0494  1903               	skipnz
  2750  0495  2C5B               	goto	l1998
  2751  0496  3A30               	xorlw	48	; case 32
  2752  0497  1903               	skipnz
  2753  0498  2C62               	goto	l2000
  2754  0499  3A60               	xorlw	96	; case 64
  2755  049A  1903               	skipnz
  2756  049B  2C69               	goto	l2002
  2757  049C  3AC0               	xorlw	192	; case 128
  2758  049D  1903               	skipnz
  2759  049E  2C70               	goto	l2004
  2760  049F  2CA5               	goto	l202
  2761  04A0                     l2882:
  2762                           
  2763                           ; Switch size 1, requested type "simple"
  2764                           ; Number of cases is 1, Range of values is 0 to 0
  2765                           ; switch strategies available:
  2766                           ; Name         Instructions Cycles
  2767                           ; simple_byte            4     3 (average)
  2768                           ; direct_byte           11     8 (fixed)
  2769                           ; jumptable            260     6 (fixed)
  2770                           ;	Chosen strategy is simple_byte
  2771  04A0  083A               	movf	initTmr0@prescaler,w
  2772  04A1  3A00               	xorlw	0	; case 0
  2773  04A2  1903               	skipnz
  2774  04A3  2C77               	goto	l2006
  2775  04A4  2CA5               	goto	l202
  2776  04A5                     l202:
  2777                           
  2778                           ;tmr0_config.c: 46:     OPTION_REGbits.T0CS = 0;
  2779  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  2780  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  2781  04A7  1281               	bcf	1,5	;volatile
  2782                           
  2783                           ;tmr0_config.c: 47:     OPTION_REGbits.PSA = 0;
  2784  04A8  1181               	bcf	1,3	;volatile
  2785                           
  2786                           ;tmr0_config.c: 48:     INTCONbits.T0IE = 1;
  2787  04A9  168B               	bsf	11,5	;volatile
  2788                           
  2789                           ;tmr0_config.c: 49:     INTCONbits.T0IF = 0;
  2790  04AA  110B               	bcf	11,2	;volatile
  2791  04AB                     l2012:
  2792                           
  2793                           ;tmr0_config.c: 50:     TMR0 = 178;
  2794  04AB  30B2               	movlw	178
  2795  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2796  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2797  04AE  0081               	movwf	1	;volatile
  2798  04AF                     l212:
  2799  04AF  0008               	return
  2800  04B0                     __end_of_initTmr0:
  2801                           
  2802                           	psect	text8
  2803  0725                     __ptext8:	
  2804 ;; *************** function _initOscFreq *****************
  2805 ;; Defined at:
  2806 ;;		line 13 in file "osc_config.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  freq            1    wreg     unsigned char 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  freq            1    0[BANK1 ] unsigned char 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2820 ;;      Params:         0       0       0       0       0
  2821 ;;      Locals:         0       0       1       0       0
  2822 ;;      Temps:          0       2       0       0       0
  2823 ;;      Totals:         0       2       1       0       0
  2824 ;;Total ram usage:        3 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 3
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_main
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834  0725                     _initOscFreq:	
  2835                           ;psect for function _initOscFreq
  2836                           
  2837                           
  2838                           ;incstack = 0
  2839                           ; Regs used in _initOscFreq: [wreg-fsr0h+status,2+status,0]
  2840                           ;initOscFreq@freq stored from wreg
  2841  0725  1683               	bsf	3,5	;RP0=1, select bank1
  2842  0726  1303               	bcf	3,6	;RP1=0, select bank1
  2843  0727  00A0               	movwf	initOscFreq@freq^(0+128)
  2844  0728                     l2576:
  2845                           
  2846                           ;osc_config.c: 14:     switch (freq){
  2847  0728  2F4A               	goto	l2590
  2848  0729                     l2578:
  2849                           
  2850                           ;osc_config.c: 16:             OSCCONbits.IRCF = 0b100;
  2851  0729  1683               	bsf	3,5	;RP0=1, select bank1
  2852  072A  1303               	bcf	3,6	;RP1=0, select bank1
  2853  072B  080F               	movf	15,w	;volatile
  2854  072C  398F               	andlw	-113
  2855  072D  3840               	iorlw	64
  2856  072E  008F               	movwf	15	;volatile
  2857                           
  2858                           ;osc_config.c: 17:             break;
  2859  072F  2F62               	goto	l186
  2860  0730                     l2580:
  2861                           
  2862                           ;osc_config.c: 19:             OSCCONbits.IRCF = 0b101;
  2863  0730  1683               	bsf	3,5	;RP0=1, select bank1
  2864  0731  1303               	bcf	3,6	;RP1=0, select bank1
  2865  0732  080F               	movf	15,w	;volatile
  2866  0733  398F               	andlw	-113
  2867  0734  3850               	iorlw	80
  2868  0735  008F               	movwf	15	;volatile
  2869                           
  2870                           ;osc_config.c: 20:             break;
  2871  0736  2F62               	goto	l186
  2872  0737                     l2582:
  2873                           
  2874                           ;osc_config.c: 22:             OSCCONbits.IRCF = 0b110;
  2875  0737  1683               	bsf	3,5	;RP0=1, select bank1
  2876  0738  1303               	bcf	3,6	;RP1=0, select bank1
  2877  0739  080F               	movf	15,w	;volatile
  2878  073A  398F               	andlw	-113
  2879  073B  3860               	iorlw	96
  2880  073C  008F               	movwf	15	;volatile
  2881                           
  2882                           ;osc_config.c: 23:             break;
  2883  073D  2F62               	goto	l186
  2884  073E                     l2584:
  2885                           
  2886                           ;osc_config.c: 25:             OSCCONbits.IRCF = 0b111;
  2887  073E  3070               	movlw	112
  2888  073F  1683               	bsf	3,5	;RP0=1, select bank1
  2889  0740  1303               	bcf	3,6	;RP1=0, select bank1
  2890  0741  048F               	iorwf	15,f	;volatile
  2891                           
  2892                           ;osc_config.c: 26:             break;
  2893  0742  2F62               	goto	l186
  2894  0743                     l2586:
  2895                           
  2896                           ;osc_config.c: 28:             OSCCONbits.IRCF = 0b110;
  2897  0743  1683               	bsf	3,5	;RP0=1, select bank1
  2898  0744  1303               	bcf	3,6	;RP1=0, select bank1
  2899  0745  080F               	movf	15,w	;volatile
  2900  0746  398F               	andlw	-113
  2901  0747  3860               	iorlw	96
  2902  0748  008F               	movwf	15	;volatile
  2903                           
  2904                           ;osc_config.c: 29:             break;
  2905  0749  2F62               	goto	l186
  2906  074A                     l2590:
  2907  074A  0820               	movf	initOscFreq@freq^(0+128),w
  2908  074B  1283               	bcf	3,5	;RP0=0, select bank0
  2909  074C  1303               	bcf	3,6	;RP1=0, select bank0
  2910  074D  00BA               	movwf	??_initOscFreq
  2911  074E  01BB               	clrf	??_initOscFreq+1
  2912                           
  2913                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2914                           ; Switch size 1, requested type "simple"
  2915                           ; Number of cases is 1, Range of values is 0 to 0
  2916                           ; switch strategies available:
  2917                           ; Name         Instructions Cycles
  2918                           ; simple_byte            4     3 (average)
  2919                           ; direct_byte           11     8 (fixed)
  2920                           ; jumptable            260     6 (fixed)
  2921                           ;	Chosen strategy is simple_byte
  2922  074F  083B               	movf	??_initOscFreq+1,w
  2923  0750  3A00               	xorlw	0	; case 0
  2924  0751  1903               	skipnz
  2925  0752  2F54               	goto	l2884
  2926  0753  2F43               	goto	l2586
  2927  0754                     l2884:
  2928                           
  2929                           ; Switch size 1, requested type "simple"
  2930                           ; Number of cases is 4, Range of values is 1 to 8
  2931                           ; switch strategies available:
  2932                           ; Name         Instructions Cycles
  2933                           ; simple_byte           13     7 (average)
  2934                           ; direct_byte           35    11 (fixed)
  2935                           ; jumptable            263     9 (fixed)
  2936                           ;	Chosen strategy is simple_byte
  2937  0754  083A               	movf	??_initOscFreq,w
  2938  0755  3A01               	xorlw	1	; case 1
  2939  0756  1903               	skipnz
  2940  0757  2F29               	goto	l2578
  2941  0758  3A03               	xorlw	3	; case 2
  2942  0759  1903               	skipnz
  2943  075A  2F30               	goto	l2580
  2944  075B  3A06               	xorlw	6	; case 4
  2945  075C  1903               	skipnz
  2946  075D  2F37               	goto	l2582
  2947  075E  3A0C               	xorlw	12	; case 8
  2948  075F  1903               	skipnz
  2949  0760  2F3E               	goto	l2584
  2950  0761  2F43               	goto	l2586
  2951  0762                     l186:
  2952                           
  2953                           ;osc_config.c: 31:     OSCCONbits.SCS = 1;
  2954  0762  140F               	bsf	15,0	;volatile
  2955  0763                     l191:
  2956  0763  0008               	return
  2957  0764                     __end_of_initOscFreq:
  2958                           
  2959                           	psect	text9
  2960  04B0                     __ptext9:	
  2961 ;; *************** function _initAdc *****************
  2962 ;; Defined at:
  2963 ;;		line 18 in file "adc_config.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;  adc_s           1    wreg     unsigned char 
  2966 ;;  vref_pos        1   26[BANK0 ] unsigned char 
  2967 ;;  vref_neg        1   27[BANK0 ] unsigned char 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  adc_s           1    2[BANK1 ] unsigned char 
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2979 ;;      Params:         0       2       0       0       0
  2980 ;;      Locals:         0       0       1       0       0
  2981 ;;      Temps:          0       0       2       0       0
  2982 ;;      Totals:         0       2       3       0       0
  2983 ;;Total ram usage:        5 bytes
  2984 ;; Hardware stack levels used: 1
  2985 ;; Hardware stack levels required when called: 3
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		_main
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993  04B0                     _initAdc:	
  2994                           ;psect for function _initAdc
  2995                           
  2996                           
  2997                           ;incstack = 0
  2998                           ; Regs used in _initAdc: [wreg-fsr0h+status,2+status,0]
  2999                           ;initAdc@adc_s stored from wreg
  3000  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  3001  04B1  1303               	bcf	3,6	;RP1=0, select bank1
  3002  04B2  00A2               	movwf	initAdc@adc_s^(0+128)
  3003  04B3                     l2598:
  3004                           
  3005                           ;adc_config.c: 19:     PIR1bits.ADIF = 0;
  3006  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  3007  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  3008  04B5  130C               	bcf	12,6	;volatile
  3009                           
  3010                           ;adc_config.c: 20:     PIE1bits.ADIE = 1;
  3011  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  3012  04B7  1303               	bcf	3,6	;RP1=0, select bank1
  3013  04B8  170C               	bsf	12,6	;volatile
  3014  04B9                     l2600:
  3015                           
  3016                           ;adc_config.c: 22:     ADCON1bits.VCFG0 = vref_pos;
  3017  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3018  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3019  04BB  0C3A               	rrf	initAdc@vref_pos,w
  3020  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  3021  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  3022  04BE  1C03               	skipc
  3023  04BF  121F               	bcf	31,4	;volatile
  3024  04C0  1803               	skipnc
  3025  04C1  161F               	bsf	31,4	;volatile
  3026                           
  3027                           ;adc_config.c: 23:     ADCON1bits.VCFG1 = vref_neg;
  3028  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  3029  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  3030  04C4  0C3B               	rrf	initAdc@vref_neg,w
  3031  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  3032  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  3033  04C7  1C03               	skipc
  3034  04C8  129F               	bcf	31,5	;volatile
  3035  04C9  1803               	skipnc
  3036  04CA  169F               	bsf	31,5	;volatile
  3037  04CB                     l2602:
  3038                           
  3039                           ;adc_config.c: 24:     ADCON1bits.ADFM = 1;
  3040  04CB  179F               	bsf	31,7	;volatile
  3041  04CC                     l2604:
  3042                           
  3043                           ;adc_config.c: 25:     ADCON0bits.ADON = 1;
  3044  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  3045  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  3046  04CE  141F               	bsf	31,0	;volatile
  3047  04CF                     l2606:
  3048                           
  3049                           ;adc_config.c: 26:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  3050  04CF  3002               	movlw	2
  3051  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  3052  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  3053  04D2  00A0               	movwf	??_initAdc^(0+128)
  3054  04D3                     u2077:
  3055  04D3  0BA0               	decfsz	??_initAdc^(0+128),f
  3056  04D4  2CD3               	goto	u2077
  3057  04D5  0000               	nop
  3058                           
  3059                           ;adc_config.c: 29:     switch(adc_s){
  3060  04D6  2CEF               	goto	l2618
  3061  04D7                     l2608:
  3062                           
  3063                           ;adc_config.c: 31:             ADCON0bits.ADCS = 0b00;
  3064  04D7  303F               	movlw	-193
  3065  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  3066  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  3067  04DA  059F               	andwf	31,f	;volatile
  3068                           
  3069                           ;adc_config.c: 32:             break;
  3070  04DB  2D07               	goto	l238
  3071  04DC                     l2610:
  3072                           
  3073                           ;adc_config.c: 34:             ADCON0bits.ADCS = 0b01;
  3074  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  3075  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  3076  04DE  081F               	movf	31,w	;volatile
  3077  04DF  393F               	andlw	-193
  3078  04E0  3840               	iorlw	64
  3079  04E1  009F               	movwf	31	;volatile
  3080                           
  3081                           ;adc_config.c: 35:             break;
  3082  04E2  2D07               	goto	l238
  3083  04E3                     l2612:
  3084                           
  3085                           ;adc_config.c: 37:             ADCON0bits.ADCS = 0b10;
  3086  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  3087  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  3088  04E5  081F               	movf	31,w	;volatile
  3089  04E6  393F               	andlw	-193
  3090  04E7  3880               	iorlw	128
  3091  04E8  009F               	movwf	31	;volatile
  3092                           
  3093                           ;adc_config.c: 38:             break;
  3094  04E9  2D07               	goto	l238
  3095  04EA                     l2614:
  3096                           
  3097                           ;adc_config.c: 40:             ADCON0bits.ADCS = 0b11;
  3098  04EA  30C0               	movlw	192
  3099  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  3100  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  3101  04ED  049F               	iorwf	31,f	;volatile
  3102                           
  3103                           ;adc_config.c: 41:             break;
  3104  04EE  2D07               	goto	l238
  3105  04EF                     l2618:
  3106  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  3107  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  3108  04F1  0822               	movf	initAdc@adc_s^(0+128),w
  3109  04F2  00A0               	movwf	??_initAdc^(0+128)
  3110  04F3  01A1               	clrf	(??_initAdc^(0+128)+1)
  3111                           
  3112                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3113                           ; Switch size 1, requested type "simple"
  3114                           ; Number of cases is 1, Range of values is 0 to 0
  3115                           ; switch strategies available:
  3116                           ; Name         Instructions Cycles
  3117                           ; simple_byte            4     3 (average)
  3118                           ; direct_byte           11     8 (fixed)
  3119                           ; jumptable            260     6 (fixed)
  3120                           ;	Chosen strategy is simple_byte
  3121  04F4  0821               	movf	(??_initAdc+1)^(0+128),w
  3122  04F5  3A00               	xorlw	0	; case 0
  3123  04F6  1903               	skipnz
  3124  04F7  2CF9               	goto	l2886
  3125  04F8  2D07               	goto	l238
  3126  04F9                     l2886:
  3127                           
  3128                           ; Switch size 1, requested type "simple"
  3129                           ; Number of cases is 4, Range of values is 2 to 64
  3130                           ; switch strategies available:
  3131                           ; Name         Instructions Cycles
  3132                           ; simple_byte           13     7 (average)
  3133                           ; direct_byte          200    11 (fixed)
  3134                           ; jumptable            263     9 (fixed)
  3135                           ;	Chosen strategy is simple_byte
  3136  04F9  0820               	movf	??_initAdc^(0+128),w
  3137  04FA  3A02               	xorlw	2	; case 2
  3138  04FB  1903               	skipnz
  3139  04FC  2CD7               	goto	l2608
  3140  04FD  3A0A               	xorlw	10	; case 8
  3141  04FE  1903               	skipnz
  3142  04FF  2CDC               	goto	l2610
  3143  0500  3A28               	xorlw	40	; case 32
  3144  0501  1903               	skipnz
  3145  0502  2CE3               	goto	l2612
  3146  0503  3A60               	xorlw	96	; case 64
  3147  0504  1903               	skipnz
  3148  0505  2CEA               	goto	l2614
  3149  0506  2D07               	goto	l238
  3150  0507                     l238:
  3151  0507  0008               	return
  3152  0508                     __end_of_initAdc:
  3153                           
  3154                           	psect	text10
  3155  0F31                     __ptext10:	
  3156 ;; *************** function _adcGo *****************
  3157 ;; Defined at:
  3158 ;;		line 46 in file "adc_config.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  channel         1    wreg     unsigned char 
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;  channel         1   27[BANK0 ] unsigned char 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2, status,0
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3172 ;;      Params:         0       0       0       0       0
  3173 ;;      Locals:         0       1       0       0       0
  3174 ;;      Temps:          0       1       0       0       0
  3175 ;;      Totals:         0       2       0       0       0
  3176 ;;Total ram usage:        2 bytes
  3177 ;; Hardware stack levels used: 1
  3178 ;; Hardware stack levels required when called: 3
  3179 ;; This function calls:
  3180 ;;		Nothing
  3181 ;; This function is called by:
  3182 ;;		_main
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186  0F31                     _adcGo:	
  3187                           ;psect for function _adcGo
  3188                           
  3189                           
  3190                           ;incstack = 0
  3191                           ; Regs used in _adcGo: [wreg+status,2+status,0]
  3192                           ;adcGo@channel stored from wreg
  3193  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  3194  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  3195  0F33  00BB               	movwf	adcGo@channel
  3196  0F34                     l2084:
  3197                           
  3198                           ;adc_config.c: 47:     ADCON0bits.ADCS = channel;
  3199  0F34  083B               	movf	adcGo@channel,w
  3200  0F35  00BA               	movwf	??_adcGo
  3201  0F36  0EBA               	swapf	??_adcGo,f
  3202  0F37  0DBA               	rlf	??_adcGo,f
  3203  0F38  0DBA               	rlf	??_adcGo,f
  3204  0F39  081F               	movf	31,w	;volatile
  3205  0F3A  063A               	xorwf	??_adcGo,w
  3206  0F3B  393F               	andlw	-193
  3207  0F3C  063A               	xorwf	??_adcGo,w
  3208  0F3D  009F               	movwf	31	;volatile
  3209  0F3E                     l2086:
  3210                           
  3211                           ;adc_config.c: 48:     if (ADCON0bits.GO == 0){
  3212  0F3E  189F               	btfsc	31,1	;volatile
  3213  0F3F  2F41               	goto	u1311
  3214  0F40  2F42               	goto	u1310
  3215  0F41                     u1311:
  3216  0F41  2F43               	goto	l242
  3217  0F42                     u1310:
  3218  0F42                     l2088:
  3219                           
  3220                           ;adc_config.c: 49:         ADCON0bits.GO = 1;
  3221  0F42  149F               	bsf	31,1	;volatile
  3222  0F43                     l242:
  3223  0F43  0008               	return
  3224  0F44                     __end_of_adcGo:
  3225                           
  3226                           	psect	text11
  3227  05B6                     __ptext11:	
  3228 ;; *************** function _Lcd_Write_String *****************
  3229 ;; Defined at:
  3230 ;;		line 102 in file "LCD4b.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  a               2    3[BANK1 ] PTR unsigned char 
  3233 ;;		 -> STR_10(2), STR_9(4), STR_8(3), STR_7(2), 
  3234 ;;		 -> STR_6(2), STR_5(8), HS_str(10), 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  i               2    8[BANK1 ] int 
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  1    wreg      void 
  3239 ;; Registers used:
  3240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3246 ;;      Params:         0       0       2       0       0
  3247 ;;      Locals:         0       0       2       0       0
  3248 ;;      Temps:          0       0       3       0       0
  3249 ;;      Totals:         0       0       7       0       0
  3250 ;;Total ram usage:        7 bytes
  3251 ;; Hardware stack levels used: 1
  3252 ;; Hardware stack levels required when called: 5
  3253 ;; This function calls:
  3254 ;;		_Lcd_Write_Char
  3255 ;; This function is called by:
  3256 ;;		_main
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260  05B6                     _Lcd_Write_String:	
  3261                           ;psect for function _Lcd_Write_String
  3262                           
  3263  05B6                     l2670:	
  3264                           ;incstack = 0
  3265                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3266                           
  3267                           
  3268                           ;LCD4b.c: 103:     int i;;LCD4b.c: 104:     for (i = 0; a[i] != '\0'; i++)
  3269  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  3270  05B7  1303               	bcf	3,6	;RP1=0, select bank1
  3271  05B8  01A8               	clrf	Lcd_Write_String@i^(0+128)
  3272  05B9  01A9               	clrf	(Lcd_Write_String@i+1)^(0+128)
  3273  05BA  2DE7               	goto	l2676
  3274  05BB                     l2672:
  3275                           
  3276                           ;LCD4b.c: 105:         Lcd_Write_Char(a[i]);
  3277  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  3278  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  3279  05BD  0828               	movf	Lcd_Write_String@i^(0+128),w
  3280  05BE  0723               	addwf	Lcd_Write_String@a^(0+128),w
  3281  05BF  00A6               	movwf	(??_Lcd_Write_String+1)^(0+128)
  3282  05C0  0824               	movf	(Lcd_Write_String@a+1)^(0+128),w
  3283  05C1  00A5               	movwf	??_Lcd_Write_String^(0+128)
  3284  05C2  1803               	skipnc
  3285  05C3  0AA5               	incf	??_Lcd_Write_String^(0+128),f
  3286  05C4  1FA8               	btfss	Lcd_Write_String@i^(0+128),7
  3287  05C5  2DC7               	goto	u1940
  3288  05C6  03A5               	decf	??_Lcd_Write_String^(0+128),f
  3289  05C7                     u1940:
  3290  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  3291  05C8  1303               	bcf	3,6	;RP1=0, select bank1
  3292  05C9  0825               	movf	??_Lcd_Write_String^(0+128),w
  3293  05CA  00A7               	movwf	((??_Lcd_Write_String+1)^(0+128)+1)
  3294  05CB  0827               	movf	(??_Lcd_Write_String+2)^(0+128),w
  3295  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  3296  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  3297  05CE  00FF               	movwf	btemp+1
  3298  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  3299  05D0  1303               	bcf	3,6	;RP1=0, select bank1
  3300  05D1  0826               	movf	(??_Lcd_Write_String+1)^(0+128),w
  3301  05D2  0084               	movwf	4
  3302  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  3303  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  3304  05D5  120A  118A  27A0  120A  118A  	fcall	stringtab
  3305  05DA  120A  118A  260A  120A  118A  	fcall	_Lcd_Write_Char
  3306  05DF                     l2674:
  3307  05DF  3001               	movlw	1
  3308  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  3309  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  3310  05E2  07A8               	addwf	Lcd_Write_String@i^(0+128),f
  3311  05E3  1803               	skipnc
  3312  05E4  0AA9               	incf	(Lcd_Write_String@i+1)^(0+128),f
  3313  05E5  3000               	movlw	0
  3314  05E6  07A9               	addwf	(Lcd_Write_String@i+1)^(0+128),f
  3315  05E7                     l2676:
  3316  05E7  0828               	movf	Lcd_Write_String@i^(0+128),w
  3317  05E8  0723               	addwf	Lcd_Write_String@a^(0+128),w
  3318  05E9  00A6               	movwf	(??_Lcd_Write_String+1)^(0+128)
  3319  05EA  0824               	movf	(Lcd_Write_String@a+1)^(0+128),w
  3320  05EB  00A5               	movwf	??_Lcd_Write_String^(0+128)
  3321  05EC  1803               	skipnc
  3322  05ED  0AA5               	incf	??_Lcd_Write_String^(0+128),f
  3323  05EE  1FA8               	btfss	Lcd_Write_String@i^(0+128),7
  3324  05EF  2DF1               	goto	u1950
  3325  05F0  03A5               	decf	??_Lcd_Write_String^(0+128),f
  3326  05F1                     u1950:
  3327  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  3328  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  3329  05F3  0825               	movf	??_Lcd_Write_String^(0+128),w
  3330  05F4  00A7               	movwf	((??_Lcd_Write_String+1)^(0+128)+1)
  3331  05F5  0827               	movf	(??_Lcd_Write_String+2)^(0+128),w
  3332  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  3333  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  3334  05F8  00FF               	movwf	btemp+1
  3335  05F9  1683               	bsf	3,5	;RP0=1, select bank1
  3336  05FA  1303               	bcf	3,6	;RP1=0, select bank1
  3337  05FB  0826               	movf	(??_Lcd_Write_String+1)^(0+128),w
  3338  05FC  0084               	movwf	4
  3339  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  3340  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  3341  05FF  120A  118A  27A0  120A  118A  	fcall	stringtab
  3342  0604  3A00               	xorlw	0
  3343  0605  1D03               	skipz
  3344  0606  2E08               	goto	u1961
  3345  0607  2E09               	goto	u1960
  3346  0608                     u1961:
  3347  0608  2DBB               	goto	l2672
  3348  0609                     u1960:
  3349  0609                     l320:
  3350  0609  0008               	return
  3351  060A                     __end_of_Lcd_Write_String:
  3352                           
  3353                           	psect	text12
  3354  060A                     __ptext12:	
  3355 ;; *************** function _Lcd_Write_Char *****************
  3356 ;; Defined at:
  3357 ;;		line 87 in file "LCD4b.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  a               1    wreg     unsigned char 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  a               1    2[BANK1 ] unsigned char 
  3362 ;;  y               1    1[BANK1 ] unsigned char 
  3363 ;;  temp            1    0[BANK1 ] unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      void 
  3366 ;; Registers used:
  3367 ;;		wreg, status,2, status,0, pclath, cstack
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3373 ;;      Params:         0       0       0       0       0
  3374 ;;      Locals:         0       0       3       0       0
  3375 ;;      Temps:          0       1       0       0       0
  3376 ;;      Totals:         0       1       3       0       0
  3377 ;;Total ram usage:        4 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 4
  3380 ;; This function calls:
  3381 ;;		_Lcd_Port
  3382 ;; This function is called by:
  3383 ;;		_Lcd_Write_String
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387  060A                     _Lcd_Write_Char:	
  3388                           ;psect for function _Lcd_Write_Char
  3389                           
  3390                           
  3391                           ;incstack = 0
  3392                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3393                           ;Lcd_Write_Char@a stored from wreg
  3394  060A  1683               	bsf	3,5	;RP0=1, select bank1
  3395  060B  1303               	bcf	3,6	;RP1=0, select bank1
  3396  060C  00A2               	movwf	Lcd_Write_Char@a^(0+128)
  3397  060D                     l2446:
  3398                           
  3399                           ;LCD4b.c: 88:     char temp, y;;LCD4b.c: 89:     temp = a & 0x0F;
  3400  060D  0822               	movf	Lcd_Write_Char@a^(0+128),w
  3401  060E  390F               	andlw	15
  3402  060F  1283               	bcf	3,5	;RP0=0, select bank0
  3403  0610  1303               	bcf	3,6	;RP1=0, select bank0
  3404  0611  00BB               	movwf	??_Lcd_Write_Char
  3405  0612  083B               	movf	??_Lcd_Write_Char,w
  3406  0613  1683               	bsf	3,5	;RP0=1, select bank1
  3407  0614  1303               	bcf	3,6	;RP1=0, select bank1
  3408  0615  00A0               	movwf	Lcd_Write_Char@temp^(0+128)
  3409                           
  3410                           ;LCD4b.c: 90:     y = a & 0xF0;
  3411  0616  0822               	movf	Lcd_Write_Char@a^(0+128),w
  3412  0617  39F0               	andlw	240
  3413  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3414  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3415  061A  00BB               	movwf	??_Lcd_Write_Char
  3416  061B  083B               	movf	??_Lcd_Write_Char,w
  3417  061C  1683               	bsf	3,5	;RP0=1, select bank1
  3418  061D  1303               	bcf	3,6	;RP1=0, select bank1
  3419  061E  00A1               	movwf	Lcd_Write_Char@y^(0+128)
  3420  061F                     l2448:
  3421                           
  3422                           ;LCD4b.c: 91:     PORTBbits.RB2 = 1;
  3423  061F  1283               	bcf	3,5	;RP0=0, select bank0
  3424  0620  1303               	bcf	3,6	;RP1=0, select bank0
  3425  0621  1506               	bsf	6,2	;volatile
  3426  0622                     l2450:
  3427                           
  3428                           ;LCD4b.c: 92:     Lcd_Port(y >> 4);
  3429  0622  1683               	bsf	3,5	;RP0=1, select bank1
  3430  0623  1303               	bcf	3,6	;RP1=0, select bank1
  3431  0624  0821               	movf	Lcd_Write_Char@y^(0+128),w
  3432  0625  1283               	bcf	3,5	;RP0=0, select bank0
  3433  0626  1303               	bcf	3,6	;RP1=0, select bank0
  3434  0627  00BB               	movwf	??_Lcd_Write_Char
  3435  0628  3004               	movlw	4
  3436  0629                     u1695:
  3437  0629  1003               	clrc
  3438  062A  0CBB               	rrf	??_Lcd_Write_Char,f
  3439  062B  3EFF               	addlw	-1
  3440  062C  1D03               	skipz
  3441  062D  2E29               	goto	u1695
  3442  062E  083B               	movf	??_Lcd_Write_Char,w
  3443  062F  120A  158A  2795  120A  118A  	fcall	_Lcd_Port
  3444  0634                     l2452:
  3445                           
  3446                           ;LCD4b.c: 93:     RB3 = 1;
  3447  0634  1283               	bcf	3,5	;RP0=0, select bank0
  3448  0635  1303               	bcf	3,6	;RP1=0, select bank0
  3449  0636  1586               	bsf	6,3	;volatile
  3450  0637                     l2454:
  3451                           
  3452                           ;LCD4b.c: 94:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  3453  0637  3002               	movlw	2
  3454  0638  1283               	bcf	3,5	;RP0=0, select bank0
  3455  0639  1303               	bcf	3,6	;RP1=0, select bank0
  3456  063A  00BB               	movwf	??_Lcd_Write_Char
  3457  063B                     u2087:
  3458  063B  0BBB               	decfsz	??_Lcd_Write_Char,f
  3459  063C  2E3B               	goto	u2087
  3460  063D  0000               	nop
  3461  063E                     l2456:
  3462                           
  3463                           ;LCD4b.c: 95:     RB3 = 0;
  3464  063E  1283               	bcf	3,5	;RP0=0, select bank0
  3465  063F  1303               	bcf	3,6	;RP1=0, select bank0
  3466  0640  1186               	bcf	6,3	;volatile
  3467  0641                     l2458:
  3468                           
  3469                           ;LCD4b.c: 96:     Lcd_Port(temp);
  3470  0641  1683               	bsf	3,5	;RP0=1, select bank1
  3471  0642  1303               	bcf	3,6	;RP1=0, select bank1
  3472  0643  0820               	movf	Lcd_Write_Char@temp^(0+128),w
  3473  0644  120A  158A  2795  120A  118A  	fcall	_Lcd_Port
  3474  0649                     l2460:
  3475                           
  3476                           ;LCD4b.c: 97:     RB3 = 1;
  3477  0649  1283               	bcf	3,5	;RP0=0, select bank0
  3478  064A  1303               	bcf	3,6	;RP1=0, select bank0
  3479  064B  1586               	bsf	6,3	;volatile
  3480  064C                     l2462:
  3481                           
  3482                           ;LCD4b.c: 98:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  3483  064C  3002               	movlw	2
  3484  064D  1283               	bcf	3,5	;RP0=0, select bank0
  3485  064E  1303               	bcf	3,6	;RP1=0, select bank0
  3486  064F  00BB               	movwf	??_Lcd_Write_Char
  3487  0650                     u2097:
  3488  0650  0BBB               	decfsz	??_Lcd_Write_Char,f
  3489  0651  2E50               	goto	u2097
  3490  0652  0000               	nop
  3491  0653                     l2464:
  3492                           
  3493                           ;LCD4b.c: 99:     RB3 = 0;
  3494  0653  1283               	bcf	3,5	;RP0=0, select bank0
  3495  0654  1303               	bcf	3,6	;RP1=0, select bank0
  3496  0655  1186               	bcf	6,3	;volatile
  3497  0656                     l314:
  3498  0656  0008               	return
  3499  0657                     __end_of_Lcd_Write_Char:
  3500                           
  3501                           	psect	text13
  3502  0508                     __ptext13:	
  3503 ;; *************** function _Lcd_Set_Cursor *****************
  3504 ;; Defined at:
  3505 ;;		line 51 in file "LCD4b.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  a               1    wreg     unsigned char 
  3508 ;;  b               1    1[BANK1 ] unsigned char 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  a               1    4[BANK1 ] unsigned char 
  3511 ;;  temp            1    7[BANK1 ] unsigned char 
  3512 ;;  y               1    6[BANK1 ] unsigned char 
  3513 ;;  z               1    5[BANK1 ] unsigned char 
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      void 
  3516 ;; Registers used:
  3517 ;;		wreg, status,2, status,0, pclath, cstack
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3523 ;;      Params:         0       0       1       0       0
  3524 ;;      Locals:         0       0       4       0       0
  3525 ;;      Temps:          0       0       2       0       0
  3526 ;;      Totals:         0       0       7       0       0
  3527 ;;Total ram usage:        7 bytes
  3528 ;; Hardware stack levels used: 1
  3529 ;; Hardware stack levels required when called: 5
  3530 ;; This function calls:
  3531 ;;		_Lcd_Cmd
  3532 ;; This function is called by:
  3533 ;;		_main
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537  0508                     _Lcd_Set_Cursor:	
  3538                           ;psect for function _Lcd_Set_Cursor
  3539                           
  3540                           
  3541                           ;incstack = 0
  3542                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3543                           ;Lcd_Set_Cursor@a stored from wreg
  3544  0508  1683               	bsf	3,5	;RP0=1, select bank1
  3545  0509  1303               	bcf	3,6	;RP1=0, select bank1
  3546  050A  00A4               	movwf	Lcd_Set_Cursor@a^(0+128)
  3547  050B                     l2650:
  3548                           
  3549                           ;LCD4b.c: 51: void Lcd_Set_Cursor(char a, char b);LCD4b.c: 52: {;LCD4b.c: 53:     char t
      +                          emp, z, y;;LCD4b.c: 54:     if (a == 0) {
  3550  050B  0824               	movf	Lcd_Set_Cursor@a^(0+128),w
  3551  050C  1D03               	btfss	3,2
  3552  050D  2D0F               	goto	u1901
  3553  050E  2D10               	goto	u1900
  3554  050F                     u1901:
  3555  050F  2D35               	goto	l2660
  3556  0510                     u1900:
  3557  0510                     l2652:
  3558                           
  3559                           ;LCD4b.c: 55:         temp = 0x80 + b;
  3560  0510  0821               	movf	Lcd_Set_Cursor@b^(0+128),w
  3561  0511  3E80               	addlw	128
  3562  0512  00A2               	movwf	??_Lcd_Set_Cursor^(0+128)
  3563  0513  0822               	movf	??_Lcd_Set_Cursor^(0+128),w
  3564  0514  00A7               	movwf	Lcd_Set_Cursor@temp^(0+128)
  3565                           
  3566                           ;LCD4b.c: 56:         z = temp >> 4;
  3567  0515  0827               	movf	Lcd_Set_Cursor@temp^(0+128),w
  3568  0516  00A2               	movwf	??_Lcd_Set_Cursor^(0+128)
  3569  0517  3004               	movlw	4
  3570  0518                     u1915:
  3571  0518  1003               	clrc
  3572  0519  0CA2               	rrf	??_Lcd_Set_Cursor^(0+128),f
  3573  051A  3EFF               	addlw	-1
  3574  051B  1D03               	skipz
  3575  051C  2D18               	goto	u1915
  3576  051D  0822               	movf	??_Lcd_Set_Cursor^(0+128),w
  3577  051E  00A3               	movwf	(??_Lcd_Set_Cursor+1)^(0+128)
  3578  051F  0823               	movf	(??_Lcd_Set_Cursor+1)^(0+128),w
  3579  0520  00A5               	movwf	Lcd_Set_Cursor@z^(0+128)
  3580  0521                     l2654:
  3581                           
  3582                           ;LCD4b.c: 57:         y = temp & 0x0F;
  3583  0521  0827               	movf	Lcd_Set_Cursor@temp^(0+128),w
  3584  0522  390F               	andlw	15
  3585  0523  00A2               	movwf	??_Lcd_Set_Cursor^(0+128)
  3586  0524  0822               	movf	??_Lcd_Set_Cursor^(0+128),w
  3587  0525  00A6               	movwf	Lcd_Set_Cursor@y^(0+128)
  3588  0526                     l2656:
  3589                           
  3590                           ;LCD4b.c: 58:         Lcd_Cmd(z);
  3591  0526  0825               	movf	Lcd_Set_Cursor@z^(0+128),w
  3592  0527  120A  158A  2778  120A  118A  	fcall	_Lcd_Cmd
  3593  052C                     l2658:
  3594                           
  3595                           ;LCD4b.c: 59:         Lcd_Cmd(y);
  3596  052C  1683               	bsf	3,5	;RP0=1, select bank1
  3597  052D  1303               	bcf	3,6	;RP1=0, select bank1
  3598  052E  0826               	movf	Lcd_Set_Cursor@y^(0+128),w
  3599  052F  120A  158A  2778  120A  118A  	fcall	_Lcd_Cmd
  3600                           
  3601                           ;LCD4b.c: 60:     } else if (a == 1) {
  3602  0534  2D5E               	goto	l308
  3603  0535                     l2660:
  3604  0535  0324               	decf	Lcd_Set_Cursor@a^(0+128),w
  3605  0536  1D03               	btfss	3,2
  3606  0537  2D39               	goto	u1921
  3607  0538  2D3A               	goto	u1920
  3608  0539                     u1921:
  3609  0539  2D5E               	goto	l308
  3610  053A                     u1920:
  3611  053A                     l2662:
  3612                           
  3613                           ;LCD4b.c: 61:         temp = 0xC0 + b;
  3614  053A  0821               	movf	Lcd_Set_Cursor@b^(0+128),w
  3615  053B  3EC0               	addlw	192
  3616  053C  00A2               	movwf	??_Lcd_Set_Cursor^(0+128)
  3617  053D  0822               	movf	??_Lcd_Set_Cursor^(0+128),w
  3618  053E  00A7               	movwf	Lcd_Set_Cursor@temp^(0+128)
  3619                           
  3620                           ;LCD4b.c: 62:         z = temp >> 4;
  3621  053F  0827               	movf	Lcd_Set_Cursor@temp^(0+128),w
  3622  0540  00A2               	movwf	??_Lcd_Set_Cursor^(0+128)
  3623  0541  3004               	movlw	4
  3624  0542                     u1935:
  3625  0542  1003               	clrc
  3626  0543  0CA2               	rrf	??_Lcd_Set_Cursor^(0+128),f
  3627  0544  3EFF               	addlw	-1
  3628  0545  1D03               	skipz
  3629  0546  2D42               	goto	u1935
  3630  0547  0822               	movf	??_Lcd_Set_Cursor^(0+128),w
  3631  0548  00A3               	movwf	(??_Lcd_Set_Cursor+1)^(0+128)
  3632  0549  0823               	movf	(??_Lcd_Set_Cursor+1)^(0+128),w
  3633  054A  00A5               	movwf	Lcd_Set_Cursor@z^(0+128)
  3634  054B                     l2664:
  3635                           
  3636                           ;LCD4b.c: 63:         y = temp & 0x0F;
  3637  054B  0827               	movf	Lcd_Set_Cursor@temp^(0+128),w
  3638  054C  390F               	andlw	15
  3639  054D  00A2               	movwf	??_Lcd_Set_Cursor^(0+128)
  3640  054E  0822               	movf	??_Lcd_Set_Cursor^(0+128),w
  3641  054F  00A6               	movwf	Lcd_Set_Cursor@y^(0+128)
  3642  0550                     l2666:
  3643                           
  3644                           ;LCD4b.c: 64:         Lcd_Cmd(z);
  3645  0550  0825               	movf	Lcd_Set_Cursor@z^(0+128),w
  3646  0551  120A  158A  2778  120A  118A  	fcall	_Lcd_Cmd
  3647  0556                     l2668:
  3648                           
  3649                           ;LCD4b.c: 65:         Lcd_Cmd(y);
  3650  0556  1683               	bsf	3,5	;RP0=1, select bank1
  3651  0557  1303               	bcf	3,6	;RP1=0, select bank1
  3652  0558  0826               	movf	Lcd_Set_Cursor@y^(0+128),w
  3653  0559  120A  158A  2778  120A  118A  	fcall	_Lcd_Cmd
  3654  055E                     l308:
  3655  055E  0008               	return
  3656  055F                     __end_of_Lcd_Set_Cursor:
  3657                           
  3658                           	psect	text14
  3659  055F                     __ptext14:	
  3660 ;; *************** function _Lcd_Init *****************
  3661 ;; Defined at:
  3662 ;;		line 69 in file "LCD4b.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;		None
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      void 
  3669 ;; Registers used:
  3670 ;;		wreg, status,2, status,0, pclath, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3676 ;;      Params:         0       0       0       0       0
  3677 ;;      Locals:         0       0       0       0       0
  3678 ;;      Temps:          0       0       2       0       0
  3679 ;;      Totals:         0       0       2       0       0
  3680 ;;Total ram usage:        2 bytes
  3681 ;; Hardware stack levels used: 1
  3682 ;; Hardware stack levels required when called: 5
  3683 ;; This function calls:
  3684 ;;		_Lcd_Cmd
  3685 ;;		_Lcd_Port
  3686 ;; This function is called by:
  3687 ;;		_main
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691  055F                     _Lcd_Init:	
  3692                           ;psect for function _Lcd_Init
  3693                           
  3694  055F                     l2624:	
  3695                           ;incstack = 0
  3696                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3697                           
  3698                           
  3699                           ;LCD4b.c: 70:     Lcd_Port(0x00);
  3700  055F  3000               	movlw	0
  3701  0560  120A  158A  2795  120A  118A  	fcall	_Lcd_Port
  3702  0565                     l2626:
  3703                           
  3704                           ;LCD4b.c: 71:     _delay((unsigned long)((20)*(1000000/4000.0)));
  3705  0565  3007               	movlw	7
  3706  0566  1683               	bsf	3,5	;RP0=1, select bank1
  3707  0567  1303               	bcf	3,6	;RP1=0, select bank1
  3708  0568  00A2               	movwf	(??_Lcd_Init^(0+128)+1)
  3709  0569  307C               	movlw	124
  3710  056A  00A1               	movwf	??_Lcd_Init^(0+128)
  3711  056B                     u2107:
  3712  056B  0BA1               	decfsz	??_Lcd_Init^(0+128),f
  3713  056C  2D6B               	goto	u2107
  3714  056D  0BA2               	decfsz	(??_Lcd_Init^(0+128)+1),f
  3715  056E  2D6B               	goto	u2107
  3716  056F  0000               	nop
  3717  0570                     l2628:
  3718                           
  3719                           ;LCD4b.c: 72:     Lcd_Cmd(0x03);
  3720  0570  3003               	movlw	3
  3721  0571  120A  158A  2778  120A  118A  	fcall	_Lcd_Cmd
  3722                           
  3723                           ;LCD4b.c: 73:     _delay((unsigned long)((5)*(1000000/4000.0)));
  3724  0576  30F9               	movlw	249
  3725  0577  1683               	bsf	3,5	;RP0=1, select bank1
  3726  0578  1303               	bcf	3,6	;RP1=0, select bank1
  3727  0579  00A1               	movwf	??_Lcd_Init^(0+128)
  3728  057A                     u2117:
  3729  057A  2D7B               	nop2
  3730  057B  0BA1               	decfsz	??_Lcd_Init^(0+128),f
  3731  057C  2D7A               	goto	u2117
  3732  057D  2D7E               	nop2
  3733  057E                     l2630:
  3734                           
  3735                           ;LCD4b.c: 74:     Lcd_Cmd(0x03);
  3736  057E  3003               	movlw	3
  3737  057F  120A  158A  2778  120A  118A  	fcall	_Lcd_Cmd
  3738  0584                     l2632:
  3739                           
  3740                           ;LCD4b.c: 75:     _delay((unsigned long)((11)*(1000000/4000000.0)));
  3741  0584  2D85               	nop2	;2 cycle nop
  3742  0585                     l2634:
  3743                           
  3744                           ;LCD4b.c: 76:     Lcd_Cmd(0x03);
  3745  0585  3003               	movlw	3
  3746  0586  120A  158A  2778  120A  118A  	fcall	_Lcd_Cmd
  3747  058B                     l2636:
  3748                           
  3749                           ;LCD4b.c: 78:     Lcd_Cmd(0x02);
  3750  058B  3002               	movlw	2
  3751  058C  120A  158A  2778  120A  118A  	fcall	_Lcd_Cmd
  3752  0591                     l2638:
  3753                           
  3754                           ;LCD4b.c: 79:     Lcd_Cmd(0x02);
  3755  0591  3002               	movlw	2
  3756  0592  120A  158A  2778  120A  118A  	fcall	_Lcd_Cmd
  3757  0597                     l2640:
  3758                           
  3759                           ;LCD4b.c: 80:     Lcd_Cmd(0x08);
  3760  0597  3008               	movlw	8
  3761  0598  120A  158A  2778  120A  118A  	fcall	_Lcd_Cmd
  3762  059D                     l2642:
  3763                           
  3764                           ;LCD4b.c: 81:     Lcd_Cmd(0x00);
  3765  059D  3000               	movlw	0
  3766  059E  120A  158A  2778  120A  118A  	fcall	_Lcd_Cmd
  3767  05A3                     l2644:
  3768                           
  3769                           ;LCD4b.c: 82:     Lcd_Cmd(0x0C);
  3770  05A3  300C               	movlw	12
  3771  05A4  120A  158A  2778  120A  118A  	fcall	_Lcd_Cmd
  3772  05A9                     l2646:
  3773                           
  3774                           ;LCD4b.c: 83:     Lcd_Cmd(0x00);
  3775  05A9  3000               	movlw	0
  3776  05AA  120A  158A  2778  120A  118A  	fcall	_Lcd_Cmd
  3777  05AF                     l2648:
  3778                           
  3779                           ;LCD4b.c: 84:     Lcd_Cmd(0x06);
  3780  05AF  3006               	movlw	6
  3781  05B0  120A  158A  2778  120A  118A  	fcall	_Lcd_Cmd
  3782  05B5                     l311:
  3783  05B5  0008               	return
  3784  05B6                     __end_of_Lcd_Init:
  3785                           
  3786                           	psect	text15
  3787  0F78                     __ptext15:	
  3788 ;; *************** function _Lcd_Cmd *****************
  3789 ;; Defined at:
  3790 ;;		line 36 in file "LCD4b.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  a               1    wreg     unsigned char 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  a               1    0[BANK1 ] unsigned char 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2, status,0, pclath, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3804 ;;      Params:         0       0       0       0       0
  3805 ;;      Locals:         0       0       1       0       0
  3806 ;;      Temps:          0       1       0       0       0
  3807 ;;      Totals:         0       1       1       0       0
  3808 ;;Total ram usage:        2 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; Hardware stack levels required when called: 4
  3811 ;; This function calls:
  3812 ;;		_Lcd_Port
  3813 ;; This function is called by:
  3814 ;;		_Lcd_Set_Cursor
  3815 ;;		_Lcd_Init
  3816 ;;		_Lcd_Clear
  3817 ;;		_Lcd_Shift_Right
  3818 ;;		_Lcd_Shift_Left
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822  0F78                     _Lcd_Cmd:	
  3823                           ;psect for function _Lcd_Cmd
  3824                           
  3825                           
  3826                           ;incstack = 0
  3827                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3828                           ;Lcd_Cmd@a stored from wreg
  3829  0F78  1683               	bsf	3,5	;RP0=1, select bank1
  3830  0F79  1303               	bcf	3,6	;RP1=0, select bank1
  3831  0F7A  00A0               	movwf	Lcd_Cmd@a^(0+128)
  3832  0F7B                     l2436:
  3833                           
  3834                           ;LCD4b.c: 36: void Lcd_Cmd(char a);LCD4b.c: 37: {;LCD4b.c: 38:     PORTBbits.RB2 = 0;
  3835  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  3836  0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  3837  0F7D  1106               	bcf	6,2	;volatile
  3838  0F7E                     l2438:
  3839                           
  3840                           ;LCD4b.c: 39:     Lcd_Port(a);
  3841  0F7E  1683               	bsf	3,5	;RP0=1, select bank1
  3842  0F7F  1303               	bcf	3,6	;RP1=0, select bank1
  3843  0F80  0820               	movf	Lcd_Cmd@a^(0+128),w
  3844  0F81  120A  158A  2795  120A  158A  	fcall	_Lcd_Port
  3845  0F86                     l2440:
  3846                           
  3847                           ;LCD4b.c: 40:     RB3 = 1;
  3848  0F86  1283               	bcf	3,5	;RP0=0, select bank0
  3849  0F87  1303               	bcf	3,6	;RP1=0, select bank0
  3850  0F88  1586               	bsf	6,3	;volatile
  3851  0F89                     l2442:
  3852                           
  3853                           ;LCD4b.c: 41:     _delay((unsigned long)((4)*(1000000/4000.0)));
  3854  0F89  30C7               	movlw	199
  3855  0F8A  1283               	bcf	3,5	;RP0=0, select bank0
  3856  0F8B  1303               	bcf	3,6	;RP1=0, select bank0
  3857  0F8C  00BB               	movwf	??_Lcd_Cmd
  3858  0F8D                     u2127:
  3859  0F8D  2F8E               	nop2
  3860  0F8E  0BBB               	decfsz	??_Lcd_Cmd,f
  3861  0F8F  2F8D               	goto	u2127
  3862  0F90  2F91               	nop2
  3863  0F91                     l2444:
  3864                           
  3865                           ;LCD4b.c: 42:     RB3 = 0;
  3866  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  3867  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  3868  0F93  1186               	bcf	6,3	;volatile
  3869  0F94                     l299:
  3870  0F94  0008               	return
  3871  0F95                     __end_of_Lcd_Cmd:
  3872                           
  3873                           	psect	text16
  3874  0F95                     __ptext16:	
  3875 ;; *************** function _Lcd_Port *****************
  3876 ;; Defined at:
  3877 ;;		line 13 in file "LCD4b.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  a               1    wreg     unsigned char 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;  a               1   26[BANK0 ] unsigned char 
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      void 
  3884 ;; Registers used:
  3885 ;;		wreg
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3891 ;;      Params:         0       0       0       0       0
  3892 ;;      Locals:         0       1       0       0       0
  3893 ;;      Temps:          0       0       0       0       0
  3894 ;;      Totals:         0       1       0       0       0
  3895 ;;Total ram usage:        1 bytes
  3896 ;; Hardware stack levels used: 1
  3897 ;; Hardware stack levels required when called: 3
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_Lcd_Cmd
  3902 ;;		_Lcd_Init
  3903 ;;		_Lcd_Write_Char
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907  0F95                     _Lcd_Port:	
  3908                           ;psect for function _Lcd_Port
  3909                           
  3910                           
  3911                           ;incstack = 0
  3912                           ; Regs used in _Lcd_Port: [wreg]
  3913                           ;Lcd_Port@a stored from wreg
  3914  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3915  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3916  0F97  00BA               	movwf	Lcd_Port@a
  3917  0F98                     l2426:
  3918                           
  3919                           ;LCD4b.c: 13: void Lcd_Port(char a);LCD4b.c: 14: {;LCD4b.c: 15:     if (a & 1)
  3920  0F98  1C3A               	btfss	Lcd_Port@a,0
  3921  0F99  2F9B               	goto	u1651
  3922  0F9A  2F9C               	goto	u1650
  3923  0F9B                     u1651:
  3924  0F9B  2F9E               	goto	l288
  3925  0F9C                     u1650:
  3926  0F9C                     l2428:
  3927                           
  3928                           ;LCD4b.c: 16:         RB4 = 1;
  3929  0F9C  1606               	bsf	6,4	;volatile
  3930  0F9D  2F9F               	goto	l289
  3931  0F9E                     l288:	
  3932                           ;LCD4b.c: 17:     else
  3933                           
  3934                           
  3935                           ;LCD4b.c: 18:         RB4 = 0;
  3936  0F9E  1206               	bcf	6,4	;volatile
  3937  0F9F                     l289:
  3938                           
  3939                           ;LCD4b.c: 20:     if (a & 2)
  3940  0F9F  1CBA               	btfss	Lcd_Port@a,1
  3941  0FA0  2FA2               	goto	u1661
  3942  0FA1  2FA3               	goto	u1660
  3943  0FA2                     u1661:
  3944  0FA2  2FA5               	goto	l290
  3945  0FA3                     u1660:
  3946  0FA3                     l2430:
  3947                           
  3948                           ;LCD4b.c: 21:         RB5 = 1;
  3949  0FA3  1686               	bsf	6,5	;volatile
  3950  0FA4  2FA6               	goto	l291
  3951  0FA5                     l290:	
  3952                           ;LCD4b.c: 22:     else
  3953                           
  3954                           
  3955                           ;LCD4b.c: 23:         RB5 = 0;
  3956  0FA5  1286               	bcf	6,5	;volatile
  3957  0FA6                     l291:
  3958                           
  3959                           ;LCD4b.c: 25:     if (a & 4)
  3960  0FA6  1D3A               	btfss	Lcd_Port@a,2
  3961  0FA7  2FA9               	goto	u1671
  3962  0FA8  2FAA               	goto	u1670
  3963  0FA9                     u1671:
  3964  0FA9  2FAC               	goto	l292
  3965  0FAA                     u1670:
  3966  0FAA                     l2432:
  3967                           
  3968                           ;LCD4b.c: 26:         RB6 = 1;
  3969  0FAA  1706               	bsf	6,6	;volatile
  3970  0FAB  2FAD               	goto	l293
  3971  0FAC                     l292:	
  3972                           ;LCD4b.c: 27:     else
  3973                           
  3974                           
  3975                           ;LCD4b.c: 28:         RB6 = 0;
  3976  0FAC  1306               	bcf	6,6	;volatile
  3977  0FAD                     l293:
  3978                           
  3979                           ;LCD4b.c: 30:     if (a & 8)
  3980  0FAD  1DBA               	btfss	Lcd_Port@a,3
  3981  0FAE  2FB0               	goto	u1681
  3982  0FAF  2FB1               	goto	u1680
  3983  0FB0                     u1681:
  3984  0FB0  2FB3               	goto	l294
  3985  0FB1                     u1680:
  3986  0FB1                     l2434:
  3987                           
  3988                           ;LCD4b.c: 31:         RB7 = 1;
  3989  0FB1  1786               	bsf	6,7	;volatile
  3990  0FB2  2FB4               	goto	l296
  3991  0FB3                     l294:	
  3992                           ;LCD4b.c: 32:     else
  3993                           
  3994                           
  3995                           ;LCD4b.c: 33:         RB7 = 0;
  3996  0FB3  1386               	bcf	6,7	;volatile
  3997  0FB4                     l296:
  3998  0FB4  0008               	return
  3999  0FB5                     __end_of_Lcd_Port:
  4000                           
  4001                           	psect	text17
  4002  039C                     __ptext17:	
  4003 ;; *************** function _isr *****************
  4004 ;; Defined at:
  4005 ;;		line 78 in file "sensor_ctrl_main.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;		None
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;		None
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  1    wreg      void 
  4012 ;; Registers used:
  4013 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4019 ;;      Params:         0       0       0       0       0
  4020 ;;      Locals:         0       0       0       0       0
  4021 ;;      Temps:          0       7       0       0       0
  4022 ;;      Totals:         0       7       0       0       0
  4023 ;;Total ram usage:        7 bytes
  4024 ;; Hardware stack levels used: 1
  4025 ;; Hardware stack levels required when called: 2
  4026 ;; This function calls:
  4027 ;;		_adcRead
  4028 ;;		_percent
  4029 ;;		_tmr0Reset
  4030 ;;		i1_sprintf
  4031 ;; This function is called by:
  4032 ;;		Interrupt level 1
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036  039C                     _isr:	
  4037                           ;psect for function _isr
  4038                           
  4039  039C                     i1l2188:
  4040                           
  4041                           ;sensor_ctrl_main.c: 82:     if (T0IF){
  4042  039C  1D0B               	btfss	11,2	;volatile
  4043  039D  2B9F               	goto	u148_21
  4044  039E  2BA0               	goto	u148_20
  4045  039F                     u148_21:
  4046  039F  2BC3               	goto	i1l2198
  4047  03A0                     u148_20:
  4048  03A0                     i1l2190:
  4049                           
  4050                           ;sensor_ctrl_main.c: 83:         send_cont++;
  4051  03A0  3001               	movlw	1
  4052  03A1  00B3               	movwf	??_isr
  4053  03A2  0833               	movf	??_isr,w
  4054  03A3  07C5               	addwf	_send_cont,f
  4055                           
  4056                           ;sensor_ctrl_main.c: 84:         milis++;
  4057  03A4  3001               	movlw	1
  4058  03A5  00B3               	movwf	??_isr
  4059  03A6  0833               	movf	??_isr,w
  4060  03A7  07C7               	addwf	_milis,f
  4061                           
  4062                           ;sensor_ctrl_main.c: 85:         if (milis == 4){
  4063  03A8  3004               	movlw	4
  4064  03A9  0647               	xorwf	_milis,w
  4065  03AA  1D03               	btfss	3,2
  4066  03AB  2BAD               	goto	u149_21
  4067  03AC  2BAE               	goto	u149_20
  4068  03AD                     u149_21:
  4069  03AD  2BBE               	goto	i1l2196
  4070  03AE                     u149_20:
  4071  03AE                     i1l2192:
  4072                           
  4073                           ;sensor_ctrl_main.c: 86:             pulse = !pulse;
  4074  03AE  0846               	movf	_pulse,w
  4075  03AF  1903               	btfsc	3,2
  4076  03B0  2BB2               	goto	u150_21
  4077  03B1  2BB4               	goto	u150_20
  4078  03B2                     u150_21:
  4079  03B2  3001               	movlw	1
  4080  03B3  2BB5               	goto	u151_20
  4081  03B4                     u150_20:
  4082  03B4  3000               	movlw	0
  4083  03B5                     u151_20:
  4084  03B5  00B3               	movwf	??_isr
  4085  03B6  0833               	movf	??_isr,w
  4086  03B7  00C6               	movwf	_pulse
  4087  03B8                     i1l2194:
  4088                           
  4089                           ;sensor_ctrl_main.c: 87:             PORTDbits.RD6 = pulse;
  4090  03B8  0C46               	rrf	_pulse,w
  4091  03B9  1C03               	skipc
  4092  03BA  1308               	bcf	8,6	;volatile
  4093  03BB  1803               	skipnc
  4094  03BC  1708               	bsf	8,6	;volatile
  4095                           
  4096                           ;sensor_ctrl_main.c: 88:             milis = 0;
  4097  03BD  01C7               	clrf	_milis
  4098  03BE                     i1l2196:
  4099                           
  4100                           ;sensor_ctrl_main.c: 102:         tmr0Reset();
  4101  03BE  120A  158A  2716  120A  118A  	fcall	_tmr0Reset
  4102  03C3                     i1l2198:
  4103                           
  4104                           ;sensor_ctrl_main.c: 109:     if (ADIF){
  4105  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  4106  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  4107  03C5  1F0C               	btfss	12,6	;volatile
  4108  03C6  2BC8               	goto	u152_21
  4109  03C7  2BC9               	goto	u152_20
  4110  03C8                     u152_21:
  4111  03C8  2C08               	goto	i1l2210
  4112  03C9                     u152_20:
  4113  03C9                     i1l2200:
  4114                           
  4115                           ;sensor_ctrl_main.c: 110:         if (ADCON0bits.CHS == 0){
  4116  03C9  0C1F               	rrf	31,w	;volatile
  4117  03CA  00B3               	movwf	??_isr
  4118  03CB  0C33               	rrf	??_isr,w
  4119  03CC  390F               	andlw	15
  4120  03CD  3A00               	xorlw	0
  4121  03CE  1D03               	skipz
  4122  03CF  2BD1               	goto	u153_21
  4123  03D0  2BD2               	goto	u153_20
  4124  03D1                     u153_21:
  4125  03D1  2C05               	goto	i1l2208
  4126  03D2                     u153_20:
  4127  03D2                     i1l2202:
  4128                           
  4129                           ;sensor_ctrl_main.c: 111:             HS_val = adcRead();
  4130  03D2  120A  158A  2724  120A  118A  	fcall	_adcRead
  4131  03D7  0871               	movf	?_adcRead+1,w
  4132  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  4133  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  4134  03DA  00BD               	movwf	_HS_val+1
  4135  03DB  0870               	movf	?_adcRead,w
  4136  03DC  00BC               	movwf	_HS_val
  4137  03DD                     i1l2204:
  4138                           
  4139                           ;sensor_ctrl_main.c: 112:             HS_percent = percent(HS_val, 219, 474);
  4140  03DD  083D               	movf	_HS_val+1,w
  4141  03DE  00A1               	movwf	percent@val+1
  4142  03DF  083C               	movf	_HS_val,w
  4143  03E0  00A0               	movwf	percent@val
  4144  03E1  30DB               	movlw	219
  4145  03E2  00A2               	movwf	percent@water_val
  4146  03E3  3000               	movlw	0
  4147  03E4  00A3               	movwf	percent@water_val+1
  4148  03E5  30DA               	movlw	218
  4149  03E6  00A4               	movwf	percent@air_val
  4150  03E7  3001               	movlw	1
  4151  03E8  00A5               	movwf	percent@air_val+1
  4152  03E9  120A  118A  27D1  120A  118A  	fcall	_percent
  4153  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  4154  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  4155  03F0  0820               	movf	?_percent,w
  4156  03F1  00B3               	movwf	??_isr
  4157  03F2  0833               	movf	??_isr,w
  4158  03F3  00C3               	movwf	_HS_percent
  4159  03F4                     i1l2206:
  4160                           
  4161                           ;sensor_ctrl_main.c: 113:             sprintf(HS_str, "%d", HS_percent);
  4162  03F4  3017               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4163  03F5  00B3               	movwf	??_isr
  4164  03F6  0833               	movf	??_isr,w
  4165  03F7  00A6               	movwf	i1sprintf@f
  4166  03F8  0843               	movf	_HS_percent,w
  4167  03F9  00B4               	movwf	??_isr+1
  4168  03FA  01B5               	clrf	??_isr+2
  4169  03FB  0834               	movf	??_isr+1,w
  4170  03FC  00A7               	movwf	?i1_sprintf+1
  4171  03FD  0835               	movf	??_isr+2,w
  4172  03FE  00A8               	movwf	?i1_sprintf+2
  4173  03FF  30C5               	movlw	(low (_HS_str| 0))& (0+255)
  4174  0400  120A  118A  22B2  120A  118A  	fcall	i1_sprintf
  4175  0405                     i1l2208:
  4176                           
  4177                           ;sensor_ctrl_main.c: 115:         PIR1bits.ADIF = 0;
  4178  0405  1283               	bcf	3,5	;RP0=0, select bank0
  4179  0406  1303               	bcf	3,6	;RP1=0, select bank0
  4180  0407  130C               	bcf	12,6	;volatile
  4181  0408                     i1l2210:
  4182                           
  4183                           ;sensor_ctrl_main.c: 119:     if (RBIF){
  4184  0408  1C0B               	btfss	11,0	;volatile
  4185  0409  2C0B               	goto	u154_21
  4186  040A  2C0C               	goto	u154_20
  4187  040B                     u154_21:
  4188  040B  2C3A               	goto	i1l116
  4189  040C                     u154_20:
  4190  040C                     i1l2212:
  4191                           
  4192                           ;sensor_ctrl_main.c: 120:         if (!PORTBbits.RB0){
  4193  040C  1806               	btfsc	6,0	;volatile
  4194  040D  2C0F               	goto	u155_21
  4195  040E  2C10               	goto	u155_20
  4196  040F                     u155_21:
  4197  040F  2C39               	goto	i1l2224
  4198  0410                     u155_20:
  4199  0410                     i1l113:
  4200  0410  1C06               	btfss	6,0	;volatile
  4201  0411  2C13               	goto	u156_21
  4202  0412  2C14               	goto	u156_20
  4203  0413                     u156_21:
  4204  0413  2C10               	goto	i1l113
  4205  0414                     u156_20:
  4206  0414                     i1l2216:
  4207                           
  4208                           ;sensor_ctrl_main.c: 122:             spst = !spst;
  4209  0414  0841               	movf	_spst,w
  4210  0415  1903               	btfsc	3,2
  4211  0416  2C18               	goto	u157_21
  4212  0417  2C1A               	goto	u157_20
  4213  0418                     u157_21:
  4214  0418  3001               	movlw	1
  4215  0419  2C1B               	goto	u158_20
  4216  041A                     u157_20:
  4217  041A  3000               	movlw	0
  4218  041B                     u158_20:
  4219  041B  00B3               	movwf	??_isr
  4220  041C  0833               	movf	??_isr,w
  4221  041D  00C1               	movwf	_spst
  4222  041E                     i1l2218:
  4223                           
  4224                           ;sensor_ctrl_main.c: 123:             PORTDbits.RD7 = spst;
  4225  041E  0C41               	rrf	_spst,w
  4226  041F  1C03               	skipc
  4227  0420  1388               	bcf	8,7	;volatile
  4228  0421  1803               	skipnc
  4229  0422  1788               	bsf	8,7	;volatile
  4230  0423                     i1l2220:
  4231                           
  4232                           ;sensor_ctrl_main.c: 124:             spst_flag = spst+2;
  4233  0423  0841               	movf	_spst,w
  4234  0424  3E02               	addlw	2
  4235  0425  00B3               	movwf	??_isr
  4236  0426  0833               	movf	??_isr,w
  4237  0427  00C0               	movwf	_spst_flag
  4238  0428                     i1l2222:
  4239                           
  4240                           ;sensor_ctrl_main.c: 125:             sprintf(spst_str, "%d", (spst_flag));
  4241  0428  3017               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4242  0429  00B3               	movwf	??_isr
  4243  042A  0833               	movf	??_isr,w
  4244  042B  00A6               	movwf	i1sprintf@f
  4245  042C  0840               	movf	_spst_flag,w
  4246  042D  00B4               	movwf	??_isr+1
  4247  042E  01B5               	clrf	??_isr+2
  4248  042F  0834               	movf	??_isr+1,w
  4249  0430  00A7               	movwf	?i1_sprintf+1
  4250  0431  0835               	movf	??_isr+2,w
  4251  0432  00A8               	movwf	?i1_sprintf+2
  4252  0433  30BB               	movlw	(low (_spst_str| 0))& (0+255)
  4253  0434  120A  118A  22B2  120A  118A  	fcall	i1_sprintf
  4254  0439                     i1l2224:
  4255                           
  4256                           ;sensor_ctrl_main.c: 127:         INTCONbits.RBIF = 0;
  4257  0439  100B               	bcf	11,0	;volatile
  4258  043A                     i1l116:
  4259  043A  1283               	bcf	3,5	;RP0=0, select bank0
  4260  043B  1303               	bcf	3,6	;RP1=0, select bank0
  4261  043C  0839               	movf	??_isr+6,w
  4262  043D  00FF               	movwf	btemp+1
  4263  043E  0838               	movf	??_isr+5,w
  4264  043F  008A               	movwf	10
  4265  0440  0837               	movf	??_isr+4,w
  4266  0441  0084               	movwf	4
  4267  0442  0E36               	swapf	??_isr+3,w
  4268  0443  0083               	movwf	3
  4269  0444  0EFE               	swapf	btemp,f
  4270  0445  0E7E               	swapf	btemp,w
  4271  0446  0009               	retfie
  4272  0447                     __end_of_isr:
  4273                           
  4274                           	psect	intentry
  4275  0004                     __pintentry:	
  4276                           ;incstack = 0
  4277                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4278                           
  4279  0004                     interrupt_function:
  4280  007E                     saved_w	set	btemp
  4281  0004  00FE               	movwf	btemp
  4282  0005  0E03               	swapf	3,w
  4283  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4284  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4285  0008  00B6               	movwf	??_isr+3
  4286  0009  0804               	movf	4,w
  4287  000A  00B7               	movwf	??_isr+4
  4288  000B  080A               	movf	10,w
  4289  000C  00B8               	movwf	??_isr+5
  4290  000D  087F               	movf	btemp+1,w
  4291  000E  00B9               	movwf	??_isr+6
  4292  000F  120A  118A  2B9C   	ljmp	_isr
  4293                           
  4294                           	psect	text18
  4295  02B2                     __ptext18:	
  4296 ;; *************** function i1_sprintf *****************
  4297 ;; Defined at:
  4298 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;  sp              1    wreg     PTR unsigned char 
  4301 ;;		 -> HS_flag_str(10), spst_str(10), HS_str(10), 
  4302 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  4303 ;;		 -> STR_4(3), STR_3(3), STR_2(3), STR_1(3), 
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  4306 ;;		 -> HS_flag_str(10), spst_str(10), HS_str(10), 
  4307 ;;  tmpval          4    0        struct .
  4308 ;;  val             2   15[BANK0 ] unsigned int 
  4309 ;;  cp              2    0        PTR const unsigned char 
  4310 ;;  len             2    0        unsigned int 
  4311 ;;  c               1   18[BANK0 ] unsigned char 
  4312 ;;  prec            1   14[BANK0 ] char 
  4313 ;;  flag            1   13[BANK0 ] unsigned char 
  4314 ;;  ap              1   12[BANK0 ] PTR void [1]
  4315 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  2    6[BANK0 ] int 
  4318 ;; Registers used:
  4319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4325 ;;      Params:         0       3       0       0       0
  4326 ;;      Locals:         0       7       0       0       0
  4327 ;;      Temps:          0       3       0       0       0
  4328 ;;      Totals:         0      13       0       0       0
  4329 ;;Total ram usage:       13 bytes
  4330 ;; Hardware stack levels used: 1
  4331 ;; Hardware stack levels required when called: 1
  4332 ;; This function calls:
  4333 ;;		i1___lwdiv
  4334 ;;		i1___lwmod
  4335 ;; This function is called by:
  4336 ;;		_isr
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340  02B2                     i1_sprintf:	
  4341                           ;psect for function i1_sprintf
  4342                           
  4343                           
  4344                           ;incstack = 0
  4345                           ; Regs used in i1_sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4346                           ;i1sprintf@sp stored from wreg
  4347  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  4348  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  4349  02B4  00B1               	movwf	i1sprintf@sp
  4350  02B5                     i1l2126:
  4351                           
  4352                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  4353  02B5  3027               	movlw	(low ((?i1_sprintf| 0+1)))& (0+255)
  4354  02B6  00A9               	movwf	??i1_sprintf
  4355  02B7  0829               	movf	??i1_sprintf,w
  4356  02B8  00AC               	movwf	i1sprintf@ap
  4357                           
  4358                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4359  02B9  2B85               	goto	i1l2178
  4360  02BA                     i1l2128:
  4361                           
  4362                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  4363  02BA  3025               	movlw	37
  4364  02BB  0632               	xorwf	i1sprintf@c,w
  4365  02BC  1903               	btfsc	3,2
  4366  02BD  2ABF               	goto	u141_21
  4367  02BE  2AC0               	goto	u141_20
  4368  02BF                     u141_21:
  4369  02BF  2ACC               	goto	i1l2134
  4370  02C0                     u141_20:
  4371  02C0                     i1l2130:
  4372                           
  4373                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  4374  02C0  0832               	movf	i1sprintf@c,w
  4375  02C1  00A9               	movwf	??i1_sprintf
  4376  02C2  0831               	movf	i1sprintf@sp,w
  4377  02C3  0084               	movwf	4
  4378  02C4  0829               	movf	??i1_sprintf,w
  4379  02C5  1383               	bcf	3,7	;select IRP bank0
  4380  02C6  0080               	movwf	0
  4381  02C7                     i1l2132:
  4382  02C7  3001               	movlw	1
  4383  02C8  00A9               	movwf	??i1_sprintf
  4384  02C9  0829               	movf	??i1_sprintf,w
  4385  02CA  07B1               	addwf	i1sprintf@sp,f
  4386                           
  4387                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 559:    continue;
  4388  02CB  2B85               	goto	i1l2178
  4389  02CC                     i1l2134:
  4390                           
  4391                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  4392  02CC  01AD               	clrf	i1sprintf@flag
  4393  02CD                     i1l2138:	
  4394                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  4395                           
  4396  02CD  3001               	movlw	1
  4397  02CE  07A6               	addwf	i1sprintf@f,f
  4398  02CF  30FF               	movlw	-1
  4399  02D0  0726               	addwf	i1sprintf@f,w
  4400  02D1  0084               	movwf	4
  4401  02D2  120A  118A  27AA  120A  118A  	fcall	stringdir
  4402  02D7  00B2               	movwf	i1sprintf@c
  4403  02D8  00A9               	movwf	??i1_sprintf
  4404  02D9  01AA               	clrf	??i1_sprintf+1
  4405                           
  4406                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4407                           ; Switch size 1, requested type "simple"
  4408                           ; Number of cases is 1, Range of values is 0 to 0
  4409                           ; switch strategies available:
  4410                           ; Name         Instructions Cycles
  4411                           ; simple_byte            4     3 (average)
  4412                           ; direct_byte           11     8 (fixed)
  4413                           ; jumptable            260     6 (fixed)
  4414                           ;	Chosen strategy is simple_byte
  4415  02DA  082A               	movf	??i1_sprintf+1,w
  4416  02DB  3A00               	xorlw	0	; case 0
  4417  02DC  1903               	skipnz
  4418  02DD  2ADF               	goto	i1l2888
  4419  02DE  2B85               	goto	i1l2178
  4420  02DF                     i1l2888:
  4421                           
  4422                           ; Switch size 1, requested type "simple"
  4423                           ; Number of cases is 3, Range of values is 0 to 105
  4424                           ; switch strategies available:
  4425                           ; Name         Instructions Cycles
  4426                           ; simple_byte           10     6 (average)
  4427                           ; jumptable            260     6 (fixed)
  4428                           ;	Chosen strategy is simple_byte
  4429  02DF  0829               	movf	??i1_sprintf,w
  4430  02E0  3A00               	xorlw	0	; case 0
  4431  02E1  1903               	skipnz
  4432  02E2  2B97               	goto	i1l2180
  4433  02E3  3A64               	xorlw	100	; case 100
  4434  02E4  1903               	skipnz
  4435  02E5  2AEA               	goto	i1l2140
  4436  02E6  3A0D               	xorlw	13	; case 105
  4437  02E7  1903               	skipnz
  4438  02E8  2AEA               	goto	i1l2140
  4439  02E9  2B85               	goto	i1l2178
  4440  02EA                     i1l2140:
  4441                           
  4442                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4443  02EA  082C               	movf	i1sprintf@ap,w
  4444  02EB  0084               	movwf	4
  4445  02EC  1383               	bcf	3,7	;select IRP bank0
  4446  02ED  0800               	movf	0,w
  4447  02EE  00AF               	movwf	i1sprintf@val
  4448  02EF  0A84               	incf	4,f
  4449  02F0  0800               	movf	0,w
  4450  02F1  00B0               	movwf	i1sprintf@val+1
  4451  02F2                     i1l2142:
  4452  02F2  3002               	movlw	2
  4453  02F3  00A9               	movwf	??i1_sprintf
  4454  02F4  0829               	movf	??i1_sprintf,w
  4455  02F5  07AC               	addwf	i1sprintf@ap,f
  4456  02F6                     i1l2144:
  4457                           
  4458                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  4459  02F6  1FB0               	btfss	i1sprintf@val+1,7
  4460  02F7  2AF9               	goto	u142_21
  4461  02F8  2AFA               	goto	u142_20
  4462  02F9                     u142_21:
  4463  02F9  2B03               	goto	i1l2150
  4464  02FA                     u142_20:
  4465  02FA                     i1l2146:
  4466                           
  4467                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  4468  02FA  3003               	movlw	3
  4469  02FB  00A9               	movwf	??i1_sprintf
  4470  02FC  0829               	movf	??i1_sprintf,w
  4471  02FD  04AD               	iorwf	i1sprintf@flag,f
  4472  02FE                     i1l2148:
  4473                           
  4474                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  4475  02FE  09AF               	comf	i1sprintf@val,f
  4476  02FF  09B0               	comf	i1sprintf@val+1,f
  4477  0300  0AAF               	incf	i1sprintf@val,f
  4478  0301  1903               	skipnz
  4479  0302  0AB0               	incf	i1sprintf@val+1,f
  4480  0303                     i1l2150:
  4481                           
  4482                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  4483  0303  01B2               	clrf	i1sprintf@c
  4484  0304  0AB2               	incf	i1sprintf@c,f
  4485  0305                     i1l2156:
  4486                           
  4487                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  4488  0305  0832               	movf	i1sprintf@c,w
  4489  0306  00A9               	movwf	??i1_sprintf
  4490  0307  0729               	addwf	??i1_sprintf,w
  4491  0308  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4492  0309  0084               	movwf	4
  4493  030A  120A  118A  27AA  120A  118A  	fcall	stringdir
  4494  030F  00AA               	movwf	??i1_sprintf+1
  4495  0310  120A  118A  27AA  120A  118A  	fcall	stringdir
  4496  0315  00AB               	movwf	??i1_sprintf+2
  4497  0316  082B               	movf	??i1_sprintf+2,w
  4498  0317  0230               	subwf	i1sprintf@val+1,w
  4499  0318  1D03               	skipz
  4500  0319  2B1C               	goto	u143_25
  4501  031A  082A               	movf	??i1_sprintf+1,w
  4502  031B  022F               	subwf	i1sprintf@val,w
  4503  031C                     u143_25:
  4504  031C  1803               	skipnc
  4505  031D  2B1F               	goto	u143_21
  4506  031E  2B20               	goto	u143_20
  4507  031F                     u143_21:
  4508  031F  2B21               	goto	i1l2160
  4509  0320                     u143_20:
  4510  0320  2B2B               	goto	i1l2162
  4511  0321                     i1l2160:
  4512  0321  3001               	movlw	1
  4513  0322  00A9               	movwf	??i1_sprintf
  4514  0323  0829               	movf	??i1_sprintf,w
  4515  0324  07B2               	addwf	i1sprintf@c,f
  4516  0325  3005               	movlw	5
  4517  0326  0632               	xorwf	i1sprintf@c,w
  4518  0327  1D03               	btfss	3,2
  4519  0328  2B2A               	goto	u144_21
  4520  0329  2B2B               	goto	u144_20
  4521  032A                     u144_21:
  4522  032A  2B05               	goto	i1l2156
  4523  032B                     u144_20:
  4524  032B                     i1l2162:
  4525                           
  4526                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  4527  032B  082D               	movf	i1sprintf@flag,w
  4528  032C  3903               	andlw	3
  4529  032D  1903               	btfsc	3,2
  4530  032E  2B30               	goto	u145_21
  4531  032F  2B31               	goto	u145_20
  4532  0330                     u145_21:
  4533  0330  2B3C               	goto	i1l2168
  4534  0331                     u145_20:
  4535  0331                     i1l2164:
  4536                           
  4537                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4538  0331  302D               	movlw	45
  4539  0332  00A9               	movwf	??i1_sprintf
  4540  0333  0831               	movf	i1sprintf@sp,w
  4541  0334  0084               	movwf	4
  4542  0335  0829               	movf	??i1_sprintf,w
  4543  0336  1383               	bcf	3,7	;select IRP bank0
  4544  0337  0080               	movwf	0
  4545  0338                     i1l2166:
  4546  0338  3001               	movlw	1
  4547  0339  00A9               	movwf	??i1_sprintf
  4548  033A  0829               	movf	??i1_sprintf,w
  4549  033B  07B1               	addwf	i1sprintf@sp,f
  4550  033C                     i1l2168:
  4551                           
  4552                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  4553  033C  0832               	movf	i1sprintf@c,w
  4554  033D  00A9               	movwf	??i1_sprintf
  4555  033E  0829               	movf	??i1_sprintf,w
  4556  033F  00AE               	movwf	i1sprintf@prec
  4557                           
  4558                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4559  0340  2B7C               	goto	i1l2176
  4560  0341                     i1l2170:
  4561                           
  4562                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  4563  0341  300A               	movlw	10
  4564  0342  00A0               	movwf	i1___lwmod@divisor
  4565  0343  3000               	movlw	0
  4566  0344  00A1               	movwf	i1___lwmod@divisor+1
  4567  0345  082E               	movf	i1sprintf@prec,w
  4568  0346  00A9               	movwf	??i1_sprintf
  4569  0347  0729               	addwf	??i1_sprintf,w
  4570  0348  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4571  0349  0084               	movwf	4
  4572  034A  120A  118A  27AA  120A  118A  	fcall	stringdir
  4573  034F  00F6               	movwf	i1___lwdiv@divisor
  4574  0350  120A  118A  27AA  120A  118A  	fcall	stringdir
  4575  0355  00F7               	movwf	i1___lwdiv@divisor+1
  4576  0356  0830               	movf	i1sprintf@val+1,w
  4577  0357  00F9               	movwf	i1___lwdiv@dividend+1
  4578  0358  082F               	movf	i1sprintf@val,w
  4579  0359  00F8               	movwf	i1___lwdiv@dividend
  4580  035A  120A  118A  26A1  120A  118A  	fcall	i1___lwdiv
  4581  035F  0877               	movf	?i1___lwdiv+1,w
  4582  0360  1283               	bcf	3,5	;RP0=0, select bank0
  4583  0361  1303               	bcf	3,6	;RP1=0, select bank0
  4584  0362  00A3               	movwf	i1___lwmod@dividend+1
  4585  0363  0876               	movf	?i1___lwdiv,w
  4586  0364  00A2               	movwf	i1___lwmod@dividend
  4587  0365  120A  118A  2764  120A  118A  	fcall	i1___lwmod
  4588  036A  1283               	bcf	3,5	;RP0=0, select bank0
  4589  036B  1303               	bcf	3,6	;RP1=0, select bank0
  4590  036C  0820               	movf	?i1___lwmod,w
  4591  036D  3E30               	addlw	48
  4592  036E  00AA               	movwf	??i1_sprintf+1
  4593  036F  082A               	movf	??i1_sprintf+1,w
  4594  0370  00B2               	movwf	i1sprintf@c
  4595  0371                     i1l2172:
  4596                           
  4597                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  4598  0371  0832               	movf	i1sprintf@c,w
  4599  0372  00A9               	movwf	??i1_sprintf
  4600  0373  0831               	movf	i1sprintf@sp,w
  4601  0374  0084               	movwf	4
  4602  0375  0829               	movf	??i1_sprintf,w
  4603  0376  1383               	bcf	3,7	;select IRP bank0
  4604  0377  0080               	movwf	0
  4605  0378                     i1l2174:
  4606  0378  3001               	movlw	1
  4607  0379  00A9               	movwf	??i1_sprintf
  4608  037A  0829               	movf	??i1_sprintf,w
  4609  037B  07B1               	addwf	i1sprintf@sp,f
  4610  037C                     i1l2176:
  4611                           
  4612                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4613  037C  30FF               	movlw	255
  4614  037D  00A9               	movwf	??i1_sprintf
  4615  037E  0829               	movf	??i1_sprintf,w
  4616  037F  07AE               	addwf	i1sprintf@prec,f
  4617  0380  0A2E               	incf	i1sprintf@prec,w
  4618  0381  1D03               	btfss	3,2
  4619  0382  2B84               	goto	u146_21
  4620  0383  2B85               	goto	u146_20
  4621  0384                     u146_21:
  4622  0384  2B41               	goto	i1l2170
  4623  0385                     u146_20:
  4624  0385                     i1l2178:
  4625                           
  4626                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4627  0385  3001               	movlw	1
  4628  0386  07A6               	addwf	i1sprintf@f,f
  4629  0387  30FF               	movlw	-1
  4630  0388  0726               	addwf	i1sprintf@f,w
  4631  0389  0084               	movwf	4
  4632  038A  120A  118A  27AA  120A  118A  	fcall	stringdir
  4633  038F  00A9               	movwf	??i1_sprintf
  4634  0390  0829               	movf	??i1_sprintf,w
  4635  0391  00B2               	movwf	i1sprintf@c
  4636  0392  0832               	movf	i1sprintf@c,w
  4637  0393  1D03               	btfss	3,2
  4638  0394  2B96               	goto	u147_21
  4639  0395  2B97               	goto	u147_20
  4640  0396                     u147_21:
  4641  0396  2ABA               	goto	i1l2128
  4642  0397                     u147_20:
  4643  0397                     i1l2180:
  4644                           
  4645                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4646  0397  0831               	movf	i1sprintf@sp,w
  4647  0398  0084               	movwf	4
  4648  0399  1383               	bcf	3,7	;select IRP bank0
  4649  039A  0180               	clrf	0
  4650  039B                     i1l436:
  4651  039B  0008               	return
  4652  039C                     __end_ofi1_sprintf:
  4653                           
  4654                           	psect	text19
  4655  0764                     __ptext19:	
  4656 ;; *************** function i1___lwmod *****************
  4657 ;; Defined at:
  4658 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwmod.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  divisor         2    0[BANK0 ] unsigned int 
  4661 ;;  dividend        2    2[BANK0 ] unsigned int 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  counter         1    5[BANK0 ] unsigned char 
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  2    0[BANK0 ] unsigned int 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4673 ;;      Params:         0       4       0       0       0
  4674 ;;      Locals:         0       1       0       0       0
  4675 ;;      Temps:          0       1       0       0       0
  4676 ;;      Totals:         0       6       0       0       0
  4677 ;;Total ram usage:        6 bytes
  4678 ;; Hardware stack levels used: 1
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		i1_sprintf
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686  0764                     i1___lwmod:	
  4687                           ;psect for function i1___lwmod
  4688                           
  4689  0764                     i1l1848:	
  4690                           ;incstack = 0
  4691                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  4692                           
  4693  0764  1283               	bcf	3,5	;RP0=0, select bank0
  4694  0765  1303               	bcf	3,6	;RP1=0, select bank0
  4695  0766  0820               	movf	i1___lwmod@divisor,w
  4696  0767  0421               	iorwf	i1___lwmod@divisor+1,w
  4697  0768  1903               	btfsc	3,2
  4698  0769  2F6B               	goto	u117_21
  4699  076A  2F6C               	goto	u117_20
  4700  076B                     u117_21:
  4701  076B  2F9B               	goto	i1l1866
  4702  076C                     u117_20:
  4703  076C                     i1l1850:
  4704  076C  01A5               	clrf	i1___lwmod@counter
  4705  076D  0AA5               	incf	i1___lwmod@counter,f
  4706  076E  2F7A               	goto	i1l1856
  4707  076F                     i1l1852:
  4708  076F  3001               	movlw	1
  4709  0770                     u118_25:
  4710  0770  1003               	clrc
  4711  0771  0DA0               	rlf	i1___lwmod@divisor,f
  4712  0772  0DA1               	rlf	i1___lwmod@divisor+1,f
  4713  0773  3EFF               	addlw	-1
  4714  0774  1D03               	skipz
  4715  0775  2F70               	goto	u118_25
  4716  0776                     i1l1854:
  4717  0776  3001               	movlw	1
  4718  0777  00A4               	movwf	??i1___lwmod
  4719  0778  0824               	movf	??i1___lwmod,w
  4720  0779  07A5               	addwf	i1___lwmod@counter,f
  4721  077A                     i1l1856:
  4722  077A  1FA1               	btfss	i1___lwmod@divisor+1,7
  4723  077B  2F7D               	goto	u119_21
  4724  077C  2F7E               	goto	u119_20
  4725  077D                     u119_21:
  4726  077D  2F6F               	goto	i1l1852
  4727  077E                     u119_20:
  4728  077E                     i1l1858:
  4729  077E  0821               	movf	i1___lwmod@divisor+1,w
  4730  077F  0223               	subwf	i1___lwmod@dividend+1,w
  4731  0780  1D03               	skipz
  4732  0781  2F84               	goto	u120_25
  4733  0782  0820               	movf	i1___lwmod@divisor,w
  4734  0783  0222               	subwf	i1___lwmod@dividend,w
  4735  0784                     u120_25:
  4736  0784  1C03               	skipc
  4737  0785  2F87               	goto	u120_21
  4738  0786  2F88               	goto	u120_20
  4739  0787                     u120_21:
  4740  0787  2F8E               	goto	i1l1862
  4741  0788                     u120_20:
  4742  0788                     i1l1860:
  4743  0788  0820               	movf	i1___lwmod@divisor,w
  4744  0789  02A2               	subwf	i1___lwmod@dividend,f
  4745  078A  0821               	movf	i1___lwmod@divisor+1,w
  4746  078B  1C03               	skipc
  4747  078C  03A3               	decf	i1___lwmod@dividend+1,f
  4748  078D  02A3               	subwf	i1___lwmod@dividend+1,f
  4749  078E                     i1l1862:
  4750  078E  3001               	movlw	1
  4751  078F                     u121_25:
  4752  078F  1003               	clrc
  4753  0790  0CA1               	rrf	i1___lwmod@divisor+1,f
  4754  0791  0CA0               	rrf	i1___lwmod@divisor,f
  4755  0792  3EFF               	addlw	-1
  4756  0793  1D03               	skipz
  4757  0794  2F8F               	goto	u121_25
  4758  0795                     i1l1864:
  4759  0795  3001               	movlw	1
  4760  0796  02A5               	subwf	i1___lwmod@counter,f
  4761  0797  1D03               	btfss	3,2
  4762  0798  2F9A               	goto	u122_21
  4763  0799  2F9B               	goto	u122_20
  4764  079A                     u122_21:
  4765  079A  2F7E               	goto	i1l1858
  4766  079B                     u122_20:
  4767  079B                     i1l1866:
  4768  079B  0823               	movf	i1___lwmod@dividend+1,w
  4769  079C  00A1               	movwf	?i1___lwmod+1
  4770  079D  0822               	movf	i1___lwmod@dividend,w
  4771  079E  00A0               	movwf	?i1___lwmod
  4772  079F                     i1l722:
  4773  079F  0008               	return
  4774  07A0                     __end_ofi1___lwmod:
  4775                           
  4776                           	psect	text20
  4777  0F16                     __ptext20:	
  4778 ;; *************** function _tmr0Reset *****************
  4779 ;; Defined at:
  4780 ;;		line 53 in file "tmr0_config.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;		None
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;		None
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		wreg
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4794 ;;      Params:         0       0       0       0       0
  4795 ;;      Locals:         0       0       0       0       0
  4796 ;;      Temps:          0       0       0       0       0
  4797 ;;      Totals:         0       0       0       0       0
  4798 ;;Total ram usage:        0 bytes
  4799 ;; Hardware stack levels used: 1
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_isr
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807  0F16                     _tmr0Reset:	
  4808                           ;psect for function _tmr0Reset
  4809                           
  4810  0F16                     i1l1870:	
  4811                           ;incstack = 0
  4812                           ; Regs used in _tmr0Reset: [wreg]
  4813                           
  4814                           
  4815                           ;tmr0_config.c: 54:     INTCONbits.T0IF = 0;
  4816  0F16  110B               	bcf	11,2	;volatile
  4817  0F17                     i1l1872:
  4818                           
  4819                           ;tmr0_config.c: 55:     TMR0 = 178;
  4820  0F17  30B2               	movlw	178
  4821  0F18  1283               	bcf	3,5	;RP0=0, select bank0
  4822  0F19  1303               	bcf	3,6	;RP1=0, select bank0
  4823  0F1A  0081               	movwf	1	;volatile
  4824  0F1B                     i1l215:
  4825  0F1B  0008               	return
  4826  0F1C                     __end_of_tmr0Reset:
  4827                           
  4828                           	psect	text21
  4829  07D1                     __ptext21:	
  4830 ;; *************** function _percent *****************
  4831 ;; Defined at:
  4832 ;;		line 238 in file "sensor_ctrl_main.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;  val             2    0[BANK0 ] unsigned int 
  4835 ;;  water_val       2    2[BANK0 ] unsigned int 
  4836 ;;  air_val         2    4[BANK0 ] unsigned int 
  4837 ;; Auto vars:     Size  Location     Type
  4838 ;;		None
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  2    0[BANK0 ] int 
  4841 ;; Registers used:
  4842 ;;		wreg, status,2, status,0, pclath, cstack
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4848 ;;      Params:         0       6       0       0       0
  4849 ;;      Locals:         0       0       0       0       0
  4850 ;;      Temps:          0       0       0       0       0
  4851 ;;      Totals:         0       6       0       0       0
  4852 ;;Total ram usage:        6 bytes
  4853 ;; Hardware stack levels used: 1
  4854 ;; Hardware stack levels required when called: 1
  4855 ;; This function calls:
  4856 ;;		___wmul
  4857 ;;		i1___lwdiv
  4858 ;; This function is called by:
  4859 ;;		_isr
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863  07D1                     _percent:	
  4864                           ;psect for function _percent
  4865                           
  4866  07D1                     i1l1880:	
  4867                           ;incstack = 0
  4868                           ; Regs used in _percent: [wreg+status,2+status,0+pclath+cstack]
  4869                           
  4870                           
  4871                           ;sensor_ctrl_main.c: 239:     return (int)(((air_val-val)*100)/(air_val-water_val));
  4872  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  4873  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  4874  07D3  0822               	movf	percent@water_val,w
  4875  07D4  0224               	subwf	percent@air_val,w
  4876  07D5  00F6               	movwf	i1___lwdiv@divisor
  4877  07D6  0823               	movf	percent@water_val+1,w
  4878  07D7  1C03               	skipc
  4879  07D8  0A23               	incf	percent@water_val+1,w
  4880  07D9  0225               	subwf	percent@air_val+1,w
  4881  07DA  00F7               	movwf	i1___lwdiv@divisor+1
  4882  07DB  0820               	movf	percent@val,w
  4883  07DC  0224               	subwf	percent@air_val,w
  4884  07DD  00F0               	movwf	___wmul@multiplier
  4885  07DE  0821               	movf	percent@val+1,w
  4886  07DF  1C03               	skipc
  4887  07E0  0A21               	incf	percent@val+1,w
  4888  07E1  0225               	subwf	percent@air_val+1,w
  4889  07E2  00F1               	movwf	___wmul@multiplier+1
  4890  07E3  3064               	movlw	100
  4891  07E4  00F2               	movwf	___wmul@multiplicand
  4892  07E5  3000               	movlw	0
  4893  07E6  00F3               	movwf	___wmul@multiplicand+1
  4894  07E7  120A  158A  27B5  120A  118A  	fcall	___wmul
  4895  07EC  0871               	movf	?___wmul+1,w
  4896  07ED  00F9               	movwf	i1___lwdiv@dividend+1
  4897  07EE  0870               	movf	?___wmul,w
  4898  07EF  00F8               	movwf	i1___lwdiv@dividend
  4899  07F0  120A  118A  26A1  120A  118A  	fcall	i1___lwdiv
  4900  07F5  0877               	movf	?i1___lwdiv+1,w
  4901  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  4902  07F7  1303               	bcf	3,6	;RP1=0, select bank0
  4903  07F8  00A1               	movwf	?_percent+1
  4904  07F9  0876               	movf	?i1___lwdiv,w
  4905  07FA  00A0               	movwf	?_percent
  4906  07FB                     i1l143:
  4907  07FB  0008               	return
  4908  07FC                     __end_of_percent:
  4909                           
  4910                           	psect	text22
  4911  06A1                     __ptext22:	
  4912 ;; *************** function i1___lwdiv *****************
  4913 ;; Defined at:
  4914 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;  divisor         2    6[COMMON] unsigned int 
  4917 ;;  dividend        2    8[COMMON] unsigned int 
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;  quotient        2   11[COMMON] unsigned int 
  4920 ;;  counter         1   13[COMMON] unsigned char 
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  2    6[COMMON] unsigned int 
  4923 ;; Registers used:
  4924 ;;		wreg, status,2, status,0
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4930 ;;      Params:         4       0       0       0       0
  4931 ;;      Locals:         3       0       0       0       0
  4932 ;;      Temps:          1       0       0       0       0
  4933 ;;      Totals:         8       0       0       0       0
  4934 ;;Total ram usage:        8 bytes
  4935 ;; Hardware stack levels used: 1
  4936 ;; This function calls:
  4937 ;;		Nothing
  4938 ;; This function is called by:
  4939 ;;		_percent
  4940 ;;		i1_sprintf
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944  06A1                     i1___lwdiv:	
  4945                           ;psect for function i1___lwdiv
  4946                           
  4947  06A1                     i1l1822:	
  4948                           ;incstack = 0
  4949                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  4950                           
  4951  06A1  01FB               	clrf	i1___lwdiv@quotient
  4952  06A2  01FC               	clrf	i1___lwdiv@quotient+1
  4953  06A3                     i1l1824:
  4954  06A3  0876               	movf	i1___lwdiv@divisor,w
  4955  06A4  0477               	iorwf	i1___lwdiv@divisor+1,w
  4956  06A5  1903               	btfsc	3,2
  4957  06A6  2EA8               	goto	u110_21
  4958  06A7  2EA9               	goto	u110_20
  4959  06A8                     u110_21:
  4960  06A8  2EE0               	goto	i1l1844
  4961  06A9                     u110_20:
  4962  06A9                     i1l1826:
  4963  06A9  01FD               	clrf	i1___lwdiv@counter
  4964  06AA  0AFD               	incf	i1___lwdiv@counter,f
  4965  06AB  2EB7               	goto	i1l1832
  4966  06AC                     i1l1828:
  4967  06AC  3001               	movlw	1
  4968  06AD                     u111_25:
  4969  06AD  1003               	clrc
  4970  06AE  0DF6               	rlf	i1___lwdiv@divisor,f
  4971  06AF  0DF7               	rlf	i1___lwdiv@divisor+1,f
  4972  06B0  3EFF               	addlw	-1
  4973  06B1  1D03               	skipz
  4974  06B2  2EAD               	goto	u111_25
  4975  06B3                     i1l1830:
  4976  06B3  3001               	movlw	1
  4977  06B4  00FA               	movwf	??i1___lwdiv
  4978  06B5  087A               	movf	??i1___lwdiv,w
  4979  06B6  07FD               	addwf	i1___lwdiv@counter,f
  4980  06B7                     i1l1832:
  4981  06B7  1FF7               	btfss	i1___lwdiv@divisor+1,7
  4982  06B8  2EBA               	goto	u112_21
  4983  06B9  2EBB               	goto	u112_20
  4984  06BA                     u112_21:
  4985  06BA  2EAC               	goto	i1l1828
  4986  06BB                     u112_20:
  4987  06BB                     i1l1834:
  4988  06BB  3001               	movlw	1
  4989  06BC                     u113_25:
  4990  06BC  1003               	clrc
  4991  06BD  0DFB               	rlf	i1___lwdiv@quotient,f
  4992  06BE  0DFC               	rlf	i1___lwdiv@quotient+1,f
  4993  06BF  3EFF               	addlw	-1
  4994  06C0  1D03               	skipz
  4995  06C1  2EBC               	goto	u113_25
  4996  06C2  0877               	movf	i1___lwdiv@divisor+1,w
  4997  06C3  0279               	subwf	i1___lwdiv@dividend+1,w
  4998  06C4  1D03               	skipz
  4999  06C5  2EC8               	goto	u114_25
  5000  06C6  0876               	movf	i1___lwdiv@divisor,w
  5001  06C7  0278               	subwf	i1___lwdiv@dividend,w
  5002  06C8                     u114_25:
  5003  06C8  1C03               	skipc
  5004  06C9  2ECB               	goto	u114_21
  5005  06CA  2ECC               	goto	u114_20
  5006  06CB                     u114_21:
  5007  06CB  2ED3               	goto	i1l1840
  5008  06CC                     u114_20:
  5009  06CC                     i1l1836:
  5010  06CC  0876               	movf	i1___lwdiv@divisor,w
  5011  06CD  02F8               	subwf	i1___lwdiv@dividend,f
  5012  06CE  0877               	movf	i1___lwdiv@divisor+1,w
  5013  06CF  1C03               	skipc
  5014  06D0  03F9               	decf	i1___lwdiv@dividend+1,f
  5015  06D1  02F9               	subwf	i1___lwdiv@dividend+1,f
  5016  06D2                     i1l1838:
  5017  06D2  147B               	bsf	i1___lwdiv@quotient,0
  5018  06D3                     i1l1840:
  5019  06D3  3001               	movlw	1
  5020  06D4                     u115_25:
  5021  06D4  1003               	clrc
  5022  06D5  0CF7               	rrf	i1___lwdiv@divisor+1,f
  5023  06D6  0CF6               	rrf	i1___lwdiv@divisor,f
  5024  06D7  3EFF               	addlw	-1
  5025  06D8  1D03               	skipz
  5026  06D9  2ED4               	goto	u115_25
  5027  06DA                     i1l1842:
  5028  06DA  3001               	movlw	1
  5029  06DB  02FD               	subwf	i1___lwdiv@counter,f
  5030  06DC  1D03               	btfss	3,2
  5031  06DD  2EDF               	goto	u116_21
  5032  06DE  2EE0               	goto	u116_20
  5033  06DF                     u116_21:
  5034  06DF  2EBB               	goto	i1l1834
  5035  06E0                     u116_20:
  5036  06E0                     i1l1844:
  5037  06E0  087C               	movf	i1___lwdiv@quotient+1,w
  5038  06E1  00F7               	movwf	?i1___lwdiv+1
  5039  06E2  087B               	movf	i1___lwdiv@quotient,w
  5040  06E3  00F6               	movwf	?i1___lwdiv
  5041  06E4                     i1l712:
  5042  06E4  0008               	return
  5043  06E5                     __end_ofi1___lwdiv:
  5044                           
  5045                           	psect	text23
  5046  0FB5                     __ptext23:	
  5047 ;; *************** function ___wmul *****************
  5048 ;; Defined at:
  5049 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  multiplier      2    0[COMMON] unsigned int 
  5052 ;;  multiplicand    2    2[COMMON] unsigned int 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  product         2    4[COMMON] unsigned int 
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  2    0[COMMON] unsigned int 
  5057 ;; Registers used:
  5058 ;;		wreg, status,2, status,0
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5064 ;;      Params:         4       0       0       0       0
  5065 ;;      Locals:         2       0       0       0       0
  5066 ;;      Temps:          0       0       0       0       0
  5067 ;;      Totals:         6       0       0       0       0
  5068 ;;Total ram usage:        6 bytes
  5069 ;; Hardware stack levels used: 1
  5070 ;; This function calls:
  5071 ;;		Nothing
  5072 ;; This function is called by:
  5073 ;;		_percent
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077  0FB5                     ___wmul:	
  5078                           ;psect for function ___wmul
  5079                           
  5080  0FB5                     i1l1760:	
  5081                           ;incstack = 0
  5082                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5083                           
  5084  0FB5  01F4               	clrf	___wmul@product
  5085  0FB6  01F5               	clrf	___wmul@product+1
  5086  0FB7                     i1l1762:
  5087  0FB7  1C70               	btfss	___wmul@multiplier,0
  5088  0FB8  2FBA               	goto	u93_21
  5089  0FB9  2FBB               	goto	u93_20
  5090  0FBA                     u93_21:
  5091  0FBA  2FC1               	goto	i1l440
  5092  0FBB                     u93_20:
  5093  0FBB                     i1l1764:
  5094  0FBB  0872               	movf	___wmul@multiplicand,w
  5095  0FBC  07F4               	addwf	___wmul@product,f
  5096  0FBD  1803               	skipnc
  5097  0FBE  0AF5               	incf	___wmul@product+1,f
  5098  0FBF  0873               	movf	___wmul@multiplicand+1,w
  5099  0FC0  07F5               	addwf	___wmul@product+1,f
  5100  0FC1                     i1l440:
  5101  0FC1  3001               	movlw	1
  5102  0FC2                     u94_25:
  5103  0FC2  1003               	clrc
  5104  0FC3  0DF2               	rlf	___wmul@multiplicand,f
  5105  0FC4  0DF3               	rlf	___wmul@multiplicand+1,f
  5106  0FC5  3EFF               	addlw	-1
  5107  0FC6  1D03               	skipz
  5108  0FC7  2FC2               	goto	u94_25
  5109  0FC8                     i1l1766:
  5110  0FC8  3001               	movlw	1
  5111  0FC9                     u95_25:
  5112  0FC9  1003               	clrc
  5113  0FCA  0CF1               	rrf	___wmul@multiplier+1,f
  5114  0FCB  0CF0               	rrf	___wmul@multiplier,f
  5115  0FCC  3EFF               	addlw	-1
  5116  0FCD  1D03               	skipz
  5117  0FCE  2FC9               	goto	u95_25
  5118  0FCF                     i1l1768:
  5119  0FCF  0870               	movf	___wmul@multiplier,w
  5120  0FD0  0471               	iorwf	___wmul@multiplier+1,w
  5121  0FD1  1D03               	btfss	3,2
  5122  0FD2  2FD4               	goto	u96_21
  5123  0FD3  2FD5               	goto	u96_20
  5124  0FD4                     u96_21:
  5125  0FD4  2FB7               	goto	i1l1762
  5126  0FD5                     u96_20:
  5127  0FD5                     i1l1770:
  5128  0FD5  0875               	movf	___wmul@product+1,w
  5129  0FD6  00F1               	movwf	?___wmul+1
  5130  0FD7  0874               	movf	___wmul@product,w
  5131  0FD8  00F0               	movwf	?___wmul
  5132  0FD9                     i1l442:
  5133  0FD9  0008               	return
  5134  0FDA                     __end_of___wmul:
  5135                           
  5136                           	psect	text24
  5137  0F24                     __ptext24:	
  5138 ;; *************** function _adcRead *****************
  5139 ;; Defined at:
  5140 ;;		line 101 in file "adc_config.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;		None
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;		None
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  2    0[COMMON] unsigned int 
  5147 ;; Registers used:
  5148 ;;		wreg
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5154 ;;      Params:         2       0       0       0       0
  5155 ;;      Locals:         0       0       0       0       0
  5156 ;;      Temps:          0       0       0       0       0
  5157 ;;      Totals:         2       0       0       0       0
  5158 ;;Total ram usage:        2 bytes
  5159 ;; Hardware stack levels used: 1
  5160 ;; This function calls:
  5161 ;;		Nothing
  5162 ;; This function is called by:
  5163 ;;		_isr
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167  0F24                     _adcRead:	
  5168                           ;psect for function _adcRead
  5169                           
  5170  0F24                     i1l1874:	
  5171                           ;incstack = 0
  5172                           ; Regs used in _adcRead: [wreg]
  5173                           
  5174  0F24                     i1l265:	
  5175                           ;adc_config.c: 102:     while(ADCON0bits.GO){}
  5176                           
  5177  0F24  1283               	bcf	3,5	;RP0=0, select bank0
  5178  0F25  1303               	bcf	3,6	;RP1=0, select bank0
  5179  0F26  189F               	btfsc	31,1	;volatile
  5180  0F27  2F29               	goto	u123_21
  5181  0F28  2F2A               	goto	u123_20
  5182  0F29                     u123_21:
  5183  0F29  2F24               	goto	i1l265
  5184  0F2A                     u123_20:
  5185  0F2A                     i1l1876:
  5186                           
  5187                           ;adc_config.c: 103:     return ( (ADRESH << 8) + ADRESL);
  5188  0F2A  081E               	movf	30,w	;volatile
  5189  0F2B  00F1               	movwf	?_adcRead+1
  5190  0F2C  1683               	bsf	3,5	;RP0=1, select bank1
  5191  0F2D  1303               	bcf	3,6	;RP1=0, select bank1
  5192  0F2E  081E               	movf	30,w	;volatile
  5193  0F2F  00F0               	movwf	?_adcRead
  5194  0F30                     i1l268:
  5195  0F30  0008               	return
  5196  0F31                     __end_of_adcRead:
  5197  007E                     btemp	set	126	;btemp
  5198  007E                     wtemp0	set	126
  5199                           
  5200                           	psect	idloc
  5201                           
  5202                           ;Config register IDLOC0 @ 0x2000
  5203                           ;	unspecified, using default values
  5204  2000                     	org	8192
  5205  2000  3FFF               	dw	16383
  5206                           
  5207                           ;Config register IDLOC1 @ 0x2001
  5208                           ;	unspecified, using default values
  5209  2001                     	org	8193
  5210  2001  3FFF               	dw	16383
  5211                           
  5212                           ;Config register IDLOC2 @ 0x2002
  5213                           ;	unspecified, using default values
  5214  2002                     	org	8194
  5215  2002  3FFF               	dw	16383
  5216                           
  5217                           ;Config register IDLOC3 @ 0x2003
  5218                           ;	unspecified, using default values
  5219  2003                     	org	8195
  5220  2003  3FFF               	dw	16383
  5221                           
  5222                           	psect	config
  5223                           
  5224                           ;Config register CONFIG1 @ 0x2007
  5225                           ;	Oscillator Selection bits
  5226                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5227                           ;	Watchdog Timer Enable bit
  5228                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5229                           ;	Power-up Timer Enable bit
  5230                           ;	PWRTE = OFF, PWRT disabled
  5231                           ;	RE3/MCLR pin function select bit
  5232                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5233                           ;	Code Protection bit
  5234                           ;	CP = OFF, Program memory code protection is disabled
  5235                           ;	Data Code Protection bit
  5236                           ;	CPD = OFF, Data memory code protection is disabled
  5237                           ;	Brown Out Reset Selection bits
  5238                           ;	BOREN = OFF, BOR disabled
  5239                           ;	Internal External Switchover bit
  5240                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5241                           ;	Fail-Safe Clock Monitor Enabled bit
  5242                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5243                           ;	Low Voltage Programming Enable bit
  5244                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5245                           ;	In-Circuit Debugger Mode bit
  5246                           ;	DEBUG = 0x1, unprogrammed default
  5247  2007                     	org	8199
  5248  2007  20D4               	dw	8404
  5249                           
  5250                           ;Config register CONFIG2 @ 0x2008
  5251                           ;	Brown-out Reset Selection bit
  5252                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5253                           ;	Flash Program Memory Self Write Enable bits
  5254                           ;	WRT = OFF, Write protection off
  5255  2008                     	org	8200
  5256  2008  3FFF               	dw	16383

Data Sizes:
    Strings     23
    Constant    10
    Data        3
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      54
    BANK1            80     27      47
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> HS_flag_str(BANK0[10]), spst_str(BANK1[10]), HS_str(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 10
		 -> STR_10(CODE[2]), STR_9(CODE[4]), STR_8(CODE[3]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[8]), HS_str(BANK1[10]), 

    uPrint@string	PTR unsigned char  size(2) Largest target is 10
		 -> STR_12(CODE[2]), STR_11(CODE[2]), HS_flag_str(BANK0[10]), spst_str(BANK1[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    i1_sprintf->i1___lwdiv
    i1___lwmod->i1___lwdiv
    _percent->i1___lwdiv
    i1___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_adcGo
    _main->_initAdc
    _main->_initOscFreq
    _main->_initTmr0
    _main->_uPrint
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    _isr->i1_sprintf
    i1_sprintf->i1___lwmod

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5314
                                             25 BANK1      2     2      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _adcGo
                            _initAdc
                        _initOscFreq
                           _initTmr0
                              _setup
                            _sprintf
                             _uPrint
                  _usartInitTransmit
 ---------------------------------------------------------------------------------
 (1) _usartInitTransmit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uPrint                                               2     0      2     349
                                             26 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    2073
                                             12 BANK1     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                             27 BANK0      1     1      0
                                              7 BANK1      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     531
                                             26 BANK0      1     1      0
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTmr0                                             2     0      2      98
                                             26 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initOscFreq                                          3     3      0      31
                                             26 BANK0      2     2      0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initAdc                                              5     3      2     273
                                             26 BANK0      2     0      2
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _adcGo                                                2     2      0      22
                                             26 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    1014
                                              3 BANK1      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                             27 BANK0      1     1      0
                                              0 BANK1      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1    1175
                                              1 BANK1      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              1 BANK1      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     155
                                             27 BANK0      1     1      0
                                              0 BANK1      1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  7     7      0    1832
                                             19 BANK0      7     7      0
                            _adcRead
                            _percent
                          _tmr0Reset
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (5) i1_sprintf                                           21    18      3    1006
                                              6 BANK0     13    10      3
                          i1___lwdiv
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (6) i1___lwmod                                            6     2      4     211
                                              0 BANK0      6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _tmr0Reset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _percent                                              6     0      6     826
                                              0 BANK0      6     0      6
                             ___wmul
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (6) i1___lwdiv                                            8     4      4     266
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _adcRead                                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _adcGo
   _initAdc
   _initOscFreq
   _initTmr0
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _uPrint
   _usartInitTransmit

 _isr (ROOT)
   _adcRead
   _percent
     ___wmul
     i1___lwdiv
       ___wmul (ARG)
   _tmr0Reset
   i1_sprintf
     i1___lwdiv
     i1___lwmod
       i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1B      2F       7       58.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1C      36       5       67.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      73      12        0.0%
ABS                  0      0      73       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Sep 24 11:02:18 2022

                        _i 003E                          pc 0002                         fsr 0004  
      ___wmul@multiplicand 0072                        l202 04A5                        l212 04AF  
                      l311 05B5                        l135 0F5D                        l320 0609  
                      l314 0656                        l242 0F43                        l308 055E  
                      l238 0507                        l166 0F77                        l191 0763  
                      l175 0FDB                        l290 0FA5                        l186 0762  
                      l291 0FA6                        l179 0FFF                        l292 0FAC  
                      l436 02B1                        l293 0FAD                        l294 0FB3  
                      l296 0FB4                        l288 0F9E                        l712 06A0  
                      l289 0F9F                        l722 0724                        l299 0F94  
                      _RB3 0033                        _RB4 0034                        _RB5 0035  
                      _RB6 0036                        _RB7 0037                        _isr 039C  
                      fsr0 0004                        indf 0000                       l2000 0462  
                     l2002 0469                       l2010 047C                       l2012 04AB  
                     l2004 0470                       l2006 0477                       l2030 0F74  
                     l2022 0F5E                       l2120 0FDF                       l2024 0F6C  
                     l2122 0FE9                       l2026 0F70                       l2124 0FEF  
                     l2028 0F71                       l2118 0FDA                       l2084 0F34  
                     l2500 06FF                       l2430 0FA3                       l2086 0F3E  
                     l2502 0703                       l2510 0720                       l2432 0FAA  
                     l2440 0F86                       l2088 0F42                       l2600 04B9  
                     l2504 070D                       l2520 01DD                       l2434 0FB1  
                     l2426 0F98                       l2442 0F89                       l2450 0622  
                     l2610 04DC                       l2602 04CB                       l2506 0713  
                     l2530 0208                       l2522 01E2                       l2514 01CB  
                     l2428 0F9C                       l2444 0F91                       l2436 0F7B  
                     l2460 0649                       l2452 0634                       l2612 04E3  
                     l2604 04CC                       l2508 071A                       l2532 020C  
                     l2516 01D0                       l2700 0094                       l2438 0F7E  
                     l2630 057E                       l2462 064C                       l2454 0637  
                     l2446 060D                       l2614 04EA                       l2606 04CF  
                     l2470 0661                       l2550 0241                       l2534 0210  
                     l2526 01E3                       l2518 01D6                       l2710 00CE  
                     l2702 00A3                       l2640 0597                       l2632 0584  
                     l2624 055F                       l2464 0653                       l2456 063E  
                     l2448 061F                       l2608 04D7                       l2480 0688  
                     l2472 0664                       l2560 0287                       l2552 0247  
                     l2544 021B                       l2536 0214                       l2528 0200  
                     l2720 0112                       l2712 00DA                       l2704 00AF  
                     l2642 059D                       l2634 0585                       l2626 0565  
                     l2650 050B                       l2458 0641                       l2618 04EF  
                     l2482 068E                       l2474 066B                       l2466 0657  
                     l2562 028E                       l2554 024E                       l2538 0219  
                     l2722 011D                       l2730 0155                       l2714 00E5  
                     l2706 00BA                       l2644 05A3                       l2636 058B  
                     l2628 0570                       l2652 0510                       l2660 0535  
                     l2580 0730                       l2484 068F                       l2476 0673  
                     l2468 065B                       l2492 06E5                       l2564 0292  
                     l2556 0252                       l2548 0237                       l2740 01B9  
                     l2732 0177                       l2724 0135                       l2708 00C5  
                     l2716 00FD                       l2646 05A9                       l2638 0591  
                     l2662 053A                       l2654 0521                       l2670 05B6  
                     l2582 0737                       l2590 074A                       l1950 0F49  
                     l2486 0696                       l2478 0677                       l2494 06ED  
                     l2558 0257                       l2566 029B                       l2734 0182  
                     l2726 013E                       l2718 0106                       l2648 05AF  
                     l2664 054B                       l2656 0526                       l2672 05BB  
                     l2584 073E                       l2576 0728                       l1960 0F59  
                     l1952 0F4D                       l2488 069C                       l2496 06F0  
                     l2568 02AD                       l2736 0198                       l2728 014A  
                     l2680 0041                       l2666 0550                       l2658 052C  
                     l2674 05DF                       l2586 0743                       l2578 0729  
                     l1962 0F5A                       l1954 0F4F                       l1946 0F44  
                     l2498 06F7                       l2738 01A3                       l2690 006C  
                     l2682 0047                       l2668 0556                       l2676 05E7  
                     l1964 0F5B                       l1956 0F50                       l1948 0F48  
                     l2692 0077                       l2684 0057                       l2598 04B3  
                     l1990 0447                       l1966 0F5C                       l1958 0F52  
                     l2694 0079                       l2686 0061                       l2678 003C  
                     l2880 0486                       l1992 0448                       l2696 008A  
                     l2688 0066                       l2882 04A0                       l1994 044D  
                     l2698 0093                       l2884 0754                       l1996 0454  
                     l2886 04F9                       l1998 045B                       l2878 01F5  
                     _ADIF 0066                       ?_isr 0070                       STR_1 07C6  
                     STR_2 07C6                       STR_3 07C6                       STR_4 07C6  
                     STR_5 07BA                       STR_6 07C9                       STR_7 07C9  
                     STR_8 07C3                       STR_9 07C2                       _T0IF 005A  
                     u2000 00CE                       u2001 00CD                       u2010 0106  
                     u2011 0105                       u2020 013E                       u2021 013D  
                     u1310 0F42                       u1311 0F41                       u1400 0FFF  
                     u1401 0FFE                       u2107 056B                       u2117 057A  
                     u2037 017D                       u2127 0F8D                       u2047 0193  
                     u2057 01A9                       u2067 01BF                       u1700 0661  
                     u2077 04D3                       u1701 0660                       u1390 0FDF  
                     u2087 063B                       u1391 0FDE                       u1720 0677  
                     u1800 070D                       u2097 0650                       u1721 0676  
                     u1801 070C                       u1650 0F9C                       u1651 0F9B  
                     u1715 0665                       u1660 0FA3                       u1900 0510  
                     u1740 0688                       u1820 0720                       u1661 0FA2  
                     u1901 050F                       u1741 0687                       u1821 071F  
                     u1805 0709                       u1670 0FAA                       u1830 01D6  
                     u1671 0FA9                       u1735 0678                       u1815 0714  
                     u1831 01D5                       u1680 0FB1                       u1920 053A  
                     u1760 069C                       u1840 0210                       u1681 0FB0  
                     u1921 0539                       u1761 069B                       u1745 0684  
                     u1841 020F                       u1770 06ED                       u1850 0236  
                     u1915 0518                       u1755 0690                       u1771 06EC  
                     u1851 0235                       u1940 05C7                       u1860 0241  
                     u1861 0240                       u1950 05F1                       u1790 0703  
                     u1870 0247                       u1935 0542                       u1695 0629  
                     u1791 0702                       u1871 0246                       u1855 0232  
                     u1960 0609                       u1880 029B                       u1961 0608  
                     u1785 06F1                       u1881 029A                       u1890 02AD  
                     u1970 0077                       u1891 02AC                       u1971 0076  
                     u1980 0093                       u1981 0092                       u1990 00C5  
                     u1991 00C4                       _RBIF 0058                       _TMR0 0001  
                     _TXIF 0064                       _WPUB 0095                       _Fosc 0055  
             adcGo@channel 003B          ?_Lcd_Write_String 00A3                       _cont 0048  
                     _main 003C                       btemp 007E                       _spst 0041  
                     start 0012         ??_Lcd_Write_String 00A5            __end_of_Lcd_Cmd 0F95  
             ?_initOscFreq 0070                      ??_isr 0033                      ?_main 0070  
          __end_of_adcRead 0F31                      STR_10 07CB                      STR_11 07CD  
                    STR_12 07CF                      _ANSEL 0188            __end_of___lwdiv 06A1  
                    i1l113 0410                      i1l116 043A                      i1l143 07FB  
                    i1l215 0F1B                      i1l440 0FC1                      i1l265 0F24  
          __end_of___lwmod 0725                      i1l442 0FD9                      i1l268 0F30  
                    i1l436 039B                      i1l712 06E4                      i1l722 079F  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTD 0008                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      u93_20 0FBB                      u93_21 0FBA  
                    u94_25 0FC2                      u95_25 0FC9                      u96_20 0FD5  
                    u96_21 0FD4                      _TXREG 0019                      _adcGo 0F31  
       i1___lwmod@dividend 0022            __end_of_initAdc 0508            __end_of_dpowers 07BA  
                    _milis 0047                      _setup 0F44                      _pulse 0046  
          __end_of_percent 07FC                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 02B2           __end_of_Lcd_Init 05B6  
         __end_of_Lcd_Port 0FB5            __initialization 0015               __end_of_main 01C8  
               i1sprintf@c 0032                 i1sprintf@f 0026                     ??_main 00B9  
                   ?_adcGo 0070                     _ADRESH 001E                     _ADRESL 009E  
                   ?_setup 0070                     _ANSELH 0189                     u110_20 06A9  
                   u110_21 06A8                     i1l2200 03C9                     i1l2130 02C0  
                   i1l2202 03D2                     i1l2210 0408                     i1l2140 02EA  
                   i1l2132 02C7                     i1l2220 0423                     i1l2212 040C  
                   i1l2204 03DD                     u111_25 06AD                     i1l2150 0303  
                   i1l2142 02F2                     i1l2134 02CC                     i1l2126 02B5  
                   i1l2222 0428                     i1l2206 03F4                     u112_20 06BB  
                   u120_20 0788                     i1l2160 0321                     i1l2144 02F6  
                   i1l2128 02BA                     i1l2216 0414                     i1l2224 0439  
                   i1l2208 0405                     u112_21 06BA                     u120_21 0787  
                   i1l2170 0341                     i1l2162 032B                     i1l2146 02FA  
                   i1l2138 02CD                     i1l2218 041E                     i1l2172 0371  
                   i1l2164 0331                     i1l2156 0305                     i1l2148 02FE  
                   i1l2180 0397                     u120_25 0784                     i1l2174 0378  
                   i1l2166 0338                     i1l2190 03A0                     i1l2176 037C  
                   i1l2168 033C                     i1l2192 03AE                     i1l2178 0385  
                   i1l2194 03B8                     i1l2196 03BE                     i1l2188 039C  
                   u113_25 06BC                     u121_25 078F                     i1l1830 06B3  
                   i1l1822 06A1                     i1l2198 03C3                     i1l1760 0FB5  
                   i1l1840 06D3                     u114_20 06CC                     i1l1832 06B7  
                   i1l1824 06A3                     u122_20 079B                     u114_21 06CB  
                   u122_21 079A                     i1l1770 0FD5                     i1l1762 0FB7  
                   i1l1842 06DA                     i1l1834 06BB                     i1l1826 06A9  
                   i1l1850 076C                     i1l1764 0FBB                     i1l1836 06CC  
                   i1l1828 06AC                     i1l1844 06E0                     i1l1860 0788  
                   i1l1852 076F                     u114_25 06C8                     i1l1766 0FC8  
                   i1l1838 06D2                     i1l1870 0F16                     i1l1862 078E  
                   i1l1854 0776                     u123_20 0F2A                     i1l1768 0FCF  
                   i1l1880 07D1                     i1l1872 0F17                     i1l1864 0795  
                   i1l1856 077A                     i1l1848 0764                     u123_21 0F29  
                   i1l1874 0F24                     i1l1858 077E                     i1l1866 079B  
                   i1l1876 0F2A                     u115_25 06D4                     u116_20 06E0  
                   u116_21 06DF                     u117_20 076C                     i1l2888 02DF  
                   u141_20 02C0                     u117_21 076B                     u141_21 02BF  
                   u142_20 02FA                     u150_20 03B4                     u142_21 02F9  
                   u150_21 03B2                     u118_25 0770                     u119_20 077E  
                   u143_20 0320                     u151_20 03B5                     u119_21 077D  
                   u143_21 031F                     u143_25 031C                     u144_20 032B  
                   u152_20 03C9                     u144_21 032A                     u152_21 03C8  
                   u145_20 0331                     u153_20 03D2                     u145_21 0330  
                   u153_21 03D1                     u146_20 0385                     u154_20 040C  
                   u146_21 0384                     u154_21 040B                     u147_20 0397  
                   u155_20 0410                     u147_21 0396                     u155_21 040F  
                   u156_20 0414                     u148_20 03A0                     u156_21 0413  
                   u148_21 039F                     u157_20 041A                     u149_20 03AE  
                   u157_21 0418                     u149_21 03AD                     u158_20 041B  
                ??_Lcd_Cmd 003B                     _SPBRGH 009A                     _HS_val 003C  
                   _HS_str 00C5              i1sprintf@flag 002D              i1sprintf@prec 002E  
                   _PS_val 0053                     ___wmul 0FB5                  ??_adcRead 0072  
                ??___lwdiv 003A                  ??___lwmod 003B           __end_of_initTmr0 04B0  
                   _uPrint 0FDA            initAdc@vref_neg 003B            initAdc@vref_pos 003A  
                ??_initAdc 00A0          __end_ofi1___lwdiv 06E5          __end_ofi1___lwmod 07A0  
                ??_percent 007E                     saved_w 007E                  ??_sprintf 00AF  
          Lcd_Set_Cursor@a 00A4            Lcd_Set_Cursor@b 00A1            Lcd_Set_Cursor@y 00A6  
          Lcd_Set_Cursor@z 00A5    __end_of__initialization 0038          __end_ofi1_sprintf 039C  
           __pcstackCOMMON 0070               initAdc@adc_s 00A2              __end_of_adcGo 0F44  
             __pidataBANK0 07FC              __end_of_setup 0F5E             _Lcd_Set_Cursor 0508  
           _OPTION_REGbits 0081                i1sprintf@ap 002C                i1sprintf@sp 0031  
                  ??_adcGo 003A                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 003A                 __pbssBANK0 003C                 __pbssBANK1 00BB  
               __pmaintext 003C                    ?___wmul 0070           percent@water_val 0022  
               __pintentry 0004                    ?_uPrint 003A               uPrint@string 003A  
   __end_of_Lcd_Set_Cursor 055F                 ??_Lcd_Init 00A1                 ??_Lcd_Port 003A  
                  _HS_flag 0042                 __stringtab 07A0             _Lcd_Write_Char 060A  
                  _Lcd_Cmd 0F78                  ?_initTmr0 003A                    _adcRead 0F24  
                  ___lwdiv 0657                    ___lwmod 06E5            ?_Lcd_Set_Cursor 00A1  
                  __ptext1 0F5E                    __ptext2 0FDA                    __ptext3 01C8  
                  __ptext4 06E5                    __ptext5 0657                    __ptext6 0F44  
                  __ptext7 0447                    __ptext8 0725                    __ptext9 04B0  
                  _initAdc 04B0                    _dpowers 07B0          i1___lwdiv@divisor 0076  
        i1___lwdiv@counter 007D                    _percent 07D1                    _sprintf 01C8  
                  clrloop0 0F1D          __end_of_tmr0Reset 0F1C     __end_of_Lcd_Write_Char 0657  
     end_of_initialization 0038                 ??_initTmr0 003C                  _RCSTAbits 0018  
                Lcd_Port@a 003A                  _PORTBbits 0006                  _PORTCbits 0007  
                _PORTDbits 0008                  i1___lwdiv 06A1                  i1___lwmod 0764  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 00A3          Lcd_Write_String@i 00A8  
                _TXSTAbits 0098                  i1_sprintf 02B2             __end_of___wmul 0FDA  
         _Lcd_Write_String 05B6                _BAUDCTLbits 0187          i1___lwmod@divisor 0020  
           __end_of_uPrint 1000          i1___lwmod@counter 0025        start_initialization 0015  
           percent@air_val 0024                __end_of_isr 0447          _usartInitTransmit 0F5E  
               ?i1___lwdiv 0076                 ?i1___lwmod 0020         ?_usartInitTransmit 0070  
             i1sprintf@val 002F        ??_usartInitTransmit 003A                 ?i1_sprintf 0026  
            ??_initOscFreq 003A                   ??___wmul 0074                __pdataBANK0 0053  
                 ??_uPrint 003C            Lcd_Write_Char@a 00A2            Lcd_Write_Char@y 00A1  
__end_of_usartInitTransmit 0F78                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0                   ?_Lcd_Cmd 0070                sprintf@flag 00B3  
              sprintf@prec 00B4                 percent@val 0020           ___lwdiv@dividend 00A2  
         ??_Lcd_Set_Cursor 00A2                   ?_adcRead 0070                   ?___lwdiv 00A0  
                 ?___lwmod 00A7                  __pstrings 07A0                   ?_initAdc 003A  
      __end_of_initOscFreq 0764                   ?_percent 0020           ___lwdiv@quotient 00A5  
              ??i1___lwdiv 007A                ??i1___lwmod 0024                   ?_sprintf 00AC  
        interrupt_function 0004             ___wmul@product 0074                   _IOCBbits 0096  
                _tmr0Reset 0F16                  clear_ram0 0F1C                   _PIE1bits 008C  
                _send_cont 0045                   Lcd_Cmd@a 00A0                   _PIR1bits 000C  
              ??i1_sprintf 0029                 _ADCON0bits 001F                __stringbase 07AF  
               _ADCON1bits 009F          ___wmul@multiplier 0070           ??_Lcd_Write_Char 003B  
                _spst_flag 0040                   _Lcd_Init 055F                   _Lcd_Port 0F95  
 __end_of_Lcd_Write_String 060A                 ?_tmr0Reset 0070                _initOscFreq 0725  
       __end_of__stringtab 07B0                 sprintf@val 00B5            ___lwdiv@divisor 00A0  
          ___lwdiv@counter 00A4                   __ptext10 0F31                   __ptext11 05B6  
                 __ptext20 0F16                   __ptext12 060A                   __ptext21 07D1  
                 __ptext13 0508                   __ptext22 06A1                   __ptext14 055F  
                 __ptext23 0FB5                   __ptext15 0F78                   __ptext24 0F24  
                 __ptext16 0F95                   __ptext17 039C                   __ptext18 02B2  
                 __ptext19 0764         i1___lwdiv@dividend 0078                   _initTmr0 0447  
                 _msg_flag 0044          initTmr0@prescaler 003A                   _spst_str 00BB  
       i1___lwdiv@quotient 007B                 _INTCONbits 000B         Lcd_Write_Char@temp 00A0  
                 intlevel1 0000                  sprintf@ap 00B2                  sprintf@sp 00B7  
         ___lwmod@dividend 00A9                ??_tmr0Reset 0070                  stringcode 07AA  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 00A7            initOscFreq@freq 00A0  
                 sprintf@c 00B8                   sprintf@f 00AC            ___lwmod@divisor 00A7  
          ___lwmod@counter 00AB                   stringdir 07AA                   stringtab 07A0  
              _HS_flag_str 0049                 _HS_percent 0043  
