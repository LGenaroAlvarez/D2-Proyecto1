

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Fri Sep 23 22:14:51 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0088                     	;# 
   265  0089                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  008E                     	;# 
   269  008F                     	;# 
   270  0090                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  0105                     	;# 
   289  0107                     	;# 
   290  0108                     	;# 
   291  0109                     	;# 
   292  010C                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  0185                     	;# 
   298  0187                     	;# 
   299  0188                     	;# 
   300  0189                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0088                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  008F                     	;# 
   348  0090                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009A                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  0105                     	;# 
   367  0107                     	;# 
   368  0108                     	;# 
   369  0109                     	;# 
   370  010C                     	;# 
   371  010C                     	;# 
   372  010D                     	;# 
   373  010E                     	;# 
   374  010F                     	;# 
   375  0185                     	;# 
   376  0187                     	;# 
   377  0188                     	;# 
   378  0189                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0088                     	;# 
   421  0089                     	;# 
   422  008C                     	;# 
   423  008D                     	;# 
   424  008E                     	;# 
   425  008F                     	;# 
   426  0090                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0094                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009C                     	;# 
   441  009D                     	;# 
   442  009E                     	;# 
   443  009F                     	;# 
   444  0105                     	;# 
   445  0107                     	;# 
   446  0108                     	;# 
   447  0109                     	;# 
   448  010C                     	;# 
   449  010C                     	;# 
   450  010D                     	;# 
   451  010E                     	;# 
   452  010F                     	;# 
   453  0185                     	;# 
   454  0187                     	;# 
   455  0188                     	;# 
   456  0189                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459  0000                     	;# 
   460  0001                     	;# 
   461  0002                     	;# 
   462  0003                     	;# 
   463  0004                     	;# 
   464  0005                     	;# 
   465  0006                     	;# 
   466  0007                     	;# 
   467  0008                     	;# 
   468  0009                     	;# 
   469  000A                     	;# 
   470  000B                     	;# 
   471  000C                     	;# 
   472  000D                     	;# 
   473  000E                     	;# 
   474  000E                     	;# 
   475  000F                     	;# 
   476  0010                     	;# 
   477  0011                     	;# 
   478  0012                     	;# 
   479  0013                     	;# 
   480  0014                     	;# 
   481  0015                     	;# 
   482  0015                     	;# 
   483  0016                     	;# 
   484  0017                     	;# 
   485  0018                     	;# 
   486  0019                     	;# 
   487  001A                     	;# 
   488  001B                     	;# 
   489  001B                     	;# 
   490  001C                     	;# 
   491  001D                     	;# 
   492  001E                     	;# 
   493  001F                     	;# 
   494  0081                     	;# 
   495  0085                     	;# 
   496  0086                     	;# 
   497  0087                     	;# 
   498  0088                     	;# 
   499  0089                     	;# 
   500  008C                     	;# 
   501  008D                     	;# 
   502  008E                     	;# 
   503  008F                     	;# 
   504  0090                     	;# 
   505  0091                     	;# 
   506  0092                     	;# 
   507  0093                     	;# 
   508  0093                     	;# 
   509  0093                     	;# 
   510  0094                     	;# 
   511  0095                     	;# 
   512  0096                     	;# 
   513  0097                     	;# 
   514  0098                     	;# 
   515  0099                     	;# 
   516  009A                     	;# 
   517  009B                     	;# 
   518  009C                     	;# 
   519  009D                     	;# 
   520  009E                     	;# 
   521  009F                     	;# 
   522  0105                     	;# 
   523  0107                     	;# 
   524  0108                     	;# 
   525  0109                     	;# 
   526  010C                     	;# 
   527  010C                     	;# 
   528  010D                     	;# 
   529  010E                     	;# 
   530  010F                     	;# 
   531  0185                     	;# 
   532  0187                     	;# 
   533  0188                     	;# 
   534  0189                     	;# 
   535  018C                     	;# 
   536  018D                     	;# 
   537                           
   538                           	psect	idataBANK0
   539  04D6                     __pidataBANK0:
   540                           
   541                           ;initializer for _PS_val
   542  04D6  3410               	retlw	16
   543  04D7  3400               	retlw	0
   544                           
   545                           ;initializer for _Fosc
   546  04D8  3401               	retlw	1
   547                           
   548                           	psect	strings
   549  04A5                     __pstrings:
   550  04A5                     stringtab:
   551  04A5                     __stringtab:
   552  04A5                     stringcode:	
   553                           ;	String table - string pointers are 1 byte each
   554                           
   555  04A5                     stringdir:
   556  04A5  3004               	movlw	high stringdir
   557  04A6  008A               	movwf	10
   558  04A7  0804               	movf	4,w
   559  04A8  0A84               	incf	4,f
   560  04A9  0782               	addwf	2,f
   561  04AA                     __stringbase:
   562  04AA  3400               	retlw	0
   563  04AB                     __end_of__stringtab:
   564  04AB                     _dpowers:
   565  04AB  3401               	retlw	1
   566  04AC  3400               	retlw	0
   567  04AD  340A               	retlw	10
   568  04AE  3400               	retlw	0
   569  04AF  3464               	retlw	100
   570  04B0  3400               	retlw	0
   571  04B1  34E8               	retlw	232
   572  04B2  3403               	retlw	3
   573  04B3  3410               	retlw	16
   574  04B4  3427               	retlw	39
   575  04B5                     __end_of_dpowers:
   576  0006                     _PORTBbits	set	6
   577  0019                     _TXREG	set	25
   578  000C                     _PIR1bits	set	12
   579  0007                     _PORTCbits	set	7
   580  0008                     _PORTD	set	8
   581  0006                     _PORTB	set	6
   582  0005                     _PORTA	set	5
   583  0005                     _PORTAbits	set	5
   584  001A                     _RCREG	set	26
   585  0018                     _RCSTAbits	set	24
   586  0001                     _TMR0	set	1
   587  000B                     _INTCONbits	set	11
   588  0033                     _RB3	set	51
   589  0037                     _RB7	set	55
   590  0036                     _RB6	set	54
   591  0035                     _RB5	set	53
   592  0034                     _RB4	set	52
   593  0065                     _RCIF	set	101
   594  005A                     _T0IF	set	90
   595  008C                     _PIE1bits	set	140
   596  009A                     _SPBRGH	set	154
   597  0099                     _SPBRG	set	153
   598  0098                     _TXSTAbits	set	152
   599  0086                     _TRISB	set	134
   600  0085                     _TRISA	set	133
   601  0081                     _OPTION_REGbits	set	129
   602  008F                     _OSCCONbits	set	143
   603  0187                     _BAUDCTLbits	set	391
   604  0189                     _ANSELH	set	393
   605  0188                     _ANSEL	set	392
   606  04B5                     STR_1:
   607  04B5  3425               	retlw	37	;'%'
   608  04B6  3464               	retlw	100	;'d'
   609  04B7  3400               	retlw	0
   610  04B5                     
   611                           	psect	cinit
   612  0015                     start_initialization:	
   613                           ; #config settings
   614                           
   615  0015                     __initialization:
   616                           
   617                           ; Initialize objects allocated to BANK0
   618  0015  120A  118A  24D6  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   619  001A  00D8               	movwf	__pdataBANK0& (0+127)
   620  001B  120A  118A  24D7  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   621  0020  00D9               	movwf	(__pdataBANK0+1)& (0+127)
   622  0021  120A  118A  24D8  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   623  0026  00DA               	movwf	(__pdataBANK0+2)& (0+127)
   624                           
   625                           ; Clear objects allocated to BANK0
   626  0027  1383               	bcf	3,7	;select IRP bank0
   627  0028  3020               	movlw	low __pbssBANK0
   628  0029  0084               	movwf	4
   629  002A  303D               	movlw	low (__pbssBANK0+29)
   630  002B  120A  118A  24C8  120A  118A  	fcall	clear_ram0
   631  0030                     end_of_initialization:	
   632                           ;End of C runtime variable initialization code
   633                           
   634  0030                     __end_of__initialization:
   635  0030  0183               	clrf	3
   636  0031  120A  118A  2A73   	ljmp	_main	;jump to C main() function
   637                           
   638                           	psect	bssBANK0
   639  0020                     __pbssBANK0:
   640  0020                     _overr:
   641  0020                     	ds	1
   642  0021                     _frerr:
   643  0021                     	ds	1
   644  0022                     _spst_flag:
   645  0022                     	ds	1
   646  0023                     _sensor_flag:
   647  0023                     	ds	1
   648  0024                     _HS_flag:
   649  0024                     	ds	1
   650  0025                     _spst:
   651  0025                     	ds	1
   652  0026                     _pulse:
   653  0026                     	ds	1
   654  0027                     _milis:
   655  0027                     	ds	1
   656  0028                     _cont:
   657  0028                     	ds	1
   658  0029                     _spst_str:
   659  0029                     	ds	10
   660  0033                     _HS_flag_str:
   661  0033                     	ds	10
   662                           
   663                           	psect	dataBANK0
   664  0058                     __pdataBANK0:
   665  0058                     _PS_val:
   666  0058                     	ds	2
   667  005A                     _Fosc:
   668  005A                     	ds	1
   669                           
   670                           	psect	clrtext
   671  04C8                     clear_ram0:	
   672                           ;	Called with FSR containing the base address, and
   673                           ;	W with the last address+1
   674                           
   675  04C8  0064               	clrwdt	;clear the watchdog before getting into this loop
   676  04C9                     clrloop0:
   677  04C9  0180               	clrf	0	;clear RAM location pointed to by FSR
   678  04CA  0A84               	incf	4,f	;increment pointer
   679  04CB  0604               	xorwf	4,w	;XOR with final address
   680  04CC  1903               	btfsc	3,2	;have we reached the end yet?
   681  04CD  3400               	retlw	0	;all done for this memory range, return
   682  04CE  0604               	xorwf	4,w	;XOR again to restore value
   683  04CF  2CC9               	goto	clrloop0	;do the next byte
   684                           
   685                           	psect	cstackBANK1
   686  00A0                     __pcstackBANK1:
   687  00A0                     Lcd_Set_Cursor@a:
   688  00A0                     Lcd_Write_String@i:	
   689                           ; 1 bytes @ 0x0
   690                           
   691                           
   692                           ; 2 bytes @ 0x0
   693  00A0                     	ds	1
   694  00A1                     Lcd_Set_Cursor@z:
   695                           
   696                           ; 1 bytes @ 0x1
   697  00A1                     	ds	1
   698  00A2                     Lcd_Set_Cursor@y:
   699  00A2                     Lcd_Write_String@a:	
   700                           ; 1 bytes @ 0x2
   701                           
   702                           
   703                           ; 1 bytes @ 0x2
   704  00A2                     	ds	1
   705  00A3                     Lcd_Set_Cursor@temp:
   706                           
   707                           ; 1 bytes @ 0x3
   708  00A3                     	ds	1
   709                           
   710                           	psect	cstackCOMMON
   711  0070                     __pcstackCOMMON:
   712  0070                     ?_setup:
   713  0070                     ?_usartInitTransmit:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_Lcd_Init:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_Lcd_Write_String:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_initOscFreq:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_tmr0Reset:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ??_tmr0Reset:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_isr:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_main:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_Lcd_Port:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_Lcd_Cmd:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_Lcd_Write_Char:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?___lwdiv:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ___lwdiv@divisor:	
   750                           ; 2 bytes @ 0x0
   751                           
   752                           
   753                           ; 2 bytes @ 0x0
   754  0070                     	ds	2
   755  0072                     ___lwdiv@dividend:
   756                           
   757                           ; 2 bytes @ 0x2
   758  0072                     	ds	2
   759  0074                     ??___lwdiv:
   760                           
   761                           ; 1 bytes @ 0x4
   762  0074                     	ds	1
   763  0075                     ___lwdiv@quotient:
   764                           
   765                           ; 2 bytes @ 0x5
   766  0075                     	ds	2
   767  0077                     ___lwdiv@counter:
   768                           
   769                           ; 1 bytes @ 0x7
   770  0077                     	ds	1
   771  0078                     ?___lwmod:
   772  0078                     ___lwmod@divisor:	
   773                           ; 2 bytes @ 0x8
   774                           
   775                           
   776                           ; 2 bytes @ 0x8
   777  0078                     	ds	2
   778  007A                     ___lwmod@dividend:
   779                           
   780                           ; 2 bytes @ 0xA
   781  007A                     	ds	2
   782  007C                     ??___lwmod:
   783                           
   784                           ; 1 bytes @ 0xC
   785  007C                     	ds	1
   786  007D                     ___lwmod@counter:
   787                           
   788                           ; 1 bytes @ 0xD
   789  007D                     	ds	1
   790                           
   791                           	psect	cstackBANK0
   792  003D                     __pcstackBANK0:
   793  003D                     ?_sprintf:
   794  003D                     sprintf@f:	
   795                           ; 2 bytes @ 0x0
   796                           
   797                           
   798                           ; 1 bytes @ 0x0
   799  003D                     	ds	3
   800  0040                     ??_sprintf:
   801                           
   802                           ; 1 bytes @ 0x3
   803  0040                     	ds	3
   804  0043                     sprintf@ap:
   805                           
   806                           ; 1 bytes @ 0x6
   807  0043                     	ds	1
   808  0044                     sprintf@flag:
   809                           
   810                           ; 1 bytes @ 0x7
   811  0044                     	ds	1
   812  0045                     sprintf@prec:
   813                           
   814                           ; 1 bytes @ 0x8
   815  0045                     	ds	1
   816  0046                     sprintf@val:
   817                           
   818                           ; 2 bytes @ 0x9
   819  0046                     	ds	2
   820  0048                     sprintf@sp:
   821                           
   822                           ; 1 bytes @ 0xB
   823  0048                     	ds	1
   824  0049                     sprintf@c:
   825                           
   826                           ; 1 bytes @ 0xC
   827  0049                     	ds	1
   828  004A                     ??_isr:
   829                           
   830                           ; 1 bytes @ 0xD
   831  004A                     	ds	7
   832  0051                     ??_setup:
   833  0051                     ??_usartInitTransmit:	
   834                           ; 1 bytes @ 0x14
   835                           
   836  0051                     ??_initOscFreq:	
   837                           ; 1 bytes @ 0x14
   838                           
   839  0051                     ?_initTmr0:	
   840                           ; 1 bytes @ 0x14
   841                           
   842  0051                     ??_Lcd_Port:	
   843                           ; 1 bytes @ 0x14
   844                           
   845  0051                     Lcd_Port@a:	
   846                           ; 1 bytes @ 0x14
   847                           
   848  0051                     initTmr0@prescaler:	
   849                           ; 1 bytes @ 0x14
   850                           
   851                           
   852                           ; 2 bytes @ 0x14
   853  0051                     	ds	1
   854  0052                     ??_Lcd_Cmd:
   855  0052                     ??_Lcd_Write_Char:	
   856                           ; 1 bytes @ 0x15
   857                           
   858                           
   859                           ; 1 bytes @ 0x15
   860  0052                     	ds	1
   861  0053                     ??_initTmr0:
   862  0053                     initOscFreq@freq:	
   863                           ; 1 bytes @ 0x16
   864                           
   865  0053                     Lcd_Cmd@a:	
   866                           ; 1 bytes @ 0x16
   867                           
   868  0053                     Lcd_Write_Char@temp:	
   869                           ; 1 bytes @ 0x16
   870                           
   871                           
   872                           ; 1 bytes @ 0x16
   873  0053                     	ds	1
   874  0054                     ??_Lcd_Init:
   875  0054                     ?_Lcd_Set_Cursor:	
   876                           ; 1 bytes @ 0x17
   877                           
   878  0054                     Lcd_Set_Cursor@b:	
   879                           ; 1 bytes @ 0x17
   880                           
   881  0054                     Lcd_Write_Char@y:	
   882                           ; 1 bytes @ 0x17
   883                           
   884                           
   885                           ; 1 bytes @ 0x17
   886  0054                     	ds	1
   887  0055                     ??_Lcd_Set_Cursor:
   888  0055                     Lcd_Write_Char@a:	
   889                           ; 1 bytes @ 0x18
   890                           
   891                           
   892                           ; 1 bytes @ 0x18
   893  0055                     	ds	1
   894  0056                     ??_Lcd_Write_String:
   895                           
   896                           ; 1 bytes @ 0x19
   897  0056                     	ds	1
   898  0057                     ??_main:
   899                           
   900                           ; 1 bytes @ 0x1A
   901  0057                     	ds	1
   902                           
   903                           	psect	maintext
   904  0273                     __pmaintext:	
   905 ;;
   906 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   907 ;;
   908 ;; *************** function _main *****************
   909 ;; Defined at:
   910 ;;		line 103 in file "proyecto-main.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;		None
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   919 ;; Tracked objects:
   920 ;;		On entry : B00/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   924 ;;      Params:         0       0       0       0       0
   925 ;;      Locals:         0       0       0       0       0
   926 ;;      Temps:          0       1       0       0       0
   927 ;;      Totals:         0       1       0       0       0
   928 ;;Total ram usage:        1 bytes
   929 ;; Hardware stack levels required when called: 6
   930 ;; This function calls:
   931 ;;		_Lcd_Init
   932 ;;		_Lcd_Set_Cursor
   933 ;;		_Lcd_Write_String
   934 ;;		_initOscFreq
   935 ;;		_initTmr0
   936 ;;		_setup
   937 ;;		_usartInitTransmit
   938 ;; This function is called by:
   939 ;;		Startup code after reset
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943  0273                     _main:	
   944                           ;psect for function _main
   945                           
   946  0273                     l1806:	
   947                           ;incstack = 0
   948                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   949                           
   950                           
   951                           ;proyecto-main.c: 104:     setup();
   952  0273  120A  118A  24B8  120A  118A  	fcall	_setup
   953  0278                     l1808:
   954                           
   955                           ;proyecto-main.c: 105:     initOscFreq(Fosc);
   956  0278  3001               	movlw	1
   957  0279  120A  118A  2373  120A  118A  	fcall	_initOscFreq
   958  027E                     l1810:
   959                           
   960                           ;proyecto-main.c: 106:     initTmr0(PS_val);
   961  027E  3010               	movlw	16
   962  027F  1283               	bcf	3,5	;RP0=0, select bank0
   963  0280  1303               	bcf	3,6	;RP1=0, select bank0
   964  0281  00D1               	movwf	initTmr0@prescaler
   965  0282  3000               	movlw	0
   966  0283  00D2               	movwf	initTmr0@prescaler+1
   967  0284  120A  118A  220A  120A  118A  	fcall	_initTmr0
   968  0289                     l1812:
   969                           
   970                           ;proyecto-main.c: 107:     usartInitTransmit();
   971  0289  120A  118A  2472  120A  118A  	fcall	_usartInitTransmit
   972  028E                     l1814:
   973                           
   974                           ;proyecto-main.c: 108:     Lcd_Init();
   975  028E  120A  118A  22D8  120A  118A  	fcall	_Lcd_Init
   976  0293                     l1816:
   977                           
   978                           ;proyecto-main.c: 112:         Lcd_Set_Cursor(0,9);
   979  0293  3009               	movlw	9
   980  0294  1283               	bcf	3,5	;RP0=0, select bank0
   981  0295  1303               	bcf	3,6	;RP1=0, select bank0
   982  0296  00D7               	movwf	??_main
   983  0297  0857               	movf	??_main,w
   984  0298  00D4               	movwf	Lcd_Set_Cursor@b
   985  0299  3000               	movlw	0
   986  029A  120A  118A  219B  120A  118A  	fcall	_Lcd_Set_Cursor
   987  029F                     l1818:
   988                           
   989                           ;proyecto-main.c: 113:         Lcd_Write_String(spst_str);
   990  029F  3029               	movlw	(low (_spst_str| 0))& (0+255)
   991  02A0  120A  118A  2427  120A  118A  	fcall	_Lcd_Write_String
   992  02A5                     l1820:
   993                           
   994                           ;proyecto-main.c: 114:         if (HS_flag == 48){
   995  02A5  3030               	movlw	48
   996  02A6  1283               	bcf	3,5	;RP0=0, select bank0
   997  02A7  1303               	bcf	3,6	;RP1=0, select bank0
   998  02A8  0624               	xorwf	_HS_flag,w
   999  02A9  1D03               	btfss	3,2
  1000  02AA  2AAC               	goto	u901
  1001  02AB  2AAD               	goto	u900
  1002  02AC                     u901:
  1003  02AC  2ABE               	goto	l1826
  1004  02AD                     u900:
  1005  02AD                     l1822:
  1006                           
  1007                           ;proyecto-main.c: 115:             Lcd_Set_Cursor(0,2);
  1008  02AD  3002               	movlw	2
  1009  02AE  00D7               	movwf	??_main
  1010  02AF  0857               	movf	??_main,w
  1011  02B0  00D4               	movwf	Lcd_Set_Cursor@b
  1012  02B1  3000               	movlw	0
  1013  02B2  120A  118A  219B  120A  118A  	fcall	_Lcd_Set_Cursor
  1014  02B7                     l1824:
  1015                           
  1016                           ;proyecto-main.c: 116:             Lcd_Write_String(HS_flag_str);
  1017  02B7  3033               	movlw	(low (_HS_flag_str| 0))& (0+255)
  1018  02B8  120A  118A  2427  120A  118A  	fcall	_Lcd_Write_String
  1019                           
  1020                           ;proyecto-main.c: 117:         }
  1021  02BD  2A93               	goto	l1816
  1022  02BE                     l1826:
  1023  02BE  3031               	movlw	49
  1024  02BF  0624               	xorwf	_HS_flag,w
  1025  02C0  1D03               	btfss	3,2
  1026  02C1  2AC3               	goto	u911
  1027  02C2  2AC4               	goto	u910
  1028  02C3                     u911:
  1029  02C3  2A93               	goto	l1816
  1030  02C4                     u910:
  1031  02C4                     l1828:
  1032                           
  1033                           ;proyecto-main.c: 119:             Lcd_Set_Cursor(0,2);
  1034  02C4  3002               	movlw	2
  1035  02C5  00D7               	movwf	??_main
  1036  02C6  0857               	movf	??_main,w
  1037  02C7  00D4               	movwf	Lcd_Set_Cursor@b
  1038  02C8  3000               	movlw	0
  1039  02C9  120A  118A  219B  120A  118A  	fcall	_Lcd_Set_Cursor
  1040  02CE                     l1830:
  1041                           
  1042                           ;proyecto-main.c: 120:             Lcd_Write_String(HS_flag_str);
  1043  02CE  3033               	movlw	(low (_HS_flag_str| 0))& (0+255)
  1044  02CF  120A  118A  2427  120A  118A  	fcall	_Lcd_Write_String
  1045  02D4  2A93               	goto	l1816
  1046  02D5  120A  118A  2812   	ljmp	start
  1047  02D8                     __end_of_main:
  1048                           
  1049                           	psect	text1
  1050  0472                     __ptext1:	
  1051 ;; *************** function _usartInitTransmit *****************
  1052 ;; Defined at:
  1053 ;;		line 18 in file "USART.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;		None
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;		None
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg, status,2
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1067 ;;      Params:         0       0       0       0       0
  1068 ;;      Locals:         0       0       0       0       0
  1069 ;;      Temps:          0       0       0       0       0
  1070 ;;      Totals:         0       0       0       0       0
  1071 ;;Total ram usage:        0 bytes
  1072 ;; Hardware stack levels used: 1
  1073 ;; Hardware stack levels required when called: 3
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081  0472                     _usartInitTransmit:	
  1082                           ;psect for function _usartInitTransmit
  1083                           
  1084  0472                     l1492:	
  1085                           ;incstack = 0
  1086                           ; Regs used in _usartInitTransmit: [wreg+status,2]
  1087                           
  1088                           
  1089                           ;USART.c: 19:     TXSTAbits.TXEN = 1;
  1090  0472  1683               	bsf	3,5	;RP0=1, select bank1
  1091  0473  1303               	bcf	3,6	;RP1=0, select bank1
  1092  0474  1698               	bsf	24,5	;volatile
  1093                           
  1094                           ;USART.c: 20:     TXSTAbits.SYNC = 0;
  1095  0475  1218               	bcf	24,4	;volatile
  1096                           
  1097                           ;USART.c: 21:     RCSTAbits.SPEN = 1;
  1098  0476  1283               	bcf	3,5	;RP0=0, select bank0
  1099  0477  1303               	bcf	3,6	;RP1=0, select bank0
  1100  0478  1798               	bsf	24,7	;volatile
  1101                           
  1102                           ;USART.c: 22:     TXSTAbits.TX9 = 0;
  1103  0479  1683               	bsf	3,5	;RP0=1, select bank1
  1104  047A  1303               	bcf	3,6	;RP1=0, select bank1
  1105  047B  1318               	bcf	24,6	;volatile
  1106                           
  1107                           ;USART.c: 25:     TXSTAbits.BRGH = 1;
  1108  047C  1518               	bsf	24,2	;volatile
  1109                           
  1110                           ;USART.c: 26:     BAUDCTLbits.BRG16 = 1;
  1111  047D  1683               	bsf	3,5	;RP0=1, select bank3
  1112  047E  1703               	bsf	3,6	;RP1=1, select bank3
  1113  047F  1587               	bsf	7,3	;volatile
  1114  0480                     l1494:
  1115                           
  1116                           ;USART.c: 27:     SPBRG = 25;
  1117  0480  3019               	movlw	25
  1118  0481  1683               	bsf	3,5	;RP0=1, select bank1
  1119  0482  1303               	bcf	3,6	;RP1=0, select bank1
  1120  0483  0099               	movwf	25	;volatile
  1121  0484                     l1496:
  1122                           
  1123                           ;USART.c: 28:     SPBRGH = 0;
  1124  0484  019A               	clrf	26	;volatile
  1125  0485                     l1498:
  1126                           
  1127                           ;USART.c: 31:     RCSTAbits.CREN = 1;
  1128  0485  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0486  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0487  1618               	bsf	24,4	;volatile
  1131  0488                     l1500:
  1132                           
  1133                           ;USART.c: 32:     PIE1bits.RCIE = 1;
  1134  0488  1683               	bsf	3,5	;RP0=1, select bank1
  1135  0489  1303               	bcf	3,6	;RP1=0, select bank1
  1136  048A  168C               	bsf	12,5	;volatile
  1137  048B                     l155:
  1138  048B  0008               	return
  1139  048C                     __end_of_usartInitTransmit:
  1140                           
  1141                           	psect	text2
  1142  04B8                     __ptext2:	
  1143 ;; *************** function _setup *****************
  1144 ;; Defined at:
  1145 ;;		line 126 in file "proyecto-main.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;		None
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;		None
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		status,2
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1159 ;;      Params:         0       0       0       0       0
  1160 ;;      Locals:         0       0       0       0       0
  1161 ;;      Temps:          0       0       0       0       0
  1162 ;;      Totals:         0       0       0       0       0
  1163 ;;Total ram usage:        0 bytes
  1164 ;; Hardware stack levels used: 1
  1165 ;; Hardware stack levels required when called: 3
  1166 ;; This function calls:
  1167 ;;		Nothing
  1168 ;; This function is called by:
  1169 ;;		_main
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173  04B8                     _setup:	
  1174                           ;psect for function _setup
  1175                           
  1176  04B8                     l1486:	
  1177                           ;incstack = 0
  1178                           ; Regs used in _setup: [status,2]
  1179                           
  1180                           
  1181                           ;proyecto-main.c: 128:     ANSEL = 0;
  1182  04B8  1683               	bsf	3,5	;RP0=1, select bank3
  1183  04B9  1703               	bsf	3,6	;RP1=1, select bank3
  1184  04BA  0188               	clrf	8	;volatile
  1185                           
  1186                           ;proyecto-main.c: 129:     ANSELH = 0;
  1187  04BB  0189               	clrf	9	;volatile
  1188                           
  1189                           ;proyecto-main.c: 131:     TRISA = 0;
  1190  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  1191  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  1192  04BE  0185               	clrf	5	;volatile
  1193                           
  1194                           ;proyecto-main.c: 132:     TRISB = 0;
  1195  04BF  0186               	clrf	6	;volatile
  1196                           
  1197                           ;proyecto-main.c: 133:     PORTA = 0;
  1198  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  1199  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  1200  04C2  0185               	clrf	5	;volatile
  1201                           
  1202                           ;proyecto-main.c: 134:     PORTB = 0;
  1203  04C3  0186               	clrf	6	;volatile
  1204                           
  1205                           ;proyecto-main.c: 135:     PORTD = 0;
  1206  04C4  0188               	clrf	8	;volatile
  1207  04C5                     l1488:
  1208                           
  1209                           ;proyecto-main.c: 138:     INTCONbits.GIE = 1;
  1210  04C5  178B               	bsf	11,7	;volatile
  1211  04C6                     l1490:
  1212                           
  1213                           ;proyecto-main.c: 139:     INTCONbits.PEIE = 1;
  1214  04C6  170B               	bsf	11,6	;volatile
  1215  04C7                     l131:
  1216  04C7  0008               	return
  1217  04C8                     __end_of_setup:
  1218                           
  1219                           	psect	text3
  1220  020A                     __ptext3:	
  1221 ;; *************** function _initTmr0 *****************
  1222 ;; Defined at:
  1223 ;;		line 14 in file "tmr0_config.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;  prescaler       2   20[BANK0 ] int 
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1237 ;;      Params:         0       2       0       0       0
  1238 ;;      Locals:         0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0
  1240 ;;      Totals:         0       2       0       0       0
  1241 ;;Total ram usage:        2 bytes
  1242 ;; Hardware stack levels used: 1
  1243 ;; Hardware stack levels required when called: 3
  1244 ;; This function calls:
  1245 ;;		Nothing
  1246 ;; This function is called by:
  1247 ;;		_main
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251  020A                     _initTmr0:	
  1252                           ;psect for function _initTmr0
  1253                           
  1254  020A                     l1388:	
  1255                           ;incstack = 0
  1256                           ; Regs used in _initTmr0: [wreg-fsr0h+status,2+status,0]
  1257                           
  1258                           
  1259                           ;tmr0_config.c: 15:     switch(prescaler){
  1260  020A  2A3F               	goto	l1408
  1261  020B                     l1390:
  1262                           
  1263                           ;tmr0_config.c: 19:             OPTION_REGbits.PS = 0b000;
  1264  020B  30F8               	movlw	-8
  1265  020C  1683               	bsf	3,5	;RP0=1, select bank1
  1266  020D  1303               	bcf	3,6	;RP1=0, select bank1
  1267  020E  0581               	andwf	1,f	;volatile
  1268                           
  1269                           ;tmr0_config.c: 20:             break;
  1270  020F  2A68               	goto	l23
  1271  0210                     l1392:
  1272                           
  1273                           ;tmr0_config.c: 22:             OPTION_REGbits.PS = 0b001;
  1274  0210  1683               	bsf	3,5	;RP0=1, select bank1
  1275  0211  1303               	bcf	3,6	;RP1=0, select bank1
  1276  0212  0801               	movf	1,w	;volatile
  1277  0213  39F8               	andlw	-8
  1278  0214  3801               	iorlw	1
  1279  0215  0081               	movwf	1	;volatile
  1280                           
  1281                           ;tmr0_config.c: 23:             break;
  1282  0216  2A68               	goto	l23
  1283  0217                     l1394:
  1284                           
  1285                           ;tmr0_config.c: 25:             OPTION_REGbits.PS = 0b010;
  1286  0217  1683               	bsf	3,5	;RP0=1, select bank1
  1287  0218  1303               	bcf	3,6	;RP1=0, select bank1
  1288  0219  0801               	movf	1,w	;volatile
  1289  021A  39F8               	andlw	-8
  1290  021B  3802               	iorlw	2
  1291  021C  0081               	movwf	1	;volatile
  1292                           
  1293                           ;tmr0_config.c: 26:             break;
  1294  021D  2A68               	goto	l23
  1295  021E                     l1396:
  1296                           
  1297                           ;tmr0_config.c: 28:             OPTION_REGbits.PS = 0b011;
  1298  021E  1683               	bsf	3,5	;RP0=1, select bank1
  1299  021F  1303               	bcf	3,6	;RP1=0, select bank1
  1300  0220  0801               	movf	1,w	;volatile
  1301  0221  39F8               	andlw	-8
  1302  0222  3803               	iorlw	3
  1303  0223  0081               	movwf	1	;volatile
  1304                           
  1305                           ;tmr0_config.c: 29:             break;
  1306  0224  2A68               	goto	l23
  1307  0225                     l1398:
  1308                           
  1309                           ;tmr0_config.c: 31:             OPTION_REGbits.PS = 0b100;
  1310  0225  1683               	bsf	3,5	;RP0=1, select bank1
  1311  0226  1303               	bcf	3,6	;RP1=0, select bank1
  1312  0227  0801               	movf	1,w	;volatile
  1313  0228  39F8               	andlw	-8
  1314  0229  3804               	iorlw	4
  1315  022A  0081               	movwf	1	;volatile
  1316                           
  1317                           ;tmr0_config.c: 32:             break;
  1318  022B  2A68               	goto	l23
  1319  022C                     l1400:
  1320                           
  1321                           ;tmr0_config.c: 34:             OPTION_REGbits.PS = 0b101;
  1322  022C  1683               	bsf	3,5	;RP0=1, select bank1
  1323  022D  1303               	bcf	3,6	;RP1=0, select bank1
  1324  022E  0801               	movf	1,w	;volatile
  1325  022F  39F8               	andlw	-8
  1326  0230  3805               	iorlw	5
  1327  0231  0081               	movwf	1	;volatile
  1328                           
  1329                           ;tmr0_config.c: 35:             break;
  1330  0232  2A68               	goto	l23
  1331  0233                     l1402:
  1332                           
  1333                           ;tmr0_config.c: 37:             OPTION_REGbits.PS = 0b110;
  1334  0233  1683               	bsf	3,5	;RP0=1, select bank1
  1335  0234  1303               	bcf	3,6	;RP1=0, select bank1
  1336  0235  0801               	movf	1,w	;volatile
  1337  0236  39F8               	andlw	-8
  1338  0237  3806               	iorlw	6
  1339  0238  0081               	movwf	1	;volatile
  1340                           
  1341                           ;tmr0_config.c: 38:             break;
  1342  0239  2A68               	goto	l23
  1343  023A                     l1404:
  1344                           
  1345                           ;tmr0_config.c: 40:             OPTION_REGbits.PS = 0b111;
  1346  023A  3007               	movlw	7
  1347  023B  1683               	bsf	3,5	;RP0=1, select bank1
  1348  023C  1303               	bcf	3,6	;RP1=0, select bank1
  1349  023D  0481               	iorwf	1,f	;volatile
  1350                           
  1351                           ;tmr0_config.c: 41:             break;
  1352  023E  2A68               	goto	l23
  1353  023F                     l1408:
  1354                           
  1355                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1356                           ; Switch size 1, requested type "simple"
  1357                           ; Number of cases is 2, Range of values is 0 to 1
  1358                           ; switch strategies available:
  1359                           ; Name         Instructions Cycles
  1360                           ; simple_byte            7     4 (average)
  1361                           ; direct_byte           14     8 (fixed)
  1362                           ; jumptable            260     6 (fixed)
  1363                           ;	Chosen strategy is simple_byte
  1364  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1365  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1366  0241  0852               	movf	initTmr0@prescaler+1,w
  1367  0242  3A00               	xorlw	0	; case 0
  1368  0243  1903               	skipnz
  1369  0244  2A49               	goto	l1928
  1370  0245  3A01               	xorlw	1	; case 1
  1371  0246  1903               	skipnz
  1372  0247  2A63               	goto	l1930
  1373  0248  2A68               	goto	l23
  1374  0249                     l1928:
  1375                           
  1376                           ; Switch size 1, requested type "simple"
  1377                           ; Number of cases is 8, Range of values is 0 to 128
  1378                           ; switch strategies available:
  1379                           ; Name         Instructions Cycles
  1380                           ; simple_byte           25    13 (average)
  1381                           ; jumptable            260     6 (fixed)
  1382                           ;	Chosen strategy is simple_byte
  1383  0249  0851               	movf	initTmr0@prescaler,w
  1384  024A  3A00               	xorlw	0	; case 0
  1385  024B  1903               	skipnz
  1386  024C  2A68               	goto	l23
  1387  024D  3A02               	xorlw	2	; case 2
  1388  024E  1903               	skipnz
  1389  024F  2A0B               	goto	l1390
  1390  0250  3A06               	xorlw	6	; case 4
  1391  0251  1903               	skipnz
  1392  0252  2A10               	goto	l1392
  1393  0253  3A0C               	xorlw	12	; case 8
  1394  0254  1903               	skipnz
  1395  0255  2A17               	goto	l1394
  1396  0256  3A18               	xorlw	24	; case 16
  1397  0257  1903               	skipnz
  1398  0258  2A1E               	goto	l1396
  1399  0259  3A30               	xorlw	48	; case 32
  1400  025A  1903               	skipnz
  1401  025B  2A25               	goto	l1398
  1402  025C  3A60               	xorlw	96	; case 64
  1403  025D  1903               	skipnz
  1404  025E  2A2C               	goto	l1400
  1405  025F  3AC0               	xorlw	192	; case 128
  1406  0260  1903               	skipnz
  1407  0261  2A33               	goto	l1402
  1408  0262  2A68               	goto	l23
  1409  0263                     l1930:
  1410                           
  1411                           ; Switch size 1, requested type "simple"
  1412                           ; Number of cases is 1, Range of values is 0 to 0
  1413                           ; switch strategies available:
  1414                           ; Name         Instructions Cycles
  1415                           ; simple_byte            4     3 (average)
  1416                           ; direct_byte           11     8 (fixed)
  1417                           ; jumptable            260     6 (fixed)
  1418                           ;	Chosen strategy is simple_byte
  1419  0263  0851               	movf	initTmr0@prescaler,w
  1420  0264  3A00               	xorlw	0	; case 0
  1421  0265  1903               	skipnz
  1422  0266  2A3A               	goto	l1404
  1423  0267  2A68               	goto	l23
  1424  0268                     l23:
  1425                           
  1426                           ;tmr0_config.c: 46:     OPTION_REGbits.T0CS = 0;
  1427  0268  1683               	bsf	3,5	;RP0=1, select bank1
  1428  0269  1303               	bcf	3,6	;RP1=0, select bank1
  1429  026A  1281               	bcf	1,5	;volatile
  1430                           
  1431                           ;tmr0_config.c: 47:     OPTION_REGbits.PSA = 0;
  1432  026B  1181               	bcf	1,3	;volatile
  1433                           
  1434                           ;tmr0_config.c: 48:     INTCONbits.T0IE = 1;
  1435  026C  168B               	bsf	11,5	;volatile
  1436                           
  1437                           ;tmr0_config.c: 49:     INTCONbits.T0IF = 0;
  1438  026D  110B               	bcf	11,2	;volatile
  1439  026E                     l1410:
  1440                           
  1441                           ;tmr0_config.c: 50:     TMR0 = 178;
  1442  026E  30B2               	movlw	178
  1443  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1444  0270  1303               	bcf	3,6	;RP1=0, select bank0
  1445  0271  0081               	movwf	1	;volatile
  1446  0272                     l33:
  1447  0272  0008               	return
  1448  0273                     __end_of_initTmr0:
  1449                           
  1450                           	psect	text4
  1451  0373                     __ptext4:	
  1452 ;; *************** function _initOscFreq *****************
  1453 ;; Defined at:
  1454 ;;		line 13 in file "osc_config.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;  freq            1    wreg     unsigned char 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  freq            1   22[BANK0 ] unsigned char 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1468 ;;      Params:         0       0       0       0       0
  1469 ;;      Locals:         0       1       0       0       0
  1470 ;;      Temps:          0       2       0       0       0
  1471 ;;      Totals:         0       3       0       0       0
  1472 ;;Total ram usage:        3 bytes
  1473 ;; Hardware stack levels used: 1
  1474 ;; Hardware stack levels required when called: 3
  1475 ;; This function calls:
  1476 ;;		Nothing
  1477 ;; This function is called by:
  1478 ;;		_main
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482  0373                     _initOscFreq:	
  1483                           ;psect for function _initOscFreq
  1484                           
  1485                           
  1486                           ;incstack = 0
  1487                           ; Regs used in _initOscFreq: [wreg-fsr0h+status,2+status,0]
  1488                           ;initOscFreq@freq stored from wreg
  1489  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1490  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1491  0375  00D3               	movwf	initOscFreq@freq
  1492  0376                     l1366:
  1493                           
  1494                           ;osc_config.c: 14:     switch (freq){
  1495  0376  2B98               	goto	l1380
  1496  0377                     l1368:
  1497                           
  1498                           ;osc_config.c: 16:             OSCCONbits.IRCF = 0b100;
  1499  0377  1683               	bsf	3,5	;RP0=1, select bank1
  1500  0378  1303               	bcf	3,6	;RP1=0, select bank1
  1501  0379  080F               	movf	15,w	;volatile
  1502  037A  398F               	andlw	-113
  1503  037B  3840               	iorlw	64
  1504  037C  008F               	movwf	15	;volatile
  1505                           
  1506                           ;osc_config.c: 17:             break;
  1507  037D  2BAE               	goto	l7
  1508  037E                     l1370:
  1509                           
  1510                           ;osc_config.c: 19:             OSCCONbits.IRCF = 0b101;
  1511  037E  1683               	bsf	3,5	;RP0=1, select bank1
  1512  037F  1303               	bcf	3,6	;RP1=0, select bank1
  1513  0380  080F               	movf	15,w	;volatile
  1514  0381  398F               	andlw	-113
  1515  0382  3850               	iorlw	80
  1516  0383  008F               	movwf	15	;volatile
  1517                           
  1518                           ;osc_config.c: 20:             break;
  1519  0384  2BAE               	goto	l7
  1520  0385                     l1372:
  1521                           
  1522                           ;osc_config.c: 22:             OSCCONbits.IRCF = 0b110;
  1523  0385  1683               	bsf	3,5	;RP0=1, select bank1
  1524  0386  1303               	bcf	3,6	;RP1=0, select bank1
  1525  0387  080F               	movf	15,w	;volatile
  1526  0388  398F               	andlw	-113
  1527  0389  3860               	iorlw	96
  1528  038A  008F               	movwf	15	;volatile
  1529                           
  1530                           ;osc_config.c: 23:             break;
  1531  038B  2BAE               	goto	l7
  1532  038C                     l1374:
  1533                           
  1534                           ;osc_config.c: 25:             OSCCONbits.IRCF = 0b111;
  1535  038C  3070               	movlw	112
  1536  038D  1683               	bsf	3,5	;RP0=1, select bank1
  1537  038E  1303               	bcf	3,6	;RP1=0, select bank1
  1538  038F  048F               	iorwf	15,f	;volatile
  1539                           
  1540                           ;osc_config.c: 26:             break;
  1541  0390  2BAE               	goto	l7
  1542  0391                     l1376:
  1543                           
  1544                           ;osc_config.c: 28:             OSCCONbits.IRCF = 0b110;
  1545  0391  1683               	bsf	3,5	;RP0=1, select bank1
  1546  0392  1303               	bcf	3,6	;RP1=0, select bank1
  1547  0393  080F               	movf	15,w	;volatile
  1548  0394  398F               	andlw	-113
  1549  0395  3860               	iorlw	96
  1550  0396  008F               	movwf	15	;volatile
  1551                           
  1552                           ;osc_config.c: 29:             break;
  1553  0397  2BAE               	goto	l7
  1554  0398                     l1380:
  1555  0398  0853               	movf	initOscFreq@freq,w
  1556  0399  00D1               	movwf	??_initOscFreq
  1557  039A  01D2               	clrf	??_initOscFreq+1
  1558                           
  1559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1560                           ; Switch size 1, requested type "simple"
  1561                           ; Number of cases is 1, Range of values is 0 to 0
  1562                           ; switch strategies available:
  1563                           ; Name         Instructions Cycles
  1564                           ; simple_byte            4     3 (average)
  1565                           ; direct_byte           11     8 (fixed)
  1566                           ; jumptable            260     6 (fixed)
  1567                           ;	Chosen strategy is simple_byte
  1568  039B  0852               	movf	??_initOscFreq+1,w
  1569  039C  3A00               	xorlw	0	; case 0
  1570  039D  1903               	skipnz
  1571  039E  2BA0               	goto	l1932
  1572  039F  2B91               	goto	l1376
  1573  03A0                     l1932:
  1574                           
  1575                           ; Switch size 1, requested type "simple"
  1576                           ; Number of cases is 4, Range of values is 1 to 8
  1577                           ; switch strategies available:
  1578                           ; Name         Instructions Cycles
  1579                           ; simple_byte           13     7 (average)
  1580                           ; direct_byte           35    11 (fixed)
  1581                           ; jumptable            263     9 (fixed)
  1582                           ;	Chosen strategy is simple_byte
  1583  03A0  0851               	movf	??_initOscFreq,w
  1584  03A1  3A01               	xorlw	1	; case 1
  1585  03A2  1903               	skipnz
  1586  03A3  2B77               	goto	l1368
  1587  03A4  3A03               	xorlw	3	; case 2
  1588  03A5  1903               	skipnz
  1589  03A6  2B7E               	goto	l1370
  1590  03A7  3A06               	xorlw	6	; case 4
  1591  03A8  1903               	skipnz
  1592  03A9  2B85               	goto	l1372
  1593  03AA  3A0C               	xorlw	12	; case 8
  1594  03AB  1903               	skipnz
  1595  03AC  2B8C               	goto	l1374
  1596  03AD  2B91               	goto	l1376
  1597  03AE                     l7:
  1598                           
  1599                           ;osc_config.c: 31:     OSCCONbits.SCS = 1;
  1600  03AE  140F               	bsf	15,0	;volatile
  1601  03AF                     l12:
  1602  03AF  0008               	return
  1603  03B0                     __end_of_initOscFreq:
  1604                           
  1605                           	psect	text5
  1606  0427                     __ptext5:	
  1607 ;; *************** function _Lcd_Write_String *****************
  1608 ;; Defined at:
  1609 ;;		line 102 in file "LCD4b.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  a               1    wreg     PTR unsigned char 
  1612 ;;		 -> HS_flag_str(10), spst_str(10), 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  a               1    2[BANK1 ] PTR unsigned char 
  1615 ;;		 -> HS_flag_str(10), spst_str(10), 
  1616 ;;  i               2    0[BANK1 ] int 
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      void 
  1619 ;; Registers used:
  1620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1626 ;;      Params:         0       0       0       0       0
  1627 ;;      Locals:         0       0       3       0       0
  1628 ;;      Temps:          0       1       0       0       0
  1629 ;;      Totals:         0       1       3       0       0
  1630 ;;Total ram usage:        4 bytes
  1631 ;; Hardware stack levels used: 1
  1632 ;; Hardware stack levels required when called: 5
  1633 ;; This function calls:
  1634 ;;		_Lcd_Write_Char
  1635 ;; This function is called by:
  1636 ;;		_main
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640  0427                     _Lcd_Write_String:	
  1641                           ;psect for function _Lcd_Write_String
  1642                           
  1643                           
  1644                           ;incstack = 0
  1645                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1646                           ;Lcd_Write_String@a stored from wreg
  1647  0427  1683               	bsf	3,5	;RP0=1, select bank1
  1648  0428  1303               	bcf	3,6	;RP1=0, select bank1
  1649  0429  00A2               	movwf	Lcd_Write_String@a^(0+128)
  1650  042A                     l1798:
  1651                           
  1652                           ;LCD4b.c: 103:     int i;;LCD4b.c: 104:     for (i = 0; a[i] != '\0'; i++)
  1653  042A  01A0               	clrf	Lcd_Write_String@i^(0+128)
  1654  042B  01A1               	clrf	(Lcd_Write_String@i+1)^(0+128)
  1655  042C  2C44               	goto	l1804
  1656  042D                     l1800:
  1657                           
  1658                           ;LCD4b.c: 105:         Lcd_Write_Char(a[i]);
  1659  042D  1683               	bsf	3,5	;RP0=1, select bank1
  1660  042E  1303               	bcf	3,6	;RP1=0, select bank1
  1661  042F  0820               	movf	Lcd_Write_String@i^(0+128),w
  1662  0430  0722               	addwf	Lcd_Write_String@a^(0+128),w
  1663  0431  1283               	bcf	3,5	;RP0=0, select bank0
  1664  0432  1303               	bcf	3,6	;RP1=0, select bank0
  1665  0433  00D6               	movwf	??_Lcd_Write_String
  1666  0434  0856               	movf	??_Lcd_Write_String,w
  1667  0435  0084               	movwf	4
  1668  0436  0800               	movf	0,w
  1669  0437  120A  118A  23B0  120A  118A  	fcall	_Lcd_Write_Char
  1670  043C                     l1802:
  1671  043C  3001               	movlw	1
  1672  043D  1683               	bsf	3,5	;RP0=1, select bank1
  1673  043E  1303               	bcf	3,6	;RP1=0, select bank1
  1674  043F  07A0               	addwf	Lcd_Write_String@i^(0+128),f
  1675  0440  1803               	skipnc
  1676  0441  0AA1               	incf	(Lcd_Write_String@i+1)^(0+128),f
  1677  0442  3000               	movlw	0
  1678  0443  07A1               	addwf	(Lcd_Write_String@i+1)^(0+128),f
  1679  0444                     l1804:
  1680  0444  0820               	movf	Lcd_Write_String@i^(0+128),w
  1681  0445  0722               	addwf	Lcd_Write_String@a^(0+128),w
  1682  0446  1283               	bcf	3,5	;RP0=0, select bank0
  1683  0447  1303               	bcf	3,6	;RP1=0, select bank0
  1684  0448  00D6               	movwf	??_Lcd_Write_String
  1685  0449  0856               	movf	??_Lcd_Write_String,w
  1686  044A  0084               	movwf	4
  1687  044B  1383               	bcf	3,7	;select IRP bank0
  1688  044C  0800               	movf	0,w
  1689  044D  1D03               	btfss	3,2
  1690  044E  2C50               	goto	u891
  1691  044F  2C51               	goto	u890
  1692  0450                     u891:
  1693  0450  2C2D               	goto	l1800
  1694  0451                     u890:
  1695  0451                     l208:
  1696  0451  0008               	return
  1697  0452                     __end_of_Lcd_Write_String:
  1698                           
  1699                           	psect	text6
  1700  03B0                     __ptext6:	
  1701 ;; *************** function _Lcd_Write_Char *****************
  1702 ;; Defined at:
  1703 ;;		line 87 in file "LCD4b.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  a               1    wreg     unsigned char 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  a               1   24[BANK0 ] unsigned char 
  1708 ;;  y               1   23[BANK0 ] unsigned char 
  1709 ;;  temp            1   22[BANK0 ] unsigned char 
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg, status,2, status,0, pclath, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1719 ;;      Params:         0       0       0       0       0
  1720 ;;      Locals:         0       3       0       0       0
  1721 ;;      Temps:          0       1       0       0       0
  1722 ;;      Totals:         0       4       0       0       0
  1723 ;;Total ram usage:        4 bytes
  1724 ;; Hardware stack levels used: 1
  1725 ;; Hardware stack levels required when called: 4
  1726 ;; This function calls:
  1727 ;;		_Lcd_Port
  1728 ;; This function is called by:
  1729 ;;		_Lcd_Write_String
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733  03B0                     _Lcd_Write_Char:	
  1734                           ;psect for function _Lcd_Write_Char
  1735                           
  1736                           
  1737                           ;incstack = 0
  1738                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1739                           ;Lcd_Write_Char@a stored from wreg
  1740  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  1741  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  1742  03B2  00D5               	movwf	Lcd_Write_Char@a
  1743  03B3                     l1732:
  1744                           
  1745                           ;LCD4b.c: 88:     char temp, y;;LCD4b.c: 89:     temp = a & 0x0F;
  1746  03B3  0855               	movf	Lcd_Write_Char@a,w
  1747  03B4  390F               	andlw	15
  1748  03B5  00D2               	movwf	??_Lcd_Write_Char
  1749  03B6  0852               	movf	??_Lcd_Write_Char,w
  1750  03B7  00D3               	movwf	Lcd_Write_Char@temp
  1751                           
  1752                           ;LCD4b.c: 90:     y = a & 0xF0;
  1753  03B8  0855               	movf	Lcd_Write_Char@a,w
  1754  03B9  39F0               	andlw	240
  1755  03BA  00D2               	movwf	??_Lcd_Write_Char
  1756  03BB  0852               	movf	??_Lcd_Write_Char,w
  1757  03BC  00D4               	movwf	Lcd_Write_Char@y
  1758  03BD                     l1734:
  1759                           
  1760                           ;LCD4b.c: 91:     PORTBbits.RB2 = 1;
  1761  03BD  1506               	bsf	6,2	;volatile
  1762  03BE                     l1736:
  1763                           
  1764                           ;LCD4b.c: 92:     Lcd_Port(y >> 4);
  1765  03BE  0854               	movf	Lcd_Write_Char@y,w
  1766  03BF  00D2               	movwf	??_Lcd_Write_Char
  1767  03C0  3004               	movlw	4
  1768  03C1                     u845:
  1769  03C1  1003               	clrc
  1770  03C2  0CD2               	rrf	??_Lcd_Write_Char,f
  1771  03C3  3EFF               	addlw	-1
  1772  03C4  1D03               	skipz
  1773  03C5  2BC1               	goto	u845
  1774  03C6  0852               	movf	??_Lcd_Write_Char,w
  1775  03C7  120A  118A  2452  120A  118A  	fcall	_Lcd_Port
  1776  03CC                     l1738:
  1777                           
  1778                           ;LCD4b.c: 93:     RB3 = 1;
  1779  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  1780  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  1781  03CE  1586               	bsf	6,3	;volatile
  1782  03CF                     l1740:
  1783                           
  1784                           ;LCD4b.c: 94:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  1785  03CF  3002               	movlw	2
  1786  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  1787  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  1788  03D2  00D2               	movwf	??_Lcd_Write_Char
  1789  03D3                     u927:
  1790  03D3  0BD2               	decfsz	??_Lcd_Write_Char,f
  1791  03D4  2BD3               	goto	u927
  1792  03D5  0000               	nop
  1793  03D6                     l1742:
  1794                           
  1795                           ;LCD4b.c: 95:     RB3 = 0;
  1796  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  1797  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  1798  03D8  1186               	bcf	6,3	;volatile
  1799  03D9                     l1744:
  1800                           
  1801                           ;LCD4b.c: 96:     Lcd_Port(temp);
  1802  03D9  0853               	movf	Lcd_Write_Char@temp,w
  1803  03DA  120A  118A  2452  120A  118A  	fcall	_Lcd_Port
  1804  03DF                     l1746:
  1805                           
  1806                           ;LCD4b.c: 97:     RB3 = 1;
  1807  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  1808  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  1809  03E1  1586               	bsf	6,3	;volatile
  1810  03E2                     l1748:
  1811                           
  1812                           ;LCD4b.c: 98:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  1813  03E2  3002               	movlw	2
  1814  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1815  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1816  03E5  00D2               	movwf	??_Lcd_Write_Char
  1817  03E6                     u937:
  1818  03E6  0BD2               	decfsz	??_Lcd_Write_Char,f
  1819  03E7  2BE6               	goto	u937
  1820  03E8  0000               	nop
  1821  03E9                     l1750:
  1822                           
  1823                           ;LCD4b.c: 99:     RB3 = 0;
  1824  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  1825  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  1826  03EB  1186               	bcf	6,3	;volatile
  1827  03EC                     l202:
  1828  03EC  0008               	return
  1829  03ED                     __end_of_Lcd_Write_Char:
  1830                           
  1831                           	psect	text7
  1832  019B                     __ptext7:	
  1833 ;; *************** function _Lcd_Set_Cursor *****************
  1834 ;; Defined at:
  1835 ;;		line 51 in file "LCD4b.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  a               1    wreg     unsigned char 
  1838 ;;  b               1   23[BANK0 ] unsigned char 
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  a               1    0[BANK1 ] unsigned char 
  1841 ;;  temp            1    3[BANK1 ] unsigned char 
  1842 ;;  y               1    2[BANK1 ] unsigned char 
  1843 ;;  z               1    1[BANK1 ] unsigned char 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg, status,2, status,0, pclath, cstack
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1853 ;;      Params:         0       1       0       0       0
  1854 ;;      Locals:         0       0       4       0       0
  1855 ;;      Temps:          0       2       0       0       0
  1856 ;;      Totals:         0       3       4       0       0
  1857 ;;Total ram usage:        7 bytes
  1858 ;; Hardware stack levels used: 1
  1859 ;; Hardware stack levels required when called: 5
  1860 ;; This function calls:
  1861 ;;		_Lcd_Cmd
  1862 ;; This function is called by:
  1863 ;;		_main
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867  019B                     _Lcd_Set_Cursor:	
  1868                           ;psect for function _Lcd_Set_Cursor
  1869                           
  1870                           
  1871                           ;incstack = 0
  1872                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1873                           ;Lcd_Set_Cursor@a stored from wreg
  1874  019B  1683               	bsf	3,5	;RP0=1, select bank1
  1875  019C  1303               	bcf	3,6	;RP1=0, select bank1
  1876  019D  00A0               	movwf	Lcd_Set_Cursor@a^(0+128)
  1877  019E                     l1778:
  1878                           
  1879                           ;LCD4b.c: 51: void Lcd_Set_Cursor(char a, char b);LCD4b.c: 52: {;LCD4b.c: 53:     char t
      +                          emp, z, y;;LCD4b.c: 54:     if (a == 0) {
  1880  019E  0820               	movf	Lcd_Set_Cursor@a^(0+128),w
  1881  019F  1D03               	btfss	3,2
  1882  01A0  29A2               	goto	u851
  1883  01A1  29A3               	goto	u850
  1884  01A2                     u851:
  1885  01A2  29D4               	goto	l1788
  1886  01A3                     u850:
  1887  01A3                     l1780:
  1888                           
  1889                           ;LCD4b.c: 55:         temp = 0x80 + b;
  1890  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1891  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1892  01A5  0854               	movf	Lcd_Set_Cursor@b,w
  1893  01A6  3E80               	addlw	128
  1894  01A7  00D5               	movwf	??_Lcd_Set_Cursor
  1895  01A8  0855               	movf	??_Lcd_Set_Cursor,w
  1896  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  1897  01AA  1303               	bcf	3,6	;RP1=0, select bank1
  1898  01AB  00A3               	movwf	Lcd_Set_Cursor@temp^(0+128)
  1899                           
  1900                           ;LCD4b.c: 56:         z = temp >> 4;
  1901  01AC  0823               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1902  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1903  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1904  01AF  00D5               	movwf	??_Lcd_Set_Cursor
  1905  01B0  3004               	movlw	4
  1906  01B1                     u865:
  1907  01B1  1003               	clrc
  1908  01B2  0CD5               	rrf	??_Lcd_Set_Cursor,f
  1909  01B3  3EFF               	addlw	-1
  1910  01B4  1D03               	skipz
  1911  01B5  29B1               	goto	u865
  1912  01B6  0855               	movf	??_Lcd_Set_Cursor,w
  1913  01B7  00D6               	movwf	??_Lcd_Set_Cursor+1
  1914  01B8  0856               	movf	??_Lcd_Set_Cursor+1,w
  1915  01B9  1683               	bsf	3,5	;RP0=1, select bank1
  1916  01BA  1303               	bcf	3,6	;RP1=0, select bank1
  1917  01BB  00A1               	movwf	Lcd_Set_Cursor@z^(0+128)
  1918  01BC                     l1782:
  1919                           
  1920                           ;LCD4b.c: 57:         y = temp & 0x0F;
  1921  01BC  0823               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1922  01BD  390F               	andlw	15
  1923  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1924  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1925  01C0  00D5               	movwf	??_Lcd_Set_Cursor
  1926  01C1  0855               	movf	??_Lcd_Set_Cursor,w
  1927  01C2  1683               	bsf	3,5	;RP0=1, select bank1
  1928  01C3  1303               	bcf	3,6	;RP1=0, select bank1
  1929  01C4  00A2               	movwf	Lcd_Set_Cursor@y^(0+128)
  1930  01C5                     l1784:
  1931                           
  1932                           ;LCD4b.c: 58:         Lcd_Cmd(z);
  1933  01C5  0821               	movf	Lcd_Set_Cursor@z^(0+128),w
  1934  01C6  120A  118A  248C  120A  118A  	fcall	_Lcd_Cmd
  1935  01CB                     l1786:
  1936                           
  1937                           ;LCD4b.c: 59:         Lcd_Cmd(y);
  1938  01CB  1683               	bsf	3,5	;RP0=1, select bank1
  1939  01CC  1303               	bcf	3,6	;RP1=0, select bank1
  1940  01CD  0822               	movf	Lcd_Set_Cursor@y^(0+128),w
  1941  01CE  120A  118A  248C  120A  118A  	fcall	_Lcd_Cmd
  1942                           
  1943                           ;LCD4b.c: 60:     } else if (a == 1) {
  1944  01D3  2A09               	goto	l196
  1945  01D4                     l1788:
  1946  01D4  0320               	decf	Lcd_Set_Cursor@a^(0+128),w
  1947  01D5  1D03               	btfss	3,2
  1948  01D6  29D8               	goto	u871
  1949  01D7  29D9               	goto	u870
  1950  01D8                     u871:
  1951  01D8  2A09               	goto	l196
  1952  01D9                     u870:
  1953  01D9                     l1790:
  1954                           
  1955                           ;LCD4b.c: 61:         temp = 0xC0 + b;
  1956  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1957  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1958  01DB  0854               	movf	Lcd_Set_Cursor@b,w
  1959  01DC  3EC0               	addlw	192
  1960  01DD  00D5               	movwf	??_Lcd_Set_Cursor
  1961  01DE  0855               	movf	??_Lcd_Set_Cursor,w
  1962  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  1963  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  1964  01E1  00A3               	movwf	Lcd_Set_Cursor@temp^(0+128)
  1965                           
  1966                           ;LCD4b.c: 62:         z = temp >> 4;
  1967  01E2  0823               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1968  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1969  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1970  01E5  00D5               	movwf	??_Lcd_Set_Cursor
  1971  01E6  3004               	movlw	4
  1972  01E7                     u885:
  1973  01E7  1003               	clrc
  1974  01E8  0CD5               	rrf	??_Lcd_Set_Cursor,f
  1975  01E9  3EFF               	addlw	-1
  1976  01EA  1D03               	skipz
  1977  01EB  29E7               	goto	u885
  1978  01EC  0855               	movf	??_Lcd_Set_Cursor,w
  1979  01ED  00D6               	movwf	??_Lcd_Set_Cursor+1
  1980  01EE  0856               	movf	??_Lcd_Set_Cursor+1,w
  1981  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  1982  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  1983  01F1  00A1               	movwf	Lcd_Set_Cursor@z^(0+128)
  1984  01F2                     l1792:
  1985                           
  1986                           ;LCD4b.c: 63:         y = temp & 0x0F;
  1987  01F2  0823               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1988  01F3  390F               	andlw	15
  1989  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1990  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1991  01F6  00D5               	movwf	??_Lcd_Set_Cursor
  1992  01F7  0855               	movf	??_Lcd_Set_Cursor,w
  1993  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  1994  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  1995  01FA  00A2               	movwf	Lcd_Set_Cursor@y^(0+128)
  1996  01FB                     l1794:
  1997                           
  1998                           ;LCD4b.c: 64:         Lcd_Cmd(z);
  1999  01FB  0821               	movf	Lcd_Set_Cursor@z^(0+128),w
  2000  01FC  120A  118A  248C  120A  118A  	fcall	_Lcd_Cmd
  2001  0201                     l1796:
  2002                           
  2003                           ;LCD4b.c: 65:         Lcd_Cmd(y);
  2004  0201  1683               	bsf	3,5	;RP0=1, select bank1
  2005  0202  1303               	bcf	3,6	;RP1=0, select bank1
  2006  0203  0822               	movf	Lcd_Set_Cursor@y^(0+128),w
  2007  0204  120A  118A  248C  120A  118A  	fcall	_Lcd_Cmd
  2008  0209                     l196:
  2009  0209  0008               	return
  2010  020A                     __end_of_Lcd_Set_Cursor:
  2011                           
  2012                           	psect	text8
  2013  02D8                     __ptext8:	
  2014 ;; *************** function _Lcd_Init *****************
  2015 ;; Defined at:
  2016 ;;		line 69 in file "LCD4b.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;		None
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, status,2, status,0, pclath, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2030 ;;      Params:         0       0       0       0       0
  2031 ;;      Locals:         0       0       0       0       0
  2032 ;;      Temps:          0       2       0       0       0
  2033 ;;      Totals:         0       2       0       0       0
  2034 ;;Total ram usage:        2 bytes
  2035 ;; Hardware stack levels used: 1
  2036 ;; Hardware stack levels required when called: 5
  2037 ;; This function calls:
  2038 ;;		_Lcd_Cmd
  2039 ;;		_Lcd_Port
  2040 ;; This function is called by:
  2041 ;;		_main
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045  02D8                     _Lcd_Init:	
  2046                           ;psect for function _Lcd_Init
  2047                           
  2048  02D8                     l1752:	
  2049                           ;incstack = 0
  2050                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2051                           
  2052                           
  2053                           ;LCD4b.c: 70:     Lcd_Port(0x00);
  2054  02D8  3000               	movlw	0
  2055  02D9  120A  118A  2452  120A  118A  	fcall	_Lcd_Port
  2056  02DE                     l1754:
  2057                           
  2058                           ;LCD4b.c: 71:     _delay((unsigned long)((20)*(1000000/4000.0)));
  2059  02DE  3007               	movlw	7
  2060  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2061  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2062  02E1  00D5               	movwf	??_Lcd_Init+1
  2063  02E2  307C               	movlw	124
  2064  02E3  00D4               	movwf	??_Lcd_Init
  2065  02E4                     u947:
  2066  02E4  0BD4               	decfsz	??_Lcd_Init,f
  2067  02E5  2AE4               	goto	u947
  2068  02E6  0BD5               	decfsz	??_Lcd_Init+1,f
  2069  02E7  2AE4               	goto	u947
  2070  02E8  0000               	nop
  2071  02E9                     l1756:
  2072                           
  2073                           ;LCD4b.c: 72:     Lcd_Cmd(0x03);
  2074  02E9  3003               	movlw	3
  2075  02EA  120A  118A  248C  120A  118A  	fcall	_Lcd_Cmd
  2076                           
  2077                           ;LCD4b.c: 73:     _delay((unsigned long)((5)*(1000000/4000.0)));
  2078  02EF  30F9               	movlw	249
  2079  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2080  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2081  02F2  00D4               	movwf	??_Lcd_Init
  2082  02F3                     u957:
  2083  02F3  2AF4               	nop2
  2084  02F4  0BD4               	decfsz	??_Lcd_Init,f
  2085  02F5  2AF3               	goto	u957
  2086  02F6  2AF7               	nop2
  2087  02F7                     l1758:
  2088                           
  2089                           ;LCD4b.c: 74:     Lcd_Cmd(0x03);
  2090  02F7  3003               	movlw	3
  2091  02F8  120A  118A  248C  120A  118A  	fcall	_Lcd_Cmd
  2092  02FD                     l1760:
  2093                           
  2094                           ;LCD4b.c: 75:     _delay((unsigned long)((11)*(1000000/4000000.0)));
  2095  02FD  2AFE               	nop2	;2 cycle nop
  2096  02FE                     l1762:
  2097                           
  2098                           ;LCD4b.c: 76:     Lcd_Cmd(0x03);
  2099  02FE  3003               	movlw	3
  2100  02FF  120A  118A  248C  120A  118A  	fcall	_Lcd_Cmd
  2101  0304                     l1764:
  2102                           
  2103                           ;LCD4b.c: 78:     Lcd_Cmd(0x02);
  2104  0304  3002               	movlw	2
  2105  0305  120A  118A  248C  120A  118A  	fcall	_Lcd_Cmd
  2106  030A                     l1766:
  2107                           
  2108                           ;LCD4b.c: 79:     Lcd_Cmd(0x02);
  2109  030A  3002               	movlw	2
  2110  030B  120A  118A  248C  120A  118A  	fcall	_Lcd_Cmd
  2111  0310                     l1768:
  2112                           
  2113                           ;LCD4b.c: 80:     Lcd_Cmd(0x08);
  2114  0310  3008               	movlw	8
  2115  0311  120A  118A  248C  120A  118A  	fcall	_Lcd_Cmd
  2116  0316                     l1770:
  2117                           
  2118                           ;LCD4b.c: 81:     Lcd_Cmd(0x00);
  2119  0316  3000               	movlw	0
  2120  0317  120A  118A  248C  120A  118A  	fcall	_Lcd_Cmd
  2121  031C                     l1772:
  2122                           
  2123                           ;LCD4b.c: 82:     Lcd_Cmd(0x0C);
  2124  031C  300C               	movlw	12
  2125  031D  120A  118A  248C  120A  118A  	fcall	_Lcd_Cmd
  2126  0322                     l1774:
  2127                           
  2128                           ;LCD4b.c: 83:     Lcd_Cmd(0x00);
  2129  0322  3000               	movlw	0
  2130  0323  120A  118A  248C  120A  118A  	fcall	_Lcd_Cmd
  2131  0328                     l1776:
  2132                           
  2133                           ;LCD4b.c: 84:     Lcd_Cmd(0x06);
  2134  0328  3006               	movlw	6
  2135  0329  120A  118A  248C  120A  118A  	fcall	_Lcd_Cmd
  2136  032E                     l199:
  2137  032E  0008               	return
  2138  032F                     __end_of_Lcd_Init:
  2139                           
  2140                           	psect	text9
  2141  048C                     __ptext9:	
  2142 ;; *************** function _Lcd_Cmd *****************
  2143 ;; Defined at:
  2144 ;;		line 36 in file "LCD4b.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  a               1    wreg     unsigned char 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  a               1   22[BANK0 ] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0, pclath, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2158 ;;      Params:         0       0       0       0       0
  2159 ;;      Locals:         0       1       0       0       0
  2160 ;;      Temps:          0       1       0       0       0
  2161 ;;      Totals:         0       2       0       0       0
  2162 ;;Total ram usage:        2 bytes
  2163 ;; Hardware stack levels used: 1
  2164 ;; Hardware stack levels required when called: 4
  2165 ;; This function calls:
  2166 ;;		_Lcd_Port
  2167 ;; This function is called by:
  2168 ;;		_Lcd_Set_Cursor
  2169 ;;		_Lcd_Init
  2170 ;;		_Lcd_Clear
  2171 ;;		_Lcd_Shift_Right
  2172 ;;		_Lcd_Shift_Left
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176  048C                     _Lcd_Cmd:	
  2177                           ;psect for function _Lcd_Cmd
  2178                           
  2179                           
  2180                           ;incstack = 0
  2181                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2182                           ;Lcd_Cmd@a stored from wreg
  2183  048C  1283               	bcf	3,5	;RP0=0, select bank0
  2184  048D  1303               	bcf	3,6	;RP1=0, select bank0
  2185  048E  00D3               	movwf	Lcd_Cmd@a
  2186  048F                     l1722:
  2187                           
  2188                           ;LCD4b.c: 36: void Lcd_Cmd(char a);LCD4b.c: 37: {;LCD4b.c: 38:     PORTBbits.RB2 = 0;
  2189  048F  1106               	bcf	6,2	;volatile
  2190  0490                     l1724:
  2191                           
  2192                           ;LCD4b.c: 39:     Lcd_Port(a);
  2193  0490  0853               	movf	Lcd_Cmd@a,w
  2194  0491  120A  118A  2452  120A  118A  	fcall	_Lcd_Port
  2195  0496                     l1726:
  2196                           
  2197                           ;LCD4b.c: 40:     RB3 = 1;
  2198  0496  1283               	bcf	3,5	;RP0=0, select bank0
  2199  0497  1303               	bcf	3,6	;RP1=0, select bank0
  2200  0498  1586               	bsf	6,3	;volatile
  2201  0499                     l1728:
  2202                           
  2203                           ;LCD4b.c: 41:     _delay((unsigned long)((4)*(1000000/4000.0)));
  2204  0499  30C7               	movlw	199
  2205  049A  1283               	bcf	3,5	;RP0=0, select bank0
  2206  049B  1303               	bcf	3,6	;RP1=0, select bank0
  2207  049C  00D2               	movwf	??_Lcd_Cmd
  2208  049D                     u967:
  2209  049D  2C9E               	nop2
  2210  049E  0BD2               	decfsz	??_Lcd_Cmd,f
  2211  049F  2C9D               	goto	u967
  2212  04A0  2CA1               	nop2
  2213  04A1                     l1730:
  2214                           
  2215                           ;LCD4b.c: 42:     RB3 = 0;
  2216  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  2217  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  2218  04A3  1186               	bcf	6,3	;volatile
  2219  04A4                     l187:
  2220  04A4  0008               	return
  2221  04A5                     __end_of_Lcd_Cmd:
  2222                           
  2223                           	psect	text10
  2224  0452                     __ptext10:	
  2225 ;; *************** function _Lcd_Port *****************
  2226 ;; Defined at:
  2227 ;;		line 13 in file "LCD4b.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  a               1    wreg     unsigned char 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  a               1   20[BANK0 ] unsigned char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2241 ;;      Params:         0       0       0       0       0
  2242 ;;      Locals:         0       1       0       0       0
  2243 ;;      Temps:          0       0       0       0       0
  2244 ;;      Totals:         0       1       0       0       0
  2245 ;;Total ram usage:        1 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; Hardware stack levels required when called: 3
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_Lcd_Cmd
  2252 ;;		_Lcd_Init
  2253 ;;		_Lcd_Write_Char
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257  0452                     _Lcd_Port:	
  2258                           ;psect for function _Lcd_Port
  2259                           
  2260                           
  2261                           ;incstack = 0
  2262                           ; Regs used in _Lcd_Port: [wreg]
  2263                           ;Lcd_Port@a stored from wreg
  2264  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2265  0453  1303               	bcf	3,6	;RP1=0, select bank0
  2266  0454  00D1               	movwf	Lcd_Port@a
  2267  0455                     l1712:
  2268                           
  2269                           ;LCD4b.c: 13: void Lcd_Port(char a);LCD4b.c: 14: {;LCD4b.c: 15:     if (a & 1)
  2270  0455  1C51               	btfss	Lcd_Port@a,0
  2271  0456  2C58               	goto	u801
  2272  0457  2C59               	goto	u800
  2273  0458                     u801:
  2274  0458  2C5B               	goto	l176
  2275  0459                     u800:
  2276  0459                     l1714:
  2277                           
  2278                           ;LCD4b.c: 16:         RB4 = 1;
  2279  0459  1606               	bsf	6,4	;volatile
  2280  045A  2C5C               	goto	l177
  2281  045B                     l176:	
  2282                           ;LCD4b.c: 17:     else
  2283                           
  2284                           
  2285                           ;LCD4b.c: 18:         RB4 = 0;
  2286  045B  1206               	bcf	6,4	;volatile
  2287  045C                     l177:
  2288                           
  2289                           ;LCD4b.c: 20:     if (a & 2)
  2290  045C  1CD1               	btfss	Lcd_Port@a,1
  2291  045D  2C5F               	goto	u811
  2292  045E  2C60               	goto	u810
  2293  045F                     u811:
  2294  045F  2C62               	goto	l178
  2295  0460                     u810:
  2296  0460                     l1716:
  2297                           
  2298                           ;LCD4b.c: 21:         RB5 = 1;
  2299  0460  1686               	bsf	6,5	;volatile
  2300  0461  2C63               	goto	l179
  2301  0462                     l178:	
  2302                           ;LCD4b.c: 22:     else
  2303                           
  2304                           
  2305                           ;LCD4b.c: 23:         RB5 = 0;
  2306  0462  1286               	bcf	6,5	;volatile
  2307  0463                     l179:
  2308                           
  2309                           ;LCD4b.c: 25:     if (a & 4)
  2310  0463  1D51               	btfss	Lcd_Port@a,2
  2311  0464  2C66               	goto	u821
  2312  0465  2C67               	goto	u820
  2313  0466                     u821:
  2314  0466  2C69               	goto	l180
  2315  0467                     u820:
  2316  0467                     l1718:
  2317                           
  2318                           ;LCD4b.c: 26:         RB6 = 1;
  2319  0467  1706               	bsf	6,6	;volatile
  2320  0468  2C6A               	goto	l181
  2321  0469                     l180:	
  2322                           ;LCD4b.c: 27:     else
  2323                           
  2324                           
  2325                           ;LCD4b.c: 28:         RB6 = 0;
  2326  0469  1306               	bcf	6,6	;volatile
  2327  046A                     l181:
  2328                           
  2329                           ;LCD4b.c: 30:     if (a & 8)
  2330  046A  1DD1               	btfss	Lcd_Port@a,3
  2331  046B  2C6D               	goto	u831
  2332  046C  2C6E               	goto	u830
  2333  046D                     u831:
  2334  046D  2C70               	goto	l182
  2335  046E                     u830:
  2336  046E                     l1720:
  2337                           
  2338                           ;LCD4b.c: 31:         RB7 = 1;
  2339  046E  1786               	bsf	6,7	;volatile
  2340  046F  2C71               	goto	l184
  2341  0470                     l182:	
  2342                           ;LCD4b.c: 32:     else
  2343                           
  2344                           
  2345                           ;LCD4b.c: 33:         RB7 = 0;
  2346  0470  1386               	bcf	6,7	;volatile
  2347  0471                     l184:
  2348  0471  0008               	return
  2349  0472                     __end_of_Lcd_Port:
  2350                           
  2351                           	psect	text11
  2352  011C                     __ptext11:	
  2353 ;; *************** function _isr *****************
  2354 ;; Defined at:
  2355 ;;		line 61 in file "proyecto-main.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;		None
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;		None
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2369 ;;      Params:         0       0       0       0       0
  2370 ;;      Locals:         0       0       0       0       0
  2371 ;;      Temps:          0       7       0       0       0
  2372 ;;      Totals:         0       7       0       0       0
  2373 ;;Total ram usage:        7 bytes
  2374 ;; Hardware stack levels used: 1
  2375 ;; Hardware stack levels required when called: 2
  2376 ;; This function calls:
  2377 ;;		_sprintf
  2378 ;;		_tmr0Reset
  2379 ;; This function is called by:
  2380 ;;		Interrupt level 1
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384  011C                     _isr:	
  2385                           ;psect for function _isr
  2386                           
  2387  011C                     i1l1556:
  2388                           
  2389                           ;proyecto-main.c: 64:     if (T0IF){
  2390  011C  1D0B               	btfss	11,2	;volatile
  2391  011D  291F               	goto	u72_21
  2392  011E  2920               	goto	u72_20
  2393  011F                     u72_21:
  2394  011F  293A               	goto	i1l1566
  2395  0120                     u72_20:
  2396  0120                     i1l1558:
  2397                           
  2398                           ;proyecto-main.c: 65:         milis++;
  2399  0120  3001               	movlw	1
  2400  0121  00CA               	movwf	??_isr
  2401  0122  084A               	movf	??_isr,w
  2402  0123  07A7               	addwf	_milis,f
  2403                           
  2404                           ;proyecto-main.c: 66:         if (milis == 4){
  2405  0124  3004               	movlw	4
  2406  0125  0627               	xorwf	_milis,w
  2407  0126  1D03               	btfss	3,2
  2408  0127  2929               	goto	u73_21
  2409  0128  292A               	goto	u73_20
  2410  0129                     u73_21:
  2411  0129  2935               	goto	i1l1564
  2412  012A                     u73_20:
  2413  012A                     i1l1560:
  2414                           
  2415                           ;proyecto-main.c: 67:             pulse = !pulse;
  2416  012A  0826               	movf	_pulse,w
  2417  012B  1903               	btfsc	3,2
  2418  012C  292E               	goto	u74_21
  2419  012D  2930               	goto	u74_20
  2420  012E                     u74_21:
  2421  012E  3001               	movlw	1
  2422  012F  2931               	goto	u75_20
  2423  0130                     u74_20:
  2424  0130  3000               	movlw	0
  2425  0131                     u75_20:
  2426  0131  00CA               	movwf	??_isr
  2427  0132  084A               	movf	??_isr,w
  2428  0133  00A6               	movwf	_pulse
  2429  0134                     i1l1562:
  2430                           
  2431                           ;proyecto-main.c: 68:             milis = 0;
  2432  0134  01A7               	clrf	_milis
  2433  0135                     i1l1564:
  2434                           
  2435                           ;proyecto-main.c: 70:         tmr0Reset();
  2436  0135  120A  118A  24D0  120A  118A  	fcall	_tmr0Reset
  2437  013A                     i1l1566:
  2438                           
  2439                           ;proyecto-main.c: 74:     if (RCIF){
  2440  013A  1283               	bcf	3,5	;RP0=0, select bank0
  2441  013B  1303               	bcf	3,6	;RP1=0, select bank0
  2442  013C  1E8C               	btfss	12,5	;volatile
  2443  013D  293F               	goto	u76_21
  2444  013E  2940               	goto	u76_20
  2445  013F                     u76_21:
  2446  013F  2990               	goto	i1l117
  2447  0140                     u76_20:
  2448  0140                     i1l1568:
  2449                           
  2450                           ;proyecto-main.c: 75:         frerr = RCSTAbits.FERR;
  2451  0140  3000               	movlw	0
  2452  0141  1918               	btfsc	24,2	;volatile
  2453  0142  3001               	movlw	1
  2454  0143  00A1               	movwf	_frerr
  2455                           
  2456                           ;proyecto-main.c: 76:         overr = RCSTAbits.OERR;
  2457  0144  3000               	movlw	0
  2458  0145  1898               	btfsc	24,1	;volatile
  2459  0146  3001               	movlw	1
  2460  0147  00A0               	movwf	_overr
  2461  0148                     i1l1570:
  2462                           
  2463                           ;proyecto-main.c: 77:         sensor_flag = RCREG;
  2464  0148  081A               	movf	26,w	;volatile
  2465  0149  00CA               	movwf	??_isr
  2466  014A  084A               	movf	??_isr,w
  2467  014B  00A3               	movwf	_sensor_flag
  2468  014C                     i1l1572:
  2469                           
  2470                           ;proyecto-main.c: 78:         sprintf(spst_str, "%d", sensor_flag);
  2471  014C  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2472  014D  00CA               	movwf	??_isr
  2473  014E  084A               	movf	??_isr,w
  2474  014F  00BD               	movwf	sprintf@f
  2475  0150  0823               	movf	_sensor_flag,w
  2476  0151  00CB               	movwf	??_isr+1
  2477  0152  01CC               	clrf	??_isr+2
  2478  0153  084B               	movf	??_isr+1,w
  2479  0154  00BE               	movwf	?_sprintf+1
  2480  0155  084C               	movf	??_isr+2,w
  2481  0156  00BF               	movwf	?_sprintf+2
  2482  0157  3029               	movlw	(low (_spst_str| 0))& (0+255)
  2483  0158  120A  118A  2034  120A  118A  	fcall	_sprintf
  2484  015D                     i1l1574:
  2485                           
  2486                           ;proyecto-main.c: 79:         RCREG = 0;
  2487  015D  1283               	bcf	3,5	;RP0=0, select bank0
  2488  015E  1303               	bcf	3,6	;RP1=0, select bank0
  2489  015F  019A               	clrf	26	;volatile
  2490  0160                     i1l1576:
  2491                           
  2492                           ;proyecto-main.c: 80:         if (sensor_flag == 65){
  2493  0160  3041               	movlw	65
  2494  0161  0623               	xorwf	_sensor_flag,w
  2495  0162  1D03               	btfss	3,2
  2496  0163  2965               	goto	u77_21
  2497  0164  2966               	goto	u77_20
  2498  0165                     u77_21:
  2499  0165  2990               	goto	i1l117
  2500  0166                     u77_20:
  2501  0166                     i1l1578:
  2502                           
  2503                           ;proyecto-main.c: 81:             frerr = RCSTAbits.FERR;
  2504  0166  3000               	movlw	0
  2505  0167  1918               	btfsc	24,2	;volatile
  2506  0168  3001               	movlw	1
  2507  0169  00A1               	movwf	_frerr
  2508                           
  2509                           ;proyecto-main.c: 82:             overr = RCSTAbits.OERR;
  2510  016A  3000               	movlw	0
  2511  016B  1898               	btfsc	24,1	;volatile
  2512  016C  3001               	movlw	1
  2513  016D  00A0               	movwf	_overr
  2514  016E                     i1l1580:
  2515                           
  2516                           ;proyecto-main.c: 83:             PORTAbits.RA0 = frerr;
  2517  016E  0C21               	rrf	_frerr,w
  2518  016F  1C03               	skipc
  2519  0170  1005               	bcf	5,0	;volatile
  2520  0171  1803               	skipnc
  2521  0172  1405               	bsf	5,0	;volatile
  2522  0173                     i1l1582:
  2523                           
  2524                           ;proyecto-main.c: 84:             PORTAbits.RA1 = overr;
  2525  0173  0C20               	rrf	_overr,w
  2526  0174  1C03               	skipc
  2527  0175  1085               	bcf	5,1	;volatile
  2528  0176  1803               	skipnc
  2529  0177  1485               	bsf	5,1	;volatile
  2530  0178                     i1l1584:
  2531                           
  2532                           ;proyecto-main.c: 85:             HS_flag = RCREG;
  2533  0178  081A               	movf	26,w	;volatile
  2534  0179  00CA               	movwf	??_isr
  2535  017A  084A               	movf	??_isr,w
  2536  017B  00A4               	movwf	_HS_flag
  2537  017C                     i1l1586:
  2538                           
  2539                           ;proyecto-main.c: 86:             sprintf(HS_flag_str, "%d", HS_flag);
  2540  017C  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2541  017D  00CA               	movwf	??_isr
  2542  017E  084A               	movf	??_isr,w
  2543  017F  00BD               	movwf	sprintf@f
  2544  0180  0824               	movf	_HS_flag,w
  2545  0181  00CB               	movwf	??_isr+1
  2546  0182  01CC               	clrf	??_isr+2
  2547  0183  084B               	movf	??_isr+1,w
  2548  0184  00BE               	movwf	?_sprintf+1
  2549  0185  084C               	movf	??_isr+2,w
  2550  0186  00BF               	movwf	?_sprintf+2
  2551  0187  3033               	movlw	(low (_HS_flag_str| 0))& (0+255)
  2552  0188  120A  118A  2034  120A  118A  	fcall	_sprintf
  2553  018D                     i1l1588:
  2554                           
  2555                           ;proyecto-main.c: 87:             RCREG = 0;
  2556  018D  1283               	bcf	3,5	;RP0=0, select bank0
  2557  018E  1303               	bcf	3,6	;RP1=0, select bank0
  2558  018F  019A               	clrf	26	;volatile
  2559  0190                     i1l117:
  2560  0190  0850               	movf	??_isr+6,w
  2561  0191  00FF               	movwf	btemp+1
  2562  0192  084F               	movf	??_isr+5,w
  2563  0193  008A               	movwf	10
  2564  0194  084E               	movf	??_isr+4,w
  2565  0195  0084               	movwf	4
  2566  0196  0E4D               	swapf	??_isr+3,w
  2567  0197  0083               	movwf	3
  2568  0198  0EFE               	swapf	btemp,f
  2569  0199  0E7E               	swapf	btemp,w
  2570  019A  0009               	retfie
  2571  019B                     __end_of_isr:
  2572                           
  2573                           	psect	intentry
  2574  0004                     __pintentry:	
  2575                           ;incstack = 0
  2576                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2577                           
  2578  0004                     interrupt_function:
  2579  007E                     saved_w	set	btemp
  2580  0004  00FE               	movwf	btemp
  2581  0005  0E03               	swapf	3,w
  2582  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2583  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2584  0008  00CD               	movwf	??_isr+3
  2585  0009  0804               	movf	4,w
  2586  000A  00CE               	movwf	??_isr+4
  2587  000B  080A               	movf	10,w
  2588  000C  00CF               	movwf	??_isr+5
  2589  000D  087F               	movf	btemp+1,w
  2590  000E  00D0               	movwf	??_isr+6
  2591  000F  120A  118A  291C   	ljmp	_isr
  2592                           
  2593                           	psect	text12
  2594  04D0                     __ptext12:	
  2595 ;; *************** function _tmr0Reset *****************
  2596 ;; Defined at:
  2597 ;;		line 53 in file "tmr0_config.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;		None
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;		None
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2611 ;;      Params:         0       0       0       0       0
  2612 ;;      Locals:         0       0       0       0       0
  2613 ;;      Temps:          0       0       0       0       0
  2614 ;;      Totals:         0       0       0       0       0
  2615 ;;Total ram usage:        0 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_isr
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624  04D0                     _tmr0Reset:	
  2625                           ;psect for function _tmr0Reset
  2626                           
  2627  04D0                     i1l1420:	
  2628                           ;incstack = 0
  2629                           ; Regs used in _tmr0Reset: [wreg]
  2630                           
  2631                           
  2632                           ;tmr0_config.c: 54:     INTCONbits.T0IF = 0;
  2633  04D0  110B               	bcf	11,2	;volatile
  2634  04D1                     i1l1422:
  2635                           
  2636                           ;tmr0_config.c: 55:     TMR0 = 178;
  2637  04D1  30B2               	movlw	178
  2638  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2639  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  2640  04D4  0081               	movwf	1	;volatile
  2641  04D5                     i1l36:
  2642  04D5  0008               	return
  2643  04D6                     __end_of_tmr0Reset:
  2644                           
  2645                           	psect	text13
  2646  0034                     __ptext13:	
  2647 ;; *************** function _sprintf *****************
  2648 ;; Defined at:
  2649 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;  sp              1    wreg     PTR unsigned char 
  2652 ;;		 -> HS_flag_str(10), spst_str(10), 
  2653 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2654 ;;		 -> STR_2(3), STR_1(3), 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2657 ;;		 -> HS_flag_str(10), spst_str(10), 
  2658 ;;  tmpval          4    0        struct .
  2659 ;;  val             2    9[BANK0 ] unsigned int 
  2660 ;;  cp              2    0        PTR const unsigned char 
  2661 ;;  len             2    0        unsigned int 
  2662 ;;  c               1   12[BANK0 ] unsigned char 
  2663 ;;  prec            1    8[BANK0 ] char 
  2664 ;;  flag            1    7[BANK0 ] unsigned char 
  2665 ;;  ap              1    6[BANK0 ] PTR void [1]
  2666 ;;		 -> ?_sprintf(2), 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  2    0[BANK0 ] int 
  2669 ;; Registers used:
  2670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2676 ;;      Params:         0       3       0       0       0
  2677 ;;      Locals:         0       7       0       0       0
  2678 ;;      Temps:          0       3       0       0       0
  2679 ;;      Totals:         0      13       0       0       0
  2680 ;;Total ram usage:       13 bytes
  2681 ;; Hardware stack levels used: 1
  2682 ;; Hardware stack levels required when called: 1
  2683 ;; This function calls:
  2684 ;;		___lwdiv
  2685 ;;		___lwmod
  2686 ;; This function is called by:
  2687 ;;		_isr
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691  0034                     _sprintf:	
  2692                           ;psect for function _sprintf
  2693                           
  2694                           
  2695                           ;incstack = 0
  2696                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2697                           ;sprintf@sp stored from wreg
  2698  0034  1283               	bcf	3,5	;RP0=0, select bank0
  2699  0035  1303               	bcf	3,6	;RP1=0, select bank0
  2700  0036  00C8               	movwf	sprintf@sp
  2701  0037                     i1l1424:
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2704  0037  303E               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2705  0038  00C0               	movwf	??_sprintf
  2706  0039  0840               	movf	??_sprintf,w
  2707  003A  00C3               	movwf	sprintf@ap
  2708                           
  2709                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2710  003B  2905               	goto	i1l1476
  2711  003C                     i1l1426:
  2712                           
  2713                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2714  003C  3025               	movlw	37
  2715  003D  0649               	xorwf	sprintf@c,w
  2716  003E  1903               	btfsc	3,2
  2717  003F  2841               	goto	u60_21
  2718  0040  2842               	goto	u60_20
  2719  0041                     u60_21:
  2720  0041  284E               	goto	i1l1432
  2721  0042                     u60_20:
  2722  0042                     i1l1428:
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2725  0042  0849               	movf	sprintf@c,w
  2726  0043  00C0               	movwf	??_sprintf
  2727  0044  0848               	movf	sprintf@sp,w
  2728  0045  0084               	movwf	4
  2729  0046  0840               	movf	??_sprintf,w
  2730  0047  1383               	bcf	3,7	;select IRP bank0
  2731  0048  0080               	movwf	0
  2732  0049                     i1l1430:
  2733  0049  3001               	movlw	1
  2734  004A  00C0               	movwf	??_sprintf
  2735  004B  0840               	movf	??_sprintf,w
  2736  004C  07C8               	addwf	sprintf@sp,f
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 559:    continue;
  2739  004D  2905               	goto	i1l1476
  2740  004E                     i1l1432:
  2741                           
  2742                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2743  004E  01C4               	clrf	sprintf@flag
  2744  004F                     i1l1436:	
  2745                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2746                           
  2747  004F  3001               	movlw	1
  2748  0050  07BD               	addwf	sprintf@f,f
  2749  0051  30FF               	movlw	-1
  2750  0052  073D               	addwf	sprintf@f,w
  2751  0053  0084               	movwf	4
  2752  0054  120A  118A  24A5  120A  118A  	fcall	stringdir
  2753  0059  00C9               	movwf	sprintf@c
  2754  005A  00C0               	movwf	??_sprintf
  2755  005B  01C1               	clrf	??_sprintf+1
  2756                           
  2757                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2758                           ; Switch size 1, requested type "simple"
  2759                           ; Number of cases is 1, Range of values is 0 to 0
  2760                           ; switch strategies available:
  2761                           ; Name         Instructions Cycles
  2762                           ; simple_byte            4     3 (average)
  2763                           ; direct_byte           11     8 (fixed)
  2764                           ; jumptable            260     6 (fixed)
  2765                           ;	Chosen strategy is simple_byte
  2766  005C  0841               	movf	??_sprintf+1,w
  2767  005D  3A00               	xorlw	0	; case 0
  2768  005E  1903               	skipnz
  2769  005F  2861               	goto	i1l1934
  2770  0060  2905               	goto	i1l1476
  2771  0061                     i1l1934:
  2772                           
  2773                           ; Switch size 1, requested type "simple"
  2774                           ; Number of cases is 3, Range of values is 0 to 105
  2775                           ; switch strategies available:
  2776                           ; Name         Instructions Cycles
  2777                           ; simple_byte           10     6 (average)
  2778                           ; jumptable            260     6 (fixed)
  2779                           ;	Chosen strategy is simple_byte
  2780  0061  0840               	movf	??_sprintf,w
  2781  0062  3A00               	xorlw	0	; case 0
  2782  0063  1903               	skipnz
  2783  0064  2917               	goto	i1l1478
  2784  0065  3A64               	xorlw	100	; case 100
  2785  0066  1903               	skipnz
  2786  0067  286C               	goto	i1l1438
  2787  0068  3A0D               	xorlw	13	; case 105
  2788  0069  1903               	skipnz
  2789  006A  286C               	goto	i1l1438
  2790  006B  2905               	goto	i1l1476
  2791  006C                     i1l1438:
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2794  006C  0843               	movf	sprintf@ap,w
  2795  006D  0084               	movwf	4
  2796  006E  1383               	bcf	3,7	;select IRP bank0
  2797  006F  0800               	movf	0,w
  2798  0070  00C6               	movwf	sprintf@val
  2799  0071  0A84               	incf	4,f
  2800  0072  0800               	movf	0,w
  2801  0073  00C7               	movwf	sprintf@val+1
  2802  0074                     i1l1440:
  2803  0074  3002               	movlw	2
  2804  0075  00C0               	movwf	??_sprintf
  2805  0076  0840               	movf	??_sprintf,w
  2806  0077  07C3               	addwf	sprintf@ap,f
  2807  0078                     i1l1442:
  2808                           
  2809                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2810  0078  1FC7               	btfss	sprintf@val+1,7
  2811  0079  287B               	goto	u61_21
  2812  007A  287C               	goto	u61_20
  2813  007B                     u61_21:
  2814  007B  2885               	goto	i1l1448
  2815  007C                     u61_20:
  2816  007C                     i1l1444:
  2817                           
  2818                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2819  007C  3003               	movlw	3
  2820  007D  00C0               	movwf	??_sprintf
  2821  007E  0840               	movf	??_sprintf,w
  2822  007F  04C4               	iorwf	sprintf@flag,f
  2823  0080                     i1l1446:
  2824                           
  2825                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2826  0080  09C6               	comf	sprintf@val,f
  2827  0081  09C7               	comf	sprintf@val+1,f
  2828  0082  0AC6               	incf	sprintf@val,f
  2829  0083  1903               	skipnz
  2830  0084  0AC7               	incf	sprintf@val+1,f
  2831  0085                     i1l1448:
  2832                           
  2833                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2834  0085  01C9               	clrf	sprintf@c
  2835  0086  0AC9               	incf	sprintf@c,f
  2836  0087                     i1l1454:
  2837                           
  2838                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2839  0087  0849               	movf	sprintf@c,w
  2840  0088  00C0               	movwf	??_sprintf
  2841  0089  0740               	addwf	??_sprintf,w
  2842  008A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2843  008B  0084               	movwf	4
  2844  008C  120A  118A  24A5  120A  118A  	fcall	stringdir
  2845  0091  00C1               	movwf	??_sprintf+1
  2846  0092  120A  118A  24A5  120A  118A  	fcall	stringdir
  2847  0097  00C2               	movwf	??_sprintf+2
  2848  0098  0842               	movf	??_sprintf+2,w
  2849  0099  0247               	subwf	sprintf@val+1,w
  2850  009A  1D03               	skipz
  2851  009B  289E               	goto	u62_25
  2852  009C  0841               	movf	??_sprintf+1,w
  2853  009D  0246               	subwf	sprintf@val,w
  2854  009E                     u62_25:
  2855  009E  1803               	skipnc
  2856  009F  28A1               	goto	u62_21
  2857  00A0  28A2               	goto	u62_20
  2858  00A1                     u62_21:
  2859  00A1  28A3               	goto	i1l1458
  2860  00A2                     u62_20:
  2861  00A2  28AD               	goto	i1l1460
  2862  00A3                     i1l1458:
  2863  00A3  3001               	movlw	1
  2864  00A4  00C0               	movwf	??_sprintf
  2865  00A5  0840               	movf	??_sprintf,w
  2866  00A6  07C9               	addwf	sprintf@c,f
  2867  00A7  3005               	movlw	5
  2868  00A8  0649               	xorwf	sprintf@c,w
  2869  00A9  1D03               	btfss	3,2
  2870  00AA  28AC               	goto	u63_21
  2871  00AB  28AD               	goto	u63_20
  2872  00AC                     u63_21:
  2873  00AC  2887               	goto	i1l1454
  2874  00AD                     u63_20:
  2875  00AD                     i1l1460:
  2876                           
  2877                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2878  00AD  0844               	movf	sprintf@flag,w
  2879  00AE  3903               	andlw	3
  2880  00AF  1903               	btfsc	3,2
  2881  00B0  28B2               	goto	u64_21
  2882  00B1  28B3               	goto	u64_20
  2883  00B2                     u64_21:
  2884  00B2  28BE               	goto	i1l1466
  2885  00B3                     u64_20:
  2886  00B3                     i1l1462:
  2887                           
  2888                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2889  00B3  302D               	movlw	45
  2890  00B4  00C0               	movwf	??_sprintf
  2891  00B5  0848               	movf	sprintf@sp,w
  2892  00B6  0084               	movwf	4
  2893  00B7  0840               	movf	??_sprintf,w
  2894  00B8  1383               	bcf	3,7	;select IRP bank0
  2895  00B9  0080               	movwf	0
  2896  00BA                     i1l1464:
  2897  00BA  3001               	movlw	1
  2898  00BB  00C0               	movwf	??_sprintf
  2899  00BC  0840               	movf	??_sprintf,w
  2900  00BD  07C8               	addwf	sprintf@sp,f
  2901  00BE                     i1l1466:
  2902                           
  2903                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2904  00BE  0849               	movf	sprintf@c,w
  2905  00BF  00C0               	movwf	??_sprintf
  2906  00C0  0840               	movf	??_sprintf,w
  2907  00C1  00C5               	movwf	sprintf@prec
  2908                           
  2909                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2910  00C2  28FC               	goto	i1l1474
  2911  00C3                     i1l1468:
  2912                           
  2913                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2914  00C3  300A               	movlw	10
  2915  00C4  00F8               	movwf	___lwmod@divisor
  2916  00C5  3000               	movlw	0
  2917  00C6  00F9               	movwf	___lwmod@divisor+1
  2918  00C7  0845               	movf	sprintf@prec,w
  2919  00C8  00C0               	movwf	??_sprintf
  2920  00C9  0740               	addwf	??_sprintf,w
  2921  00CA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2922  00CB  0084               	movwf	4
  2923  00CC  120A  118A  24A5  120A  118A  	fcall	stringdir
  2924  00D1  00F0               	movwf	___lwdiv@divisor
  2925  00D2  120A  118A  24A5  120A  118A  	fcall	stringdir
  2926  00D7  00F1               	movwf	___lwdiv@divisor+1
  2927  00D8  0847               	movf	sprintf@val+1,w
  2928  00D9  00F3               	movwf	___lwdiv@dividend+1
  2929  00DA  0846               	movf	sprintf@val,w
  2930  00DB  00F2               	movwf	___lwdiv@dividend
  2931  00DC  120A  118A  232F  120A  118A  	fcall	___lwdiv
  2932  00E1  0871               	movf	?___lwdiv+1,w
  2933  00E2  00FB               	movwf	___lwmod@dividend+1
  2934  00E3  0870               	movf	?___lwdiv,w
  2935  00E4  00FA               	movwf	___lwmod@dividend
  2936  00E5  120A  118A  23ED  120A  118A  	fcall	___lwmod
  2937  00EA  0878               	movf	?___lwmod,w
  2938  00EB  3E30               	addlw	48
  2939  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  2940  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  2941  00EE  00C1               	movwf	??_sprintf+1
  2942  00EF  0841               	movf	??_sprintf+1,w
  2943  00F0  00C9               	movwf	sprintf@c
  2944  00F1                     i1l1470:
  2945                           
  2946                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2947  00F1  0849               	movf	sprintf@c,w
  2948  00F2  00C0               	movwf	??_sprintf
  2949  00F3  0848               	movf	sprintf@sp,w
  2950  00F4  0084               	movwf	4
  2951  00F5  0840               	movf	??_sprintf,w
  2952  00F6  1383               	bcf	3,7	;select IRP bank0
  2953  00F7  0080               	movwf	0
  2954  00F8                     i1l1472:
  2955  00F8  3001               	movlw	1
  2956  00F9  00C0               	movwf	??_sprintf
  2957  00FA  0840               	movf	??_sprintf,w
  2958  00FB  07C8               	addwf	sprintf@sp,f
  2959  00FC                     i1l1474:
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2962  00FC  30FF               	movlw	255
  2963  00FD  00C0               	movwf	??_sprintf
  2964  00FE  0840               	movf	??_sprintf,w
  2965  00FF  07C5               	addwf	sprintf@prec,f
  2966  0100  0A45               	incf	sprintf@prec,w
  2967  0101  1D03               	btfss	3,2
  2968  0102  2904               	goto	u65_21
  2969  0103  2905               	goto	u65_20
  2970  0104                     u65_21:
  2971  0104  28C3               	goto	i1l1468
  2972  0105                     u65_20:
  2973  0105                     i1l1476:
  2974                           
  2975                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2976  0105  3001               	movlw	1
  2977  0106  07BD               	addwf	sprintf@f,f
  2978  0107  30FF               	movlw	-1
  2979  0108  073D               	addwf	sprintf@f,w
  2980  0109  0084               	movwf	4
  2981  010A  120A  118A  24A5  120A  118A  	fcall	stringdir
  2982  010F  00C0               	movwf	??_sprintf
  2983  0110  0840               	movf	??_sprintf,w
  2984  0111  00C9               	movwf	sprintf@c
  2985  0112  0849               	movf	sprintf@c,w
  2986  0113  1D03               	btfss	3,2
  2987  0114  2916               	goto	u66_21
  2988  0115  2917               	goto	u66_20
  2989  0116                     u66_21:
  2990  0116  283C               	goto	i1l1426
  2991  0117                     u66_20:
  2992  0117                     i1l1478:
  2993                           
  2994                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2995  0117  0848               	movf	sprintf@sp,w
  2996  0118  0084               	movwf	4
  2997  0119  1383               	bcf	3,7	;select IRP bank0
  2998  011A  0180               	clrf	0
  2999  011B                     i1l324:
  3000  011B  0008               	return
  3001  011C                     __end_of_sprintf:
  3002                           
  3003                           	psect	text14
  3004  03ED                     __ptext14:	
  3005 ;; *************** function ___lwmod *****************
  3006 ;; Defined at:
  3007 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwmod.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  divisor         2    8[COMMON] unsigned int 
  3010 ;;  dividend        2   10[COMMON] unsigned int 
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  counter         1   13[COMMON] unsigned char 
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  2    8[COMMON] unsigned int 
  3015 ;; Registers used:
  3016 ;;		wreg, status,2, status,0
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3022 ;;      Params:         4       0       0       0       0
  3023 ;;      Locals:         1       0       0       0       0
  3024 ;;      Temps:          1       0       0       0       0
  3025 ;;      Totals:         6       0       0       0       0
  3026 ;;Total ram usage:        6 bytes
  3027 ;; Hardware stack levels used: 1
  3028 ;; This function calls:
  3029 ;;		Nothing
  3030 ;; This function is called by:
  3031 ;;		_sprintf
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035  03ED                     ___lwmod:	
  3036                           ;psect for function ___lwmod
  3037                           
  3038  03ED                     i1l1344:	
  3039                           ;incstack = 0
  3040                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3041                           
  3042  03ED  0878               	movf	___lwmod@divisor,w
  3043  03EE  0479               	iorwf	___lwmod@divisor+1,w
  3044  03EF  1903               	btfsc	3,2
  3045  03F0  2BF2               	goto	u54_21
  3046  03F1  2BF3               	goto	u54_20
  3047  03F2                     u54_21:
  3048  03F2  2C22               	goto	i1l1362
  3049  03F3                     u54_20:
  3050  03F3                     i1l1346:
  3051  03F3  01FD               	clrf	___lwmod@counter
  3052  03F4  0AFD               	incf	___lwmod@counter,f
  3053  03F5  2C01               	goto	i1l1352
  3054  03F6                     i1l1348:
  3055  03F6  3001               	movlw	1
  3056  03F7                     u55_25:
  3057  03F7  1003               	clrc
  3058  03F8  0DF8               	rlf	___lwmod@divisor,f
  3059  03F9  0DF9               	rlf	___lwmod@divisor+1,f
  3060  03FA  3EFF               	addlw	-1
  3061  03FB  1D03               	skipz
  3062  03FC  2BF7               	goto	u55_25
  3063  03FD                     i1l1350:
  3064  03FD  3001               	movlw	1
  3065  03FE  00FC               	movwf	??___lwmod
  3066  03FF  087C               	movf	??___lwmod,w
  3067  0400  07FD               	addwf	___lwmod@counter,f
  3068  0401                     i1l1352:
  3069  0401  1FF9               	btfss	___lwmod@divisor+1,7
  3070  0402  2C04               	goto	u56_21
  3071  0403  2C05               	goto	u56_20
  3072  0404                     u56_21:
  3073  0404  2BF6               	goto	i1l1348
  3074  0405                     u56_20:
  3075  0405                     i1l1354:
  3076  0405  0879               	movf	___lwmod@divisor+1,w
  3077  0406  027B               	subwf	___lwmod@dividend+1,w
  3078  0407  1D03               	skipz
  3079  0408  2C0B               	goto	u57_25
  3080  0409  0878               	movf	___lwmod@divisor,w
  3081  040A  027A               	subwf	___lwmod@dividend,w
  3082  040B                     u57_25:
  3083  040B  1C03               	skipc
  3084  040C  2C0E               	goto	u57_21
  3085  040D  2C0F               	goto	u57_20
  3086  040E                     u57_21:
  3087  040E  2C15               	goto	i1l1358
  3088  040F                     u57_20:
  3089  040F                     i1l1356:
  3090  040F  0878               	movf	___lwmod@divisor,w
  3091  0410  02FA               	subwf	___lwmod@dividend,f
  3092  0411  0879               	movf	___lwmod@divisor+1,w
  3093  0412  1C03               	skipc
  3094  0413  03FB               	decf	___lwmod@dividend+1,f
  3095  0414  02FB               	subwf	___lwmod@dividend+1,f
  3096  0415                     i1l1358:
  3097  0415  3001               	movlw	1
  3098  0416                     u58_25:
  3099  0416  1003               	clrc
  3100  0417  0CF9               	rrf	___lwmod@divisor+1,f
  3101  0418  0CF8               	rrf	___lwmod@divisor,f
  3102  0419  3EFF               	addlw	-1
  3103  041A  1D03               	skipz
  3104  041B  2C16               	goto	u58_25
  3105  041C                     i1l1360:
  3106  041C  3001               	movlw	1
  3107  041D  02FD               	subwf	___lwmod@counter,f
  3108  041E  1D03               	btfss	3,2
  3109  041F  2C21               	goto	u59_21
  3110  0420  2C22               	goto	u59_20
  3111  0421                     u59_21:
  3112  0421  2C05               	goto	i1l1354
  3113  0422                     u59_20:
  3114  0422                     i1l1362:
  3115  0422  087B               	movf	___lwmod@dividend+1,w
  3116  0423  00F9               	movwf	?___lwmod+1
  3117  0424  087A               	movf	___lwmod@dividend,w
  3118  0425  00F8               	movwf	?___lwmod
  3119  0426                     i1l610:
  3120  0426  0008               	return
  3121  0427                     __end_of___lwmod:
  3122                           
  3123                           	psect	text15
  3124  032F                     __ptext15:	
  3125 ;; *************** function ___lwdiv *****************
  3126 ;; Defined at:
  3127 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;  divisor         2    0[COMMON] unsigned int 
  3130 ;;  dividend        2    2[COMMON] unsigned int 
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;  quotient        2    5[COMMON] unsigned int 
  3133 ;;  counter         1    7[COMMON] unsigned char 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  2    0[COMMON] unsigned int 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3143 ;;      Params:         4       0       0       0       0
  3144 ;;      Locals:         3       0       0       0       0
  3145 ;;      Temps:          1       0       0       0       0
  3146 ;;      Totals:         8       0       0       0       0
  3147 ;;Total ram usage:        8 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_sprintf
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156  032F                     ___lwdiv:	
  3157                           ;psect for function ___lwdiv
  3158                           
  3159  032F                     i1l1318:	
  3160                           ;incstack = 0
  3161                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3162                           
  3163  032F  01F5               	clrf	___lwdiv@quotient
  3164  0330  01F6               	clrf	___lwdiv@quotient+1
  3165  0331                     i1l1320:
  3166  0331  0870               	movf	___lwdiv@divisor,w
  3167  0332  0471               	iorwf	___lwdiv@divisor+1,w
  3168  0333  1903               	btfsc	3,2
  3169  0334  2B36               	goto	u47_21
  3170  0335  2B37               	goto	u47_20
  3171  0336                     u47_21:
  3172  0336  2B6E               	goto	i1l1340
  3173  0337                     u47_20:
  3174  0337                     i1l1322:
  3175  0337  01F7               	clrf	___lwdiv@counter
  3176  0338  0AF7               	incf	___lwdiv@counter,f
  3177  0339  2B45               	goto	i1l1328
  3178  033A                     i1l1324:
  3179  033A  3001               	movlw	1
  3180  033B                     u48_25:
  3181  033B  1003               	clrc
  3182  033C  0DF0               	rlf	___lwdiv@divisor,f
  3183  033D  0DF1               	rlf	___lwdiv@divisor+1,f
  3184  033E  3EFF               	addlw	-1
  3185  033F  1D03               	skipz
  3186  0340  2B3B               	goto	u48_25
  3187  0341                     i1l1326:
  3188  0341  3001               	movlw	1
  3189  0342  00F4               	movwf	??___lwdiv
  3190  0343  0874               	movf	??___lwdiv,w
  3191  0344  07F7               	addwf	___lwdiv@counter,f
  3192  0345                     i1l1328:
  3193  0345  1FF1               	btfss	___lwdiv@divisor+1,7
  3194  0346  2B48               	goto	u49_21
  3195  0347  2B49               	goto	u49_20
  3196  0348                     u49_21:
  3197  0348  2B3A               	goto	i1l1324
  3198  0349                     u49_20:
  3199  0349                     i1l1330:
  3200  0349  3001               	movlw	1
  3201  034A                     u50_25:
  3202  034A  1003               	clrc
  3203  034B  0DF5               	rlf	___lwdiv@quotient,f
  3204  034C  0DF6               	rlf	___lwdiv@quotient+1,f
  3205  034D  3EFF               	addlw	-1
  3206  034E  1D03               	skipz
  3207  034F  2B4A               	goto	u50_25
  3208  0350  0871               	movf	___lwdiv@divisor+1,w
  3209  0351  0273               	subwf	___lwdiv@dividend+1,w
  3210  0352  1D03               	skipz
  3211  0353  2B56               	goto	u51_25
  3212  0354  0870               	movf	___lwdiv@divisor,w
  3213  0355  0272               	subwf	___lwdiv@dividend,w
  3214  0356                     u51_25:
  3215  0356  1C03               	skipc
  3216  0357  2B59               	goto	u51_21
  3217  0358  2B5A               	goto	u51_20
  3218  0359                     u51_21:
  3219  0359  2B61               	goto	i1l1336
  3220  035A                     u51_20:
  3221  035A                     i1l1332:
  3222  035A  0870               	movf	___lwdiv@divisor,w
  3223  035B  02F2               	subwf	___lwdiv@dividend,f
  3224  035C  0871               	movf	___lwdiv@divisor+1,w
  3225  035D  1C03               	skipc
  3226  035E  03F3               	decf	___lwdiv@dividend+1,f
  3227  035F  02F3               	subwf	___lwdiv@dividend+1,f
  3228  0360                     i1l1334:
  3229  0360  1475               	bsf	___lwdiv@quotient,0
  3230  0361                     i1l1336:
  3231  0361  3001               	movlw	1
  3232  0362                     u52_25:
  3233  0362  1003               	clrc
  3234  0363  0CF1               	rrf	___lwdiv@divisor+1,f
  3235  0364  0CF0               	rrf	___lwdiv@divisor,f
  3236  0365  3EFF               	addlw	-1
  3237  0366  1D03               	skipz
  3238  0367  2B62               	goto	u52_25
  3239  0368                     i1l1338:
  3240  0368  3001               	movlw	1
  3241  0369  02F7               	subwf	___lwdiv@counter,f
  3242  036A  1D03               	btfss	3,2
  3243  036B  2B6D               	goto	u53_21
  3244  036C  2B6E               	goto	u53_20
  3245  036D                     u53_21:
  3246  036D  2B49               	goto	i1l1330
  3247  036E                     u53_20:
  3248  036E                     i1l1340:
  3249  036E  0876               	movf	___lwdiv@quotient+1,w
  3250  036F  00F1               	movwf	?___lwdiv+1
  3251  0370  0875               	movf	___lwdiv@quotient,w
  3252  0371  00F0               	movwf	?___lwdiv
  3253  0372                     i1l600:
  3254  0372  0008               	return
  3255  0373                     __end_of___lwdiv:
  3256  007E                     btemp	set	126	;btemp
  3257  007E                     wtemp0	set	126
  3258                           
  3259                           	psect	idloc
  3260                           
  3261                           ;Config register IDLOC0 @ 0x2000
  3262                           ;	unspecified, using default values
  3263  2000                     	org	8192
  3264  2000  3FFF               	dw	16383
  3265                           
  3266                           ;Config register IDLOC1 @ 0x2001
  3267                           ;	unspecified, using default values
  3268  2001                     	org	8193
  3269  2001  3FFF               	dw	16383
  3270                           
  3271                           ;Config register IDLOC2 @ 0x2002
  3272                           ;	unspecified, using default values
  3273  2002                     	org	8194
  3274  2002  3FFF               	dw	16383
  3275                           
  3276                           ;Config register IDLOC3 @ 0x2003
  3277                           ;	unspecified, using default values
  3278  2003                     	org	8195
  3279  2003  3FFF               	dw	16383
  3280                           
  3281                           	psect	config
  3282                           
  3283                           ;Config register CONFIG1 @ 0x2007
  3284                           ;	Oscillator Selection bits
  3285                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3286                           ;	Watchdog Timer Enable bit
  3287                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3288                           ;	Power-up Timer Enable bit
  3289                           ;	PWRTE = OFF, PWRT disabled
  3290                           ;	RE3/MCLR pin function select bit
  3291                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3292                           ;	Code Protection bit
  3293                           ;	CP = OFF, Program memory code protection is disabled
  3294                           ;	Data Code Protection bit
  3295                           ;	CPD = OFF, Data memory code protection is disabled
  3296                           ;	Brown Out Reset Selection bits
  3297                           ;	BOREN = OFF, BOR disabled
  3298                           ;	Internal External Switchover bit
  3299                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3300                           ;	Fail-Safe Clock Monitor Enabled bit
  3301                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3302                           ;	Low Voltage Programming Enable bit
  3303                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3304                           ;	In-Circuit Debugger Mode bit
  3305                           ;	DEBUG = 0x1, unprogrammed default
  3306  2007                     	org	8199
  3307  2007  20D4               	dw	8404
  3308                           
  3309                           ;Config register CONFIG2 @ 0x2008
  3310                           ;	Brown-out Reset Selection bit
  3311                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3312                           ;	Flash Program Memory Self Write Enable bits
  3313                           ;	WRT = OFF, Write protection off
  3314  2008                     	org	8200
  3315  2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    10
    Data        3
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     27      59
    BANK1            80      4       4
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> HS_flag_str(BANK0[10]), spst_str(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 10
		 -> HS_flag_str(BANK0[10]), spst_str(BANK0[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    _isr->_sprintf

Critical Paths under _main in BANK1

    _main->_Lcd_Set_Cursor

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1706
                                             26 BANK0      1     1      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _initOscFreq
                           _initTmr0
                              _setup
                  _usartInitTransmit
 ---------------------------------------------------------------------------------
 (1) _usartInitTransmit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTmr0                                             2     0      2      98
                                             20 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initOscFreq                                          3     3      0      22
                                             20 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     492
                                             25 BANK0      1     1      0
                                              0 BANK1      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                             21 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     815
                                             23 BANK0      3     2      1
                                              0 BANK1      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                             23 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     155
                                             21 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  7     7      0    1320
                                             13 BANK0      7     7      0
                            _sprintf
                          _tmr0Reset
 ---------------------------------------------------------------------------------
 (5) _tmr0Reset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    18      3    1320
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _initOscFreq
   _initTmr0
   _setup
   _usartInitTransmit

 _isr (ROOT)
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _tmr0Reset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      4       4       7        5.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1B      3B       5       73.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4D      12        0.0%
ABS                  0      0      4D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Fri Sep 23 22:14:51 2022

                        l7 03AE                          pc 0002                         l12 03AF  
                       l23 0268                         l33 0272                         fsr 0004  
                      l202 03EC                        l131 04C7                        l208 0451  
                      l155 048B                        l180 0469                        l181 046A  
                      l182 0470                        l184 0471                        l176 045B  
                      l177 045C                        l178 0462                        l179 0463  
                      l187 04A4                        l196 0209                        l199 032E  
                      _RB3 0033                        _RB4 0034                        _RB5 0035  
                      _RB6 0036                        _RB7 0037                        u800 0459  
                      u801 0458                        u810 0460                        u811 045F  
                      u820 0467                        u900 02AD                        u821 0466  
                      u901 02AC                        u830 046E                        u910 02C4  
                      u831 046D                        u911 02C3                        u850 01A3  
                      u851 01A2                        u845 03C1                        u870 01D9  
                      u871 01D8                        u927 03D3                        u865 01B1  
                      u937 03E6                        u890 0451                        u947 02E4  
                      u891 0450                        u957 02F3                        u885 01E7  
                      u967 049D                        _isr 011C                        fsr0 0004  
                      indf 0000                       l1400 022C                       l1410 026E  
                     l1402 0233                       l1404 023A                       l1500 0488  
                     l1408 023F                       l1370 037E                       l1372 0385  
                     l1380 0398                       l1374 038C                       l1366 0376  
                     l1390 020B                       l1720 046E                       l1712 0455  
                     l1800 042D                       l1376 0391                       l1368 0377  
                     l1392 0210                       l1714 0459                       l1730 04A1  
                     l1722 048F                       l1802 043C                       l1394 0217  
                     l1490 04C6                       l1810 027E                       l1716 0460  
                     l1724 0490                       l1740 03CF                       l1732 03B3  
                     l1804 0444                       l1396 021E                       l1388 020A  
                     l1492 0472                       l1820 02A5                       l1812 0289  
                     l1718 0467                       l1726 0496                       l1750 03E9  
                     l1742 03D6                       l1734 03BD                       l1398 0225  
                     l1486 04B8                       l1494 0480                       l1830 02CE  
                     l1822 02AD                       l1814 028E                       l1806 0273  
                     l1728 0499                       l1760 02FD                       l1752 02D8  
                     l1744 03D9                       l1736 03BE                       l1488 04C5  
                     l1496 0484                       l1824 02B7                       l1816 0293  
                     l1808 0278                       l1770 0316                       l1762 02FE  
                     l1754 02DE                       l1746 03DF                       l1738 03CC  
                     l1930 0263                       l1498 0485                       l1826 02BE  
                     l1818 029F                       l1772 031C                       l1764 0304  
                     l1756 02E9                       l1780 01A3                       l1748 03E2  
                     l1932 03A0                       l1828 02C4                       l1774 0322  
                     l1766 030A                       l1758 02F7                       l1790 01D9  
                     l1782 01BC                       l1776 0328                       l1768 0310  
                     l1792 01F2                       l1784 01C5                       l1928 0249  
                     l1794 01FB                       l1786 01CB                       l1778 019E  
                     l1796 0201                       l1788 01D4                       l1798 042A  
                     ?_isr 0070                       STR_1 04B5                       STR_2 04B5  
                     _T0IF 005A                       i1l36 04D5                       _RCIF 0065  
                     _TMR0 0001                       _Fosc 005A          ?_Lcd_Write_String 0070  
                     _cont 0028                       _main 0273                       btemp 007E  
                     _spst 0025                       start 0012         ??_Lcd_Write_String 0056  
          __end_of_Lcd_Cmd 04A5               ?_initOscFreq 0070                      ??_isr 004A  
                    ?_main 0070                      _ANSEL 0188            __end_of___lwdiv 0373  
                    i1l117 0190                      i1l324 011B                      i1l600 0372  
          __end_of___lwmod 0427                      i1l610 0426                      _RCREG 001A  
                    _SPBRG 0099                      u50_25 034A                      u51_20 035A  
                    u51_21 0359                      _PORTA 0005                      _PORTB 0006  
                    _PORTD 0008                      u51_25 0356                      u60_20 0042  
                    u60_21 0041                      u52_25 0362                      u53_20 036E  
                    u61_20 007C                      u53_21 036D                      u61_21 007B  
                    u54_20 03F3                      u62_20 00A2                      u54_21 03F2  
                    u62_21 00A1                      u62_25 009E                      u47_20 0337  
                    u63_20 00AD                      u47_21 0336                      u63_21 00AC  
                    u55_25 03F7                      u56_20 0405                      u64_20 00B3  
                    u72_20 0120                      u56_21 0404                      u64_21 00B2  
                    u72_21 011F                      u48_25 033B                      u49_20 0349  
                    u57_20 040F                      u65_20 0105                      u73_20 012A  
                    u49_21 0348                      u57_21 040E                      u65_21 0104  
                    u73_21 0129                      _TRISA 0085                      _TRISB 0086  
                    u57_25 040B                      u66_20 0117                      u74_20 0130  
                    u66_21 0116                      u74_21 012E                      u58_25 0416  
                    u59_20 0422                      u75_20 0131                      u59_21 0421  
                    u76_20 0140                      u76_21 013F                      u77_20 0166  
                    u77_21 0165                      _TXREG 0019            __end_of_dpowers 04B5  
                    _frerr 0021                      _milis 0027                      _setup 04B8  
                    _overr 0020                      _pulse 0026                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 011C  
         __end_of_Lcd_Init 032F           __end_of_Lcd_Port 0472            __initialization 0015  
             __end_of_main 02D8                     ??_main 0057                     ?_setup 0070  
                   _ANSELH 0189                     i1l1320 0331                     i1l1330 0349  
                   i1l1322 0337                     i1l1332 035A                     i1l1324 033A  
                   i1l1340 036E                     i1l1420 04D0                     i1l1334 0360  
                   i1l1326 0341                     i1l1318 032F                     i1l1350 03FD  
                   i1l1430 0049                     i1l1422 04D1                     i1l1336 0361  
                   i1l1328 0345                     i1l1360 041C                     i1l1352 0401  
                   i1l1344 03ED                     i1l1440 0074                     i1l1432 004E  
                   i1l1424 0037                     i1l1338 0368                     i1l1354 0405  
                   i1l1346 03F3                     i1l1362 0422                     i1l1442 0078  
                   i1l1426 003C                     i1l1356 040F                     i1l1348 03F6  
                   i1l1460 00AD                     i1l1444 007C                     i1l1436 004F  
                   i1l1428 0042                     i1l1358 0415                     i1l1470 00F1  
                   i1l1462 00B3                     i1l1454 0087                     i1l1446 0080  
                   i1l1438 006C                     i1l1472 00F8                     i1l1464 00BA  
                   i1l1448 0085                     i1l1560 012A                     i1l1474 00FC  
                   i1l1466 00BE                     i1l1458 00A3                     i1l1570 0148  
                   i1l1562 0134                     i1l1468 00C3                     i1l1476 0105  
                   i1l1580 016E                     i1l1572 014C                     i1l1564 0135  
                   i1l1556 011C                     i1l1478 0117                     i1l1582 0173  
                   i1l1574 015D                     i1l1558 0120                     i1l1566 013A  
                   i1l1584 0178                     i1l1576 0160                     i1l1568 0140  
                   i1l1586 017C                     i1l1578 0166                     i1l1588 018D  
                   i1l1934 0061                  ??_Lcd_Cmd 0052                     _SPBRGH 009A  
                   _PS_val 0058                  ??___lwdiv 0074                  ??___lwmod 007C  
         __end_of_initTmr0 0273                     saved_w 007E                  ??_sprintf 0040  
          Lcd_Set_Cursor@a 00A0            Lcd_Set_Cursor@b 0054            Lcd_Set_Cursor@y 00A2  
          Lcd_Set_Cursor@z 00A1    __end_of__initialization 0030             __pcstackCOMMON 0070  
             __pidataBANK0 04D6              __end_of_setup 04C8             _Lcd_Set_Cursor 019B  
           _OPTION_REGbits 0081                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0051                 __pbssBANK0 0020                 __pmaintext 0273  
               __pintentry 0004     __end_of_Lcd_Set_Cursor 020A                 ??_Lcd_Init 0054  
               ??_Lcd_Port 0051                    _HS_flag 0024                 __stringtab 04A5  
           _Lcd_Write_Char 03B0                    _Lcd_Cmd 048C                  ?_initTmr0 0051  
                  ___lwdiv 032F                    ___lwmod 03ED            ?_Lcd_Set_Cursor 0054  
                  __ptext1 0472                    __ptext2 04B8                    __ptext3 020A  
                  __ptext4 0373                    __ptext5 0427                    __ptext6 03B0  
                  __ptext7 019B                    __ptext8 02D8                    __ptext9 048C  
                  _dpowers 04AB                    _sprintf 0034                    clrloop0 04C9  
        __end_of_tmr0Reset 04D6     __end_of_Lcd_Write_Char 03ED       end_of_initialization 0030  
               ??_initTmr0 0053                  _RCSTAbits 0018                  Lcd_Port@a 0051  
                _PORTAbits 0005                  _PORTBbits 0006                  _PORTCbits 0007  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 00A2          Lcd_Write_String@i 00A0  
                _TXSTAbits 0098           _Lcd_Write_String 0427                _BAUDCTLbits 0187  
      start_initialization 0015                __end_of_isr 019B          _usartInitTransmit 0472  
       ?_usartInitTransmit 0070        ??_usartInitTransmit 0051              ??_initOscFreq 0051  
              __pdataBANK0 0058            Lcd_Write_Char@a 0055            Lcd_Write_Char@y 0054  
__end_of_usartInitTransmit 048C                  ___latbits 0002              __pcstackBANK0 003D  
            __pcstackBANK1 00A0                   ?_Lcd_Cmd 0070                sprintf@flag 0044  
              sprintf@prec 0045           ___lwdiv@dividend 0072           ??_Lcd_Set_Cursor 0055  
                 ?___lwdiv 0070                   ?___lwmod 0078                  __pstrings 04A5  
      __end_of_initOscFreq 03B0           ___lwdiv@quotient 0075                   ?_sprintf 003D  
        interrupt_function 0004                  _tmr0Reset 04D0                  clear_ram0 04C8  
                 _PIE1bits 008C                   Lcd_Cmd@a 0053                   _PIR1bits 000C  
              __stringbase 04AA           ??_Lcd_Write_Char 0052                  _spst_flag 0022  
                 _Lcd_Init 02D8                   _Lcd_Port 0452   __end_of_Lcd_Write_String 0452  
               ?_tmr0Reset 0070                _initOscFreq 0373         __end_of__stringtab 04AB  
               sprintf@val 0046            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 0452                   __ptext11 011C                   __ptext12 04D0  
                 __ptext13 0034                   __ptext14 03ED                   __ptext15 032F  
                 _initTmr0 020A          initTmr0@prescaler 0051                   _spst_str 0029  
               _INTCONbits 000B         Lcd_Write_Char@temp 0053                   intlevel1 0000  
                sprintf@ap 0043                  sprintf@sp 0048           ___lwmod@dividend 007A  
              ??_tmr0Reset 0070                  stringcode 04A5                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 00A3            initOscFreq@freq 0053                   sprintf@c 0049  
                 sprintf@f 003D                _sensor_flag 0023            ___lwmod@divisor 0078  
          ___lwmod@counter 007D                   stringdir 04A5                   stringtab 04A5  
              _HS_flag_str 0033  
