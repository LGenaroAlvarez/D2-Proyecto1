

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Sep 14 19:00:01 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369                           
   370                           	psect	idataCOMMON
   371  0156                     __pidataCOMMON:
   372                           
   373                           ;initializer for _PS_val
   374  0156  3410               	retlw	16
   375  0157  3400               	retlw	0
   376                           
   377                           ;initializer for _Fosc
   378  0158  3401               	retlw	1
   379  0001                     _TMR0	set	1
   380  0007                     _PORTCbits	set	7
   381  0008                     _PORTD	set	8
   382  0007                     _PORTC	set	7
   383  0006                     _PORTB	set	6
   384  000B                     _INTCONbits	set	11
   385  0006                     _PORTBbits	set	6
   386  0058                     _RBIF	set	88
   387  005A                     _T0IF	set	90
   388  008F                     _OSCCONbits	set	143
   389  0088                     _TRISD	set	136
   390  0087                     _TRISC	set	135
   391  0096                     _IOCBbits	set	150
   392  0095                     _WPUB	set	149
   393  0081                     _OPTION_REGbits	set	129
   394  0086                     _TRISB	set	134
   395  0189                     _ANSELH	set	393
   396  0188                     _ANSEL	set	392
   397                           
   398                           	psect	cinit
   399  000F                     start_initialization:	
   400                           ; #config settings
   401                           
   402  000F                     __initialization:
   403                           
   404                           ; Initialize objects allocated to COMMON
   405  000F  120A  118A  2156  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   406  0014  00F8               	movwf	__pdataCOMMON& (0+127)
   407  0015  120A  118A  2157  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   408  001A  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   409  001B  120A  118A  2158  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   410  0020  00FA               	movwf	(__pdataCOMMON+2)& (0+127)
   411                           
   412                           ; Clear objects allocated to COMMON
   413  0021  01F0               	clrf	__pbssCOMMON& (0+127)
   414  0022  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   415  0023  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   416  0024  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   417  0025                     end_of_initialization:	
   418                           ;End of C runtime variable initialization code
   419                           
   420  0025                     __end_of__initialization:
   421  0025  0183               	clrf	3
   422  0026  120A  118A  2903   	ljmp	_main	;jump to C main() function
   423                           
   424                           	psect	bssCOMMON
   425  0070                     __pbssCOMMON:
   426  0070                     _spst:
   427  0070                     	ds	1
   428  0071                     _pulse:
   429  0071                     	ds	1
   430  0072                     _milis:
   431  0072                     	ds	1
   432  0073                     _cont:
   433  0073                     	ds	1
   434                           
   435                           	psect	dataCOMMON
   436  0078                     __pdataCOMMON:
   437  0078                     _PS_val:
   438  0078                     	ds	2
   439  007A                     _Fosc:
   440  007A                     	ds	1
   441                           
   442                           	psect	cstackCOMMON
   443  0074                     __pcstackCOMMON:
   444  0074                     ?_tmr0Reset:
   445  0074                     ??_tmr0Reset:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0074                     ?_setup:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0074                     ?_initOscFreq:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0074                     ?_isr:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0074                     ??_isr:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0074                     ?_main:	
   461                           ; 1 bytes @ 0x0
   462                           
   463                           
   464                           ; 1 bytes @ 0x0
   465  0074                     	ds	3
   466  0077                     ??_setup:
   467  0077                     ??_initTmr0:	
   468                           ; 1 bytes @ 0x3
   469                           
   470  0077                     ?_stepSet:	
   471                           ; 1 bytes @ 0x3
   472                           
   473  0077                     stepSet@set_pulse:	
   474                           ; 1 bytes @ 0x3
   475                           
   476  0077                     initOscFreq@freq:	
   477                           ; 1 bytes @ 0x3
   478                           
   479                           
   480                           ; 1 bytes @ 0x3
   481  0077                     	ds	1
   482  0078                     ??_stepSet:
   483                           
   484                           	psect	cstackBANK0
   485  0020                     __pcstackBANK0:	
   486                           ; 1 bytes @ 0x4
   487                           
   488  0020                     ??_initOscFreq:
   489  0020                     ?_initTmr0:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0020                     stepSet@push:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0020                     initTmr0@prescaler:	
   496                           ; 1 bytes @ 0x0
   497                           
   498                           
   499                           ; 2 bytes @ 0x0
   500  0020                     	ds	2
   501  0022                     ??_main:
   502                           
   503                           ; 1 bytes @ 0x2
   504  0022                     	ds	1
   505                           
   506                           	psect	maintext
   507  0103                     __pmaintext:	
   508 ;;
   509 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   510 ;;
   511 ;; *************** function _main *****************
   512 ;; Defined at:
   513 ;;		line 72 in file "usart-main.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : B00/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   527 ;;      Params:         0       0       0       0       0
   528 ;;      Locals:         0       0       0       0       0
   529 ;;      Temps:          0       1       0       0       0
   530 ;;      Totals:         0       1       0       0       0
   531 ;;Total ram usage:        1 bytes
   532 ;; Hardware stack levels required when called: 3
   533 ;; This function calls:
   534 ;;		_initOscFreq
   535 ;;		_initTmr0
   536 ;;		_setup
   537 ;;		_stepSet
   538 ;; This function is called by:
   539 ;;		Startup code after reset
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543  0103                     _main:	
   544                           ;psect for function _main
   545                           
   546  0103                     l1028:	
   547                           ;incstack = 0
   548                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   549                           
   550                           
   551                           ;usart-main.c: 73:     setup();
   552  0103  120A  118A  2129  120A  118A  	fcall	_setup
   553  0108                     l1030:
   554                           
   555                           ;usart-main.c: 74:     initOscFreq(Fosc);
   556  0108  3001               	movlw	1
   557  0109  120A  118A  2092  120A  118A  	fcall	_initOscFreq
   558  010E                     l1032:
   559                           
   560                           ;usart-main.c: 75:     initTmr0(PS_val);
   561  010E  3010               	movlw	16
   562  010F  1283               	bcf	3,5	;RP0=0, select bank0
   563  0110  1303               	bcf	3,6	;RP1=0, select bank0
   564  0111  00A0               	movwf	initTmr0@prescaler
   565  0112  3000               	movlw	0
   566  0113  00A1               	movwf	initTmr0@prescaler+1
   567  0114  120A  118A  2029  120A  118A  	fcall	_initTmr0
   568  0119                     l69:	
   569                           ;usart-main.c: 76:     while(1){
   570                           
   571                           
   572                           ;usart-main.c: 77:         stepSet(spst, pulse);
   573  0119  0871               	movf	_pulse,w
   574  011A  1283               	bcf	3,5	;RP0=0, select bank0
   575  011B  1303               	bcf	3,6	;RP1=0, select bank0
   576  011C  00A2               	movwf	??_main
   577  011D  0822               	movf	??_main,w
   578  011E  00F7               	movwf	stepSet@set_pulse
   579  011F  0870               	movf	_spst,w
   580  0120  120A  118A  2140  120A  118A  	fcall	_stepSet
   581  0125  2919               	goto	l69
   582  0126  120A  118A  280C   	ljmp	start
   583  0129                     __end_of_main:
   584                           
   585                           	psect	text1
   586  0140                     __ptext1:	
   587 ;; *************** function _stepSet *****************
   588 ;; Defined at:
   589 ;;		line 105 in file "usart-main.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;  push            1    wreg     unsigned char 
   592 ;;  set_pulse       1    3[COMMON] unsigned char 
   593 ;; Auto vars:     Size  Location     Type
   594 ;;  push            1    0[BANK0 ] unsigned char 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, status,2, status,0
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   604 ;;      Params:         1       0       0       0       0
   605 ;;      Locals:         0       1       0       0       0
   606 ;;      Temps:          0       0       0       0       0
   607 ;;      Totals:         1       1       0       0       0
   608 ;;Total ram usage:        2 bytes
   609 ;; Hardware stack levels used: 1
   610 ;; Hardware stack levels required when called: 2
   611 ;; This function calls:
   612 ;;		Nothing
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618  0140                     _stepSet:	
   619                           ;psect for function _stepSet
   620                           
   621                           
   622                           ;incstack = 0
   623                           ; Regs used in _stepSet: [wreg+status,2+status,0]
   624                           ;stepSet@push stored from wreg
   625  0140  1283               	bcf	3,5	;RP0=0, select bank0
   626  0141  1303               	bcf	3,6	;RP1=0, select bank0
   627  0142  00A0               	movwf	stepSet@push
   628  0143                     l1024:
   629                           
   630                           ;usart-main.c: 106:     if (push == 1){
   631  0143  0320               	decf	stepSet@push,w
   632  0144  1D03               	btfss	3,2
   633  0145  2947               	goto	u91
   634  0146  2948               	goto	u90
   635  0147                     u91:
   636  0147  294E               	goto	l78
   637  0148                     u90:
   638  0148                     l1026:
   639                           
   640                           ;usart-main.c: 107:         PORTCbits.RC0 = set_pulse;
   641  0148  0C77               	rrf	stepSet@set_pulse,w
   642  0149  1C03               	skipc
   643  014A  1007               	bcf	7,0	;volatile
   644  014B  1803               	skipnc
   645  014C  1407               	bsf	7,0	;volatile
   646                           
   647                           ;usart-main.c: 108:     }
   648  014D  294F               	goto	l80
   649  014E                     l78:	
   650                           ;usart-main.c: 109:     else {
   651                           
   652                           
   653                           ;usart-main.c: 110:         PORTCbits.RC0 = 0;
   654  014E  1007               	bcf	7,0	;volatile
   655  014F                     l80:
   656  014F  0008               	return
   657  0150                     __end_of_stepSet:
   658                           
   659                           	psect	text2
   660  0129                     __ptext2:	
   661 ;; *************** function _setup *****************
   662 ;; Defined at:
   663 ;;		line 82 in file "usart-main.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;		None
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      void 
   670 ;; Registers used:
   671 ;;		wreg, status,2
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   677 ;;      Params:         0       0       0       0       0
   678 ;;      Locals:         0       0       0       0       0
   679 ;;      Temps:          0       0       0       0       0
   680 ;;      Totals:         0       0       0       0       0
   681 ;;Total ram usage:        0 bytes
   682 ;; Hardware stack levels used: 1
   683 ;; Hardware stack levels required when called: 2
   684 ;; This function calls:
   685 ;;		Nothing
   686 ;; This function is called by:
   687 ;;		_main
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691  0129                     _setup:	
   692                           ;psect for function _setup
   693                           
   694  0129                     l712:	
   695                           ;incstack = 0
   696                           ; Regs used in _setup: [wreg+status,2]
   697                           
   698                           
   699                           ;usart-main.c: 84:     ANSEL = 0;
   700  0129  1683               	bsf	3,5	;RP0=1, select bank3
   701  012A  1703               	bsf	3,6	;RP1=1, select bank3
   702  012B  0188               	clrf	8	;volatile
   703                           
   704                           ;usart-main.c: 85:     ANSELH = 0;
   705  012C  0189               	clrf	9	;volatile
   706  012D                     l714:
   707                           
   708                           ;usart-main.c: 88:     TRISB = 0b00000001;
   709  012D  3001               	movlw	1
   710  012E  1683               	bsf	3,5	;RP0=1, select bank1
   711  012F  1303               	bcf	3,6	;RP1=0, select bank1
   712  0130  0086               	movwf	6	;volatile
   713  0131                     l716:
   714                           
   715                           ;usart-main.c: 89:     OPTION_REGbits.nRBPU = 0;
   716  0131  1381               	bcf	1,7	;volatile
   717  0132                     l718:
   718                           
   719                           ;usart-main.c: 90:     WPUB = 0b00000001;
   720  0132  3001               	movlw	1
   721  0133  0095               	movwf	21	;volatile
   722  0134                     l720:
   723                           
   724                           ;usart-main.c: 91:     IOCBbits.IOCB0 = 1;
   725  0134  1416               	bsf	22,0	;volatile
   726                           
   727                           ;usart-main.c: 93:     TRISC = 0;
   728  0135  0187               	clrf	7	;volatile
   729                           
   730                           ;usart-main.c: 94:     TRISD = 0;
   731  0136  0188               	clrf	8	;volatile
   732                           
   733                           ;usart-main.c: 95:     PORTB = 0;
   734  0137  1283               	bcf	3,5	;RP0=0, select bank0
   735  0138  1303               	bcf	3,6	;RP1=0, select bank0
   736  0139  0186               	clrf	6	;volatile
   737                           
   738                           ;usart-main.c: 96:     PORTC = 0;
   739  013A  0187               	clrf	7	;volatile
   740                           
   741                           ;usart-main.c: 97:     PORTD = 0;
   742  013B  0188               	clrf	8	;volatile
   743  013C                     l722:
   744                           
   745                           ;usart-main.c: 100:     INTCONbits.GIE = 1;
   746  013C  178B               	bsf	11,7	;volatile
   747  013D                     l724:
   748                           
   749                           ;usart-main.c: 101:     INTCONbits.RBIE = 1;
   750  013D  158B               	bsf	11,3	;volatile
   751  013E                     l726:
   752                           
   753                           ;usart-main.c: 102:     INTCONbits.RBIF = 0;
   754  013E  100B               	bcf	11,0	;volatile
   755  013F                     l75:
   756  013F  0008               	return
   757  0140                     __end_of_setup:
   758                           
   759                           	psect	text3
   760  0029                     __ptext3:	
   761 ;; *************** function _initTmr0 *****************
   762 ;; Defined at:
   763 ;;		line 14 in file "tmr0_config.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  prescaler       2    0[BANK0 ] int 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;		None
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   777 ;;      Params:         0       2       0       0       0
   778 ;;      Locals:         0       0       0       0       0
   779 ;;      Temps:          0       0       0       0       0
   780 ;;      Totals:         0       2       0       0       0
   781 ;;Total ram usage:        2 bytes
   782 ;; Hardware stack levels used: 1
   783 ;; Hardware stack levels required when called: 2
   784 ;; This function calls:
   785 ;;		Nothing
   786 ;; This function is called by:
   787 ;;		_main
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791  0029                     _initTmr0:	
   792                           ;psect for function _initTmr0
   793                           
   794  0029                     l992:	
   795                           ;incstack = 0
   796                           ; Regs used in _initTmr0: [wreg-fsr0h+status,2+status,0]
   797                           
   798                           
   799                           ;tmr0_config.c: 15:     switch(prescaler){
   800  0029  285E               	goto	l1012
   801  002A                     l994:
   802                           
   803                           ;tmr0_config.c: 19:             OPTION_REGbits.PS = 0b000;
   804  002A  30F8               	movlw	-8
   805  002B  1683               	bsf	3,5	;RP0=1, select bank1
   806  002C  1303               	bcf	3,6	;RP1=0, select bank1
   807  002D  0581               	andwf	1,f	;volatile
   808                           
   809                           ;tmr0_config.c: 20:             break;
   810  002E  2887               	goto	l103
   811  002F                     l996:
   812                           
   813                           ;tmr0_config.c: 22:             OPTION_REGbits.PS = 0b001;
   814  002F  1683               	bsf	3,5	;RP0=1, select bank1
   815  0030  1303               	bcf	3,6	;RP1=0, select bank1
   816  0031  0801               	movf	1,w	;volatile
   817  0032  39F8               	andlw	-8
   818  0033  3801               	iorlw	1
   819  0034  0081               	movwf	1	;volatile
   820                           
   821                           ;tmr0_config.c: 23:             break;
   822  0035  2887               	goto	l103
   823  0036                     l998:
   824                           
   825                           ;tmr0_config.c: 25:             OPTION_REGbits.PS = 0b010;
   826  0036  1683               	bsf	3,5	;RP0=1, select bank1
   827  0037  1303               	bcf	3,6	;RP1=0, select bank1
   828  0038  0801               	movf	1,w	;volatile
   829  0039  39F8               	andlw	-8
   830  003A  3802               	iorlw	2
   831  003B  0081               	movwf	1	;volatile
   832                           
   833                           ;tmr0_config.c: 26:             break;
   834  003C  2887               	goto	l103
   835  003D                     l1000:
   836                           
   837                           ;tmr0_config.c: 28:             OPTION_REGbits.PS = 0b011;
   838  003D  1683               	bsf	3,5	;RP0=1, select bank1
   839  003E  1303               	bcf	3,6	;RP1=0, select bank1
   840  003F  0801               	movf	1,w	;volatile
   841  0040  39F8               	andlw	-8
   842  0041  3803               	iorlw	3
   843  0042  0081               	movwf	1	;volatile
   844                           
   845                           ;tmr0_config.c: 29:             break;
   846  0043  2887               	goto	l103
   847  0044                     l1002:
   848                           
   849                           ;tmr0_config.c: 31:             OPTION_REGbits.PS = 0b100;
   850  0044  1683               	bsf	3,5	;RP0=1, select bank1
   851  0045  1303               	bcf	3,6	;RP1=0, select bank1
   852  0046  0801               	movf	1,w	;volatile
   853  0047  39F8               	andlw	-8
   854  0048  3804               	iorlw	4
   855  0049  0081               	movwf	1	;volatile
   856                           
   857                           ;tmr0_config.c: 32:             break;
   858  004A  2887               	goto	l103
   859  004B                     l1004:
   860                           
   861                           ;tmr0_config.c: 34:             OPTION_REGbits.PS = 0b101;
   862  004B  1683               	bsf	3,5	;RP0=1, select bank1
   863  004C  1303               	bcf	3,6	;RP1=0, select bank1
   864  004D  0801               	movf	1,w	;volatile
   865  004E  39F8               	andlw	-8
   866  004F  3805               	iorlw	5
   867  0050  0081               	movwf	1	;volatile
   868                           
   869                           ;tmr0_config.c: 35:             break;
   870  0051  2887               	goto	l103
   871  0052                     l1006:
   872                           
   873                           ;tmr0_config.c: 37:             OPTION_REGbits.PS = 0b110;
   874  0052  1683               	bsf	3,5	;RP0=1, select bank1
   875  0053  1303               	bcf	3,6	;RP1=0, select bank1
   876  0054  0801               	movf	1,w	;volatile
   877  0055  39F8               	andlw	-8
   878  0056  3806               	iorlw	6
   879  0057  0081               	movwf	1	;volatile
   880                           
   881                           ;tmr0_config.c: 38:             break;
   882  0058  2887               	goto	l103
   883  0059                     l1008:
   884                           
   885                           ;tmr0_config.c: 40:             OPTION_REGbits.PS = 0b111;
   886  0059  3007               	movlw	7
   887  005A  1683               	bsf	3,5	;RP0=1, select bank1
   888  005B  1303               	bcf	3,6	;RP1=0, select bank1
   889  005C  0481               	iorwf	1,f	;volatile
   890                           
   891                           ;tmr0_config.c: 41:             break;
   892  005D  2887               	goto	l103
   893  005E                     l1012:
   894                           
   895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
   896                           ; Switch size 1, requested type "simple"
   897                           ; Number of cases is 2, Range of values is 0 to 1
   898                           ; switch strategies available:
   899                           ; Name         Instructions Cycles
   900                           ; simple_byte            7     4 (average)
   901                           ; direct_byte           14     8 (fixed)
   902                           ; jumptable            260     6 (fixed)
   903                           ;	Chosen strategy is simple_byte
   904  005E  1283               	bcf	3,5	;RP0=0, select bank0
   905  005F  1303               	bcf	3,6	;RP1=0, select bank0
   906  0060  0821               	movf	initTmr0@prescaler+1,w
   907  0061  3A00               	xorlw	0	; case 0
   908  0062  1903               	skipnz
   909  0063  2868               	goto	l1094
   910  0064  3A01               	xorlw	1	; case 1
   911  0065  1903               	skipnz
   912  0066  2882               	goto	l1096
   913  0067  2887               	goto	l103
   914  0068                     l1094:
   915                           
   916                           ; Switch size 1, requested type "simple"
   917                           ; Number of cases is 8, Range of values is 0 to 128
   918                           ; switch strategies available:
   919                           ; Name         Instructions Cycles
   920                           ; simple_byte           25    13 (average)
   921                           ; jumptable            260     6 (fixed)
   922                           ;	Chosen strategy is simple_byte
   923  0068  0820               	movf	initTmr0@prescaler,w
   924  0069  3A00               	xorlw	0	; case 0
   925  006A  1903               	skipnz
   926  006B  2887               	goto	l103
   927  006C  3A02               	xorlw	2	; case 2
   928  006D  1903               	skipnz
   929  006E  282A               	goto	l994
   930  006F  3A06               	xorlw	6	; case 4
   931  0070  1903               	skipnz
   932  0071  282F               	goto	l996
   933  0072  3A0C               	xorlw	12	; case 8
   934  0073  1903               	skipnz
   935  0074  2836               	goto	l998
   936  0075  3A18               	xorlw	24	; case 16
   937  0076  1903               	skipnz
   938  0077  283D               	goto	l1000
   939  0078  3A30               	xorlw	48	; case 32
   940  0079  1903               	skipnz
   941  007A  2844               	goto	l1002
   942  007B  3A60               	xorlw	96	; case 64
   943  007C  1903               	skipnz
   944  007D  284B               	goto	l1004
   945  007E  3AC0               	xorlw	192	; case 128
   946  007F  1903               	skipnz
   947  0080  2852               	goto	l1006
   948  0081  2887               	goto	l103
   949  0082                     l1096:
   950                           
   951                           ; Switch size 1, requested type "simple"
   952                           ; Number of cases is 1, Range of values is 0 to 0
   953                           ; switch strategies available:
   954                           ; Name         Instructions Cycles
   955                           ; simple_byte            4     3 (average)
   956                           ; direct_byte           11     8 (fixed)
   957                           ; jumptable            260     6 (fixed)
   958                           ;	Chosen strategy is simple_byte
   959  0082  0820               	movf	initTmr0@prescaler,w
   960  0083  3A00               	xorlw	0	; case 0
   961  0084  1903               	skipnz
   962  0085  2859               	goto	l1008
   963  0086  2887               	goto	l103
   964  0087                     l103:
   965                           
   966                           ;tmr0_config.c: 46:     OPTION_REGbits.T0CS = 0;
   967  0087  1683               	bsf	3,5	;RP0=1, select bank1
   968  0088  1303               	bcf	3,6	;RP1=0, select bank1
   969  0089  1281               	bcf	1,5	;volatile
   970                           
   971                           ;tmr0_config.c: 47:     OPTION_REGbits.PSA = 0;
   972  008A  1181               	bcf	1,3	;volatile
   973                           
   974                           ;tmr0_config.c: 48:     INTCONbits.T0IE = 1;
   975  008B  168B               	bsf	11,5	;volatile
   976                           
   977                           ;tmr0_config.c: 49:     INTCONbits.T0IF = 0;
   978  008C  110B               	bcf	11,2	;volatile
   979  008D                     l1014:
   980                           
   981                           ;tmr0_config.c: 50:     TMR0 = 178;
   982  008D  30B2               	movlw	178
   983  008E  1283               	bcf	3,5	;RP0=0, select bank0
   984  008F  1303               	bcf	3,6	;RP1=0, select bank0
   985  0090  0081               	movwf	1	;volatile
   986  0091                     l113:
   987  0091  0008               	return
   988  0092                     __end_of_initTmr0:
   989                           
   990                           	psect	text4
   991  0092                     __ptext4:	
   992 ;; *************** function _initOscFreq *****************
   993 ;; Defined at:
   994 ;;		line 13 in file "osc_config.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;  freq            1    wreg     unsigned char 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  freq            1    3[COMMON] unsigned char 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1008 ;;      Params:         0       0       0       0       0
  1009 ;;      Locals:         1       0       0       0       0
  1010 ;;      Temps:          0       2       0       0       0
  1011 ;;      Totals:         1       2       0       0       0
  1012 ;;Total ram usage:        3 bytes
  1013 ;; Hardware stack levels used: 1
  1014 ;; Hardware stack levels required when called: 2
  1015 ;; This function calls:
  1016 ;;		Nothing
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022  0092                     _initOscFreq:	
  1023                           ;psect for function _initOscFreq
  1024                           
  1025                           
  1026                           ;incstack = 0
  1027                           ; Regs used in _initOscFreq: [wreg-fsr0h+status,2+status,0]
  1028                           ;initOscFreq@freq stored from wreg
  1029  0092  00F7               	movwf	initOscFreq@freq
  1030  0093                     l972:
  1031                           
  1032                           ;osc_config.c: 14:     switch (freq){
  1033  0093  28B5               	goto	l986
  1034  0094                     l974:
  1035                           
  1036                           ;osc_config.c: 16:             OSCCONbits.IRCF = 0b100;
  1037  0094  1683               	bsf	3,5	;RP0=1, select bank1
  1038  0095  1303               	bcf	3,6	;RP1=0, select bank1
  1039  0096  080F               	movf	15,w	;volatile
  1040  0097  398F               	andlw	-113
  1041  0098  3840               	iorlw	64
  1042  0099  008F               	movwf	15	;volatile
  1043                           
  1044                           ;osc_config.c: 17:             break;
  1045  009A  28CD               	goto	l87
  1046  009B                     l976:
  1047                           
  1048                           ;osc_config.c: 19:             OSCCONbits.IRCF = 0b101;
  1049  009B  1683               	bsf	3,5	;RP0=1, select bank1
  1050  009C  1303               	bcf	3,6	;RP1=0, select bank1
  1051  009D  080F               	movf	15,w	;volatile
  1052  009E  398F               	andlw	-113
  1053  009F  3850               	iorlw	80
  1054  00A0  008F               	movwf	15	;volatile
  1055                           
  1056                           ;osc_config.c: 20:             break;
  1057  00A1  28CD               	goto	l87
  1058  00A2                     l978:
  1059                           
  1060                           ;osc_config.c: 22:             OSCCONbits.IRCF = 0b110;
  1061  00A2  1683               	bsf	3,5	;RP0=1, select bank1
  1062  00A3  1303               	bcf	3,6	;RP1=0, select bank1
  1063  00A4  080F               	movf	15,w	;volatile
  1064  00A5  398F               	andlw	-113
  1065  00A6  3860               	iorlw	96
  1066  00A7  008F               	movwf	15	;volatile
  1067                           
  1068                           ;osc_config.c: 23:             break;
  1069  00A8  28CD               	goto	l87
  1070  00A9                     l980:
  1071                           
  1072                           ;osc_config.c: 25:             OSCCONbits.IRCF = 0b111;
  1073  00A9  3070               	movlw	112
  1074  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  1075  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  1076  00AC  048F               	iorwf	15,f	;volatile
  1077                           
  1078                           ;osc_config.c: 26:             break;
  1079  00AD  28CD               	goto	l87
  1080  00AE                     l982:
  1081                           
  1082                           ;osc_config.c: 28:             OSCCONbits.IRCF = 0b110;
  1083  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  1084  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  1085  00B0  080F               	movf	15,w	;volatile
  1086  00B1  398F               	andlw	-113
  1087  00B2  3860               	iorlw	96
  1088  00B3  008F               	movwf	15	;volatile
  1089                           
  1090                           ;osc_config.c: 29:             break;
  1091  00B4  28CD               	goto	l87
  1092  00B5                     l986:
  1093  00B5  0877               	movf	initOscFreq@freq,w
  1094  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1095  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1096  00B8  00A0               	movwf	??_initOscFreq
  1097  00B9  01A1               	clrf	??_initOscFreq+1
  1098                           
  1099                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1100                           ; Switch size 1, requested type "simple"
  1101                           ; Number of cases is 1, Range of values is 0 to 0
  1102                           ; switch strategies available:
  1103                           ; Name         Instructions Cycles
  1104                           ; simple_byte            4     3 (average)
  1105                           ; direct_byte           11     8 (fixed)
  1106                           ; jumptable            260     6 (fixed)
  1107                           ;	Chosen strategy is simple_byte
  1108  00BA  0821               	movf	??_initOscFreq+1,w
  1109  00BB  3A00               	xorlw	0	; case 0
  1110  00BC  1903               	skipnz
  1111  00BD  28BF               	goto	l1098
  1112  00BE  28AE               	goto	l982
  1113  00BF                     l1098:
  1114                           
  1115                           ; Switch size 1, requested type "simple"
  1116                           ; Number of cases is 4, Range of values is 1 to 8
  1117                           ; switch strategies available:
  1118                           ; Name         Instructions Cycles
  1119                           ; simple_byte           13     7 (average)
  1120                           ; direct_byte           35    11 (fixed)
  1121                           ; jumptable            263     9 (fixed)
  1122                           ;	Chosen strategy is simple_byte
  1123  00BF  0820               	movf	??_initOscFreq,w
  1124  00C0  3A01               	xorlw	1	; case 1
  1125  00C1  1903               	skipnz
  1126  00C2  2894               	goto	l974
  1127  00C3  3A03               	xorlw	3	; case 2
  1128  00C4  1903               	skipnz
  1129  00C5  289B               	goto	l976
  1130  00C6  3A06               	xorlw	6	; case 4
  1131  00C7  1903               	skipnz
  1132  00C8  28A2               	goto	l978
  1133  00C9  3A0C               	xorlw	12	; case 8
  1134  00CA  1903               	skipnz
  1135  00CB  28A9               	goto	l980
  1136  00CC  28AE               	goto	l982
  1137  00CD                     l87:
  1138                           
  1139                           ;osc_config.c: 31:     OSCCONbits.SCS = 1;
  1140  00CD  140F               	bsf	15,0	;volatile
  1141  00CE                     l92:
  1142  00CE  0008               	return
  1143  00CF                     __end_of_initOscFreq:
  1144                           
  1145                           	psect	text5
  1146  00CF                     __ptext5:	
  1147 ;; *************** function _isr *****************
  1148 ;; Defined at:
  1149 ;;		line 52 in file "usart-main.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;		None
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;		None
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, status,2, status,0, pclath, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1163 ;;      Params:         0       0       0       0       0
  1164 ;;      Locals:         0       0       0       0       0
  1165 ;;      Temps:          3       0       0       0       0
  1166 ;;      Totals:         3       0       0       0       0
  1167 ;;Total ram usage:        3 bytes
  1168 ;; Hardware stack levels used: 1
  1169 ;; Hardware stack levels required when called: 1
  1170 ;; This function calls:
  1171 ;;		_tmr0Reset
  1172 ;; This function is called by:
  1173 ;;		Interrupt level 1
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177  00CF                     _isr:	
  1178                           ;psect for function _isr
  1179                           
  1180  00CF                     i1l784:
  1181                           
  1182                           ;usart-main.c: 53:     if (T0IF){
  1183  00CF  1D0B               	btfss	11,2	;volatile
  1184  00D0  28D2               	goto	u2_21
  1185  00D1  28D3               	goto	u2_20
  1186  00D2                     u2_21:
  1187  00D2  28ED               	goto	i1l794
  1188  00D3                     u2_20:
  1189  00D3                     i1l786:
  1190                           
  1191                           ;usart-main.c: 54:         milis++;
  1192  00D3  3001               	movlw	1
  1193  00D4  00F4               	movwf	??_isr
  1194  00D5  0874               	movf	??_isr,w
  1195  00D6  07F2               	addwf	_milis,f
  1196                           
  1197                           ;usart-main.c: 55:         if (milis == 4){
  1198  00D7  3004               	movlw	4
  1199  00D8  0672               	xorwf	_milis,w
  1200  00D9  1D03               	btfss	3,2
  1201  00DA  28DC               	goto	u3_21
  1202  00DB  28DD               	goto	u3_20
  1203  00DC                     u3_21:
  1204  00DC  28E8               	goto	i1l792
  1205  00DD                     u3_20:
  1206  00DD                     i1l788:
  1207                           
  1208                           ;usart-main.c: 56:             pulse = !pulse;
  1209  00DD  0871               	movf	_pulse,w
  1210  00DE  1903               	btfsc	3,2
  1211  00DF  28E1               	goto	u4_21
  1212  00E0  28E3               	goto	u4_20
  1213  00E1                     u4_21:
  1214  00E1  3001               	movlw	1
  1215  00E2  28E4               	goto	u5_20
  1216  00E3                     u4_20:
  1217  00E3  3000               	movlw	0
  1218  00E4                     u5_20:
  1219  00E4  00F4               	movwf	??_isr
  1220  00E5  0874               	movf	??_isr,w
  1221  00E6  00F1               	movwf	_pulse
  1222  00E7                     i1l790:
  1223                           
  1224                           ;usart-main.c: 57:             milis = 0;
  1225  00E7  01F2               	clrf	_milis
  1226  00E8                     i1l792:
  1227                           
  1228                           ;usart-main.c: 59:         tmr0Reset();
  1229  00E8  120A  118A  2150  120A  118A  	fcall	_tmr0Reset
  1230  00ED                     i1l794:
  1231                           
  1232                           ;usart-main.c: 61:     if (RBIF){
  1233  00ED  1C0B               	btfss	11,0	;volatile
  1234  00EE  28F0               	goto	u6_21
  1235  00EF  28F1               	goto	u6_20
  1236  00F0                     u6_21:
  1237  00F0  28FC               	goto	i1l64
  1238  00F1                     u6_20:
  1239  00F1                     i1l796:
  1240                           
  1241                           ;usart-main.c: 62:         if (!PORTBbits.RB0){
  1242  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1243  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1244  00F3  1806               	btfsc	6,0	;volatile
  1245  00F4  28F6               	goto	u7_21
  1246  00F5  28F7               	goto	u7_20
  1247  00F6                     u7_21:
  1248  00F6  28FA               	goto	i1l800
  1249  00F7                     u7_20:
  1250  00F7                     i1l798:
  1251                           
  1252                           ;usart-main.c: 63:             spst = 1;
  1253  00F7  01F0               	clrf	_spst
  1254  00F8  0AF0               	incf	_spst,f
  1255                           
  1256                           ;usart-main.c: 64:         }
  1257  00F9  28FB               	goto	i1l802
  1258  00FA                     i1l800:
  1259                           
  1260                           ;usart-main.c: 66:             spst = 0;
  1261  00FA  01F0               	clrf	_spst
  1262  00FB                     i1l802:
  1263                           
  1264                           ;usart-main.c: 68:         INTCONbits.RBIF = 0;
  1265  00FB  100B               	bcf	11,0	;volatile
  1266  00FC                     i1l64:
  1267  00FC  0876               	movf	??_isr+2,w
  1268  00FD  008A               	movwf	10
  1269  00FE  0E75               	swapf	??_isr+1,w
  1270  00FF  0083               	movwf	3
  1271  0100  0EFE               	swapf	btemp,f
  1272  0101  0E7E               	swapf	btemp,w
  1273  0102  0009               	retfie
  1274  0103                     __end_of_isr:
  1275                           
  1276                           	psect	intentry
  1277  0004                     __pintentry:	
  1278                           ;incstack = 0
  1279                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1280                           
  1281  0004                     interrupt_function:
  1282  007E                     saved_w	set	btemp
  1283  0004  00FE               	movwf	btemp
  1284  0005  0E03               	swapf	3,w
  1285  0006  00F5               	movwf	??_isr+1
  1286  0007  080A               	movf	10,w
  1287  0008  00F6               	movwf	??_isr+2
  1288  0009  120A  118A  28CF   	ljmp	_isr
  1289                           
  1290                           	psect	text6
  1291  0150                     __ptext6:	
  1292 ;; *************** function _tmr0Reset *****************
  1293 ;; Defined at:
  1294 ;;		line 53 in file "tmr0_config.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1308 ;;      Params:         0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0
  1311 ;;      Totals:         0       0       0       0       0
  1312 ;;Total ram usage:        0 bytes
  1313 ;; Hardware stack levels used: 1
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_isr
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321  0150                     _tmr0Reset:	
  1322                           ;psect for function _tmr0Reset
  1323                           
  1324  0150                     i1l708:	
  1325                           ;incstack = 0
  1326                           ; Regs used in _tmr0Reset: [wreg]
  1327                           
  1328                           
  1329                           ;tmr0_config.c: 54:     INTCONbits.T0IF = 0;
  1330  0150  110B               	bcf	11,2	;volatile
  1331  0151                     i1l710:
  1332                           
  1333                           ;tmr0_config.c: 55:     TMR0 = 178;
  1334  0151  30B2               	movlw	178
  1335  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1336  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1337  0154  0081               	movwf	1	;volatile
  1338  0155                     i1l116:
  1339  0155  0008               	return
  1340  0156                     __end_of_tmr0Reset:
  1341  007E                     btemp	set	126	;btemp
  1342  007E                     wtemp0	set	126
  1343                           
  1344                           	psect	idloc
  1345                           
  1346                           ;Config register IDLOC0 @ 0x2000
  1347                           ;	unspecified, using default values
  1348  2000                     	org	8192
  1349  2000  3FFF               	dw	16383
  1350                           
  1351                           ;Config register IDLOC1 @ 0x2001
  1352                           ;	unspecified, using default values
  1353  2001                     	org	8193
  1354  2001  3FFF               	dw	16383
  1355                           
  1356                           ;Config register IDLOC2 @ 0x2002
  1357                           ;	unspecified, using default values
  1358  2002                     	org	8194
  1359  2002  3FFF               	dw	16383
  1360                           
  1361                           ;Config register IDLOC3 @ 0x2003
  1362                           ;	unspecified, using default values
  1363  2003                     	org	8195
  1364  2003  3FFF               	dw	16383
  1365                           
  1366                           	psect	config
  1367                           
  1368                           ;Config register CONFIG1 @ 0x2007
  1369                           ;	Oscillator Selection bits
  1370                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1371                           ;	Watchdog Timer Enable bit
  1372                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1373                           ;	Power-up Timer Enable bit
  1374                           ;	PWRTE = OFF, PWRT disabled
  1375                           ;	RE3/MCLR pin function select bit
  1376                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1377                           ;	Code Protection bit
  1378                           ;	CP = OFF, Program memory code protection is disabled
  1379                           ;	Data Code Protection bit
  1380                           ;	CPD = OFF, Data memory code protection is disabled
  1381                           ;	Brown Out Reset Selection bits
  1382                           ;	BOREN = OFF, BOR disabled
  1383                           ;	Internal External Switchover bit
  1384                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1385                           ;	Fail-Safe Clock Monitor Enabled bit
  1386                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1387                           ;	Low Voltage Programming Enable bit
  1388                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1389                           ;	In-Circuit Debugger Mode bit
  1390                           ;	DEBUG = 0x1, unprogrammed default
  1391  2007                     	org	8199
  1392  2007  20D4               	dw	8404
  1393                           
  1394                           ;Config register CONFIG2 @ 0x2008
  1395                           ;	Brown-out Reset Selection bit
  1396                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1397                           ;	Flash Program Memory Self Write Enable bits
  1398                           ;	WRT = OFF, Write protection off
  1399  2008                     	org	8200
  1400  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      11
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_initOscFreq
    _main->_stepSet

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_initOscFreq
    _main->_initTmr0

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     295
                                              2 BANK0      1     1      0
                        _initOscFreq
                           _initTmr0
                              _setup
                            _stepSet
 ---------------------------------------------------------------------------------
 (1) _stepSet                                              2     1      1     152
                                              3 COMMON     1     0      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTmr0                                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initOscFreq                                          3     3      0      22
                                              3 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
                          _tmr0Reset
 ---------------------------------------------------------------------------------
 (3) _tmr0Reset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initOscFreq
   _initTmr0
   _setup
   _stepSet

 _isr (ROOT)
   _tmr0Reset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3       3       5        3.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E      12        0.0%
ABS                  0      0       E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Sep 14 19:00:01 2022

                     l80 014F                       l75 013F                       l92 00CE  
                     l69 0119                       l78 014E                       l87 00CD  
                     u90 0148                       u91 0147                      l103 0087  
                    l113 0091                      l720 0134                      l712 0129  
                    l722 013C                      l714 012D                      l724 013D  
                    l716 0131                      l726 013E                      l718 0132  
                    l980 00A9                      l972 0093                      l982 00AE  
                    l974 0094                      l976 009B                      l992 0029  
                    l978 00A2                      l986 00B5                      l994 002A  
                    l996 002F                      l998 0036                      _isr 00CF  
                   l1000 003D                     l1002 0044                     l1004 004B  
                   l1012 005E                     l1014 008D                     l1006 0052  
                   l1030 0108                     l1008 0059                     l1024 0143  
                   l1032 010E                     l1026 0148                     l1028 0103  
                   l1094 0068                     l1096 0082                     l1098 00BF  
                   ?_isr 0074                     _T0IF 005A                     _RBIF 0058  
                   i1l64 00FC                     _TMR0 0001                     _WPUB 0095  
                   u2_20 00D3                     u2_21 00D2                     u3_20 00DD  
                   u3_21 00DC                     u4_20 00E3                     u4_21 00E1  
                   u5_20 00E4                     u6_20 00F1                     u6_21 00F0  
                   u7_20 00F7                     u7_21 00F6                     _Fosc 007A  
                   _cont 0073                     _main 0103                     btemp 007E  
                   _spst 0070                     start 000C             ?_initOscFreq 0074  
                  ??_isr 0074                    ?_main 0074                    _ANSEL 0188  
                  i1l116 0155                    i1l710 0151                    i1l800 00FA  
                  i1l802 00FB                    i1l708 0150                    i1l790 00E7  
                  i1l792 00E8                    i1l784 00CF                    i1l786 00D3  
                  i1l794 00ED                    i1l796 00F1                    i1l788 00DD  
                  i1l798 00F7                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _milis 0072                    _setup 0129  
                  _pulse 0071                    pclath 000A          __end_of_stepSet 0150  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0129                   ??_main 0022                   ?_setup 0074  
                 _ANSELH 0189                   _PS_val 0078         __end_of_initTmr0 0092  
           __pdataCOMMON 0078                   saved_w 007E                ??_stepSet 0078  
__end_of__initialization 0025           __pcstackCOMMON 0074            __end_of_setup 0140  
         _OPTION_REGbits 0081                  ??_setup 0077               __pmaintext 0103  
             __pintentry 0004                ?_initTmr0 0020                  __ptext1 0140  
                __ptext2 0129                  __ptext3 0029                  __ptext4 0092  
                __ptext5 00CF                  __ptext6 0150         stepSet@set_pulse 0077  
                _stepSet 0140        __end_of_tmr0Reset 0156     end_of_initialization 0025  
             ??_initTmr0 0077                _PORTBbits 0006                _PORTCbits 0007  
          __pidataCOMMON 0156      start_initialization 000F              __end_of_isr 0103  
            stepSet@push 0020            ??_initOscFreq 0020              __pbssCOMMON 0070  
              ___latbits 0002            __pcstackBANK0 0020      __end_of_initOscFreq 00CF  
               ?_stepSet 0077        interrupt_function 0004                 _IOCBbits 0096  
              _tmr0Reset 0150               ?_tmr0Reset 0074              _initOscFreq 0092  
               _initTmr0 0029        initTmr0@prescaler 0020               _INTCONbits 000B  
               intlevel1 0000              ??_tmr0Reset 0074               _OSCCONbits 008F  
        initOscFreq@freq 0077  
